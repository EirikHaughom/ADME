openapi: 3.0.3
info:
  title: OSDU CRS Catalog Service
  version: 3.0.0
  description: Coordinate Reference System (CRS) Catalog Service. Provides endpoints to query and manage Coordinate Reference Systems (CRS) and Coordinate Transformations (CT).
  contact:
    name: OSDU Forum
    email: membership@opengroup.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
x-ms-connector-metadata:
  - propertyName: Website
    propertyValue: https://osduforum.org
  - propertyName: Privacy policy
    propertyValue: https://www.opengroup.org/privacy
  - propertyName: Categories
    propertyValue: Data
servers:
  - url: /api/crs/catalog
tags:
  - name: info-api-v3
    description: Version info endpoint
  - name: coordinate-transformations-api-v3
    description: Endpoints for managing and querying Coordinate Transformations (CT)
  - name: coordinate-reference-systems-api-v3
    description: Endpoints for managing and querying Coordinate Reference Systems (CRS)
  - name: area-of-use-api-v3
    description: Endpoints related to Area Of Use (AOU) checks for CRS and CT records
security:
  - Authorization: []
paths:
  /v3/coordinate-reference-system:
    get:
      tags:
        - coordinate-reference-systems-api-v3
      summary: Get a specific Coordinate Reference System record
      description: Retrieves a Coordinate Reference System (CRS) record by its `recordId` or `dataId`.
      operationId: GetCoordinateReferenceSystemRecord
      parameters:
        - $ref: '#/components/parameters/RecordIdQueryParam'
        - $ref: '#/components/parameters/DataIdQueryParam'
        - $ref: '#/components/parameters/DataPartitionIdHeader'
      responses:
        '200':
          description: Successfully retrieved Coordinate Reference System record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    post:
      tags:
        - coordinate-reference-systems-api-v3
      summary: Search for Coordinate Reference Systems
      description: Searches for Coordinate Reference System (CRS) records based on specified query criteria.
      operationId: SearchCoordinateReferenceSystems
      parameters:
        - $ref: '#/components/parameters/DataPartitionIdHeader'
      requestBody:
        description: Query criteria for searching Coordinate Reference Systems.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinateReferenceSystemsQuery'
      responses:
        '200':
          description: Successfully retrieved matching Coordinate Reference System records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound' # Or specific if query itself not found
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /v3/coordinate-transformation:
    get:
      tags:
        - coordinate-transformations-api-v3
      summary: Get a specific Coordinate Transformation record
      description: Retrieves a Coordinate Transformation (CT) record by its `recordId` or `dataId`.
      operationId: GetCoordinateTransformationRecord
      parameters:
        - $ref: '#/components/parameters/RecordIdQueryParam'
        - $ref: '#/components/parameters/DataIdQueryParam'
        - $ref: '#/components/parameters/DataPartitionIdHeader'
      responses:
        '200':
          description: Successfully retrieved Coordinate Transformation record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    post:
      tags:
        - coordinate-transformations-api-v3
      summary: Search for Coordinate Transformations
      description: Searches for Coordinate Transformation (CT) records based on specified query criteria.
      operationId: SearchCoordinateTransformations
      parameters:
        - $ref: '#/components/parameters/DataPartitionIdHeader'
      requestBody:
        description: Query criteria for searching Coordinate Transformations.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinateTransformationsQuery'
      responses:
        '200':
          description: Successfully retrieved matching Coordinate Transformation records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /v3/info:
    get:
      tags:
        - info-api-v3
      summary: Get service build and version information
      description: Provides build and git related information for the CRS Catalog Service. This endpoint is typically public.
      operationId: GetInfo
      parameters:
        - $ref: '#/components/parameters/DataPartitionIdHeader' # Still include for consistency, even if not strictly enforced by security
      responses:
        '200':
          description: Successfully retrieved service version information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
        '400':
          $ref: '#/components/responses/BadRequest' # If data-partition-id is malformed
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      security: [] # Explicitly public
  /v3/points-in-aou:
    post:
      tags:
        - area-of-use-api-v3
      summary: Check if points fall within the Area of Use of a CRS or CT record
      description: Determines if a list of geographic points are within the defined Area of Use (AOU) bounding box of a specified CRS or CT record.
      operationId: CheckPointsInAreaOfUse
      parameters:
        - $ref: '#/components/parameters/DataPartitionIdHeader'
      requestBody:
        description: Specifies the record and the list of points to check against its Area of Use.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InPolygonQuery'
      responses:
        '200':
          description: Successfully processed the points and returned results of AOU check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsInAouSearchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound' # If the recordId in InPolygonQuery is not found
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
components:
  schemas:
    AggregationResponse:
      type: object
      properties:
        key:
          type: string
          example: "projected"
        count:
          type: integer
          format: int64
          example: 150
    AppError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: "Invalid input provided."
        reason:
          type: string
          example: "Query parameter 'recordId' is malformed."
    BaseCRS:
      type: object
      description: Defines the Base Coordinate Reference System.
      properties:
        id:
          type: string
          description: Record ID of the base CRS.
          example: "osdu:reference-data--CoordinateReferenceSystem:Geodetic2D:EPSG::4326:"
          nullable: true
        name:
          type: string
          description: Name of the base CRS.
          example: "WGS 84"
          nullable: true
    ConnectedOuterService:
      type: object
      properties:
        name:
          type: string
          example: "Search Service"
        version:
          type: string
          example: "v2.5.1"
    CoordinateReferenceSystemsQuery:
      type: object
      description: Query criteria for searching Coordinate Reference Systems (CRS).
      properties:
        id:
          type: string
          description: Corresponds to ID field on CRS records (e.g., `EPSG::4326`).
          example: "EPSG::4326"
          nullable: true
        name:
          type: string
          description: Name of the CRS. Searches for names containing the string (case-insensitive).
          example: "WGS 84"
          nullable: true
        code:
          type: string
          description: Code of the CRS (e.g., "4326").
          example: "4326"
          nullable: true
        codeSpace:
          type: string
          description: CodeSpace or authority of the CRS (e.g., "EPSG").
          example: "EPSG"
          nullable: true
        kind:
          type: string
          description: Corresponds to Kind field on CRS records (e.g., "projected", "geodetic").
          example: "geodetic"
          nullable: true
        coordinateReferenceSystemType:
          type: string
          description: Type of CRS, e.g., BoundCRS, ProjectedCRS, GeodeticCRS, VerticalCRS.
          example: "GeodeticCRS"
          nullable: true
        datum:
          $ref: '#/components/schemas/Datum'
          nullable: true
        baseCRS:
          $ref: '#/components/schemas/BaseCRS'
          nullable: true
        horizontalAxisUnitId:
          type: string
          description: Record ID of the unit for the horizontal axis (e.g., "osdu:reference-data--UnitOfMeasure:dega:").
          example: "osdu:reference-data--UnitOfMeasure:dega:"
          nullable: true
        verticalAxisUnitId:
          type: string
          description: Record ID of the unit for the vertical axis.
          example: "osdu:reference-data--UnitOfMeasure:m:"
          nullable: true
        extent:
          type: string
          description: Description of extent. Corresponds to PreferredUsage.Extent.Description in the record. All entities with PreferredUsage.Extent.Description containing the search string will be returned. Wildcard is not supported.
          example: "World"
          nullable: true
        latitude:
          type: number
          format: double
          description: Latitude point for searching within the CRS bounding box. Must be used with `longitude`.
          example: 48.8566
          nullable: true
        longitude:
          type: number
          format: double
          description: Longitude point for searching within the CRS bounding box. Must be used with `latitude`.
          example: 2.3522
          nullable: true
        persistableReferenceSearch:
          type: string
          description: Search by persistable reference string.
          example: "osdu:reference-data--CoordinateReferenceSystem:Geodetic2D:EPSG::4326:"
          nullable: true
        includeDeprecated:
          type: boolean
          description: Whether to include deprecated records (InactiveIndicator=true). Default is false.
          default: false
          nullable: true
        returnAllFields:
          type: boolean
          description: Whether to return all fields in the record. Default is false, returning a subset.
          default: false
          nullable: true
        returnedFields:
          type: array
          description: Specific list of fields to return in the results.
          items:
            type: string
            example: "data.Name"
          nullable: true
        returnBoundGeographic2DAndWgs84:
          type: boolean
          description: If true, filters for CRS with Kind "BoundGeographic2D" or (Kind "geographic 2D" AND Code "4326" AND CodeSpace "EPSG").
          nullable: true
        returnBoundProjectedAndProjectedBasedOnWgs84:
          type: boolean
          description: If true, filters for CRS with Kind "BoundProjected" or (Kind "projected" AND BaseCRS.AuthorityCode.Code "4326").
          nullable: true
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return. Default is implementation-specific.
          example: 100
          nullable: true
        offset:
          type: integer
          format: int32
          description: Number of initial results to skip. Used for pagination.
          example: 0
          nullable: true
    CoordinateTransformationsQuery:
      type: object
      description: Query criteria for searching Coordinate Transformations (CT).
      properties:
        id:
          type: string
          description: Corresponds to ID field on CT records (e.g., `EPSG::1600`).
          example: "EPSG::1600"
          nullable: true
        name:
          type: string
          description: Name of the CT. Searches for names containing the string (case-insensitive).
          example: "AGD66 to GDA94 (1)"
          nullable: true
        code:
          type: string
          description: Code of the CT (e.g., "1600").
          example: "1600"
          nullable: true
        codeSpace:
          type: string
          description: CodeSpace or authority of the CT (e.g., "EPSG").
          example: "EPSG"
          nullable: true
        kind:
          type: string
          description: "Type of transformation (e.g., \"Transformation\", \"ConcatenatedOperation\", \"VerticalTransformation\"). Special values: \"ExcludeVertical\" (default), \"All\"."
          example: "Transformation"
          default: "ExcludeVertical"
          nullable: true
        sourceCRS:
          type: string
          description: Record ID of the source CRS (e.g., "osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4202:"). Also searches TargetCRS.TargetCRSID due to interchangeability.
          example: "osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4202:"
          nullable: true
        targetCRS:
          type: string
          description: Record ID of the target CRS (e.g., "osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4283:"). Also searches SourceCRS.SourceCRSID due to interchangeability.
          example: "osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4283:"
          nullable: true
        latitude:
          type: number
          format: double
          description: Latitude point for searching within the CT bounding box. Must be used with `longitude`.
          example: -33.8688
          nullable: true
        longitude:
          type: number
          format: double
          description: Longitude point for searching within the CT bounding box. Must be used with `latitude`.
          example: 151.2093
          nullable: true
        includeDeprecated:
          type: boolean
          description: Whether to include deprecated records (InactiveIndicator=true). Default is false.
          default: false
          nullable: true
        returnAllFields:
          type: boolean
          description: Whether to return all fields in the record. Default is false, returning a subset.
          default: false
          nullable: true
        returnedFields:
          type: array
          description: Specific list of fields to return in the results.
          items:
            type: string
            example: "data.Name"
          nullable: true
        limit:
          type: integer
          format: int32
          description: Maximum number of results to return. Default is implementation-specific.
          example: 50
          nullable: true
        offset:
          type: integer
          format: int32
          description: Number of initial results to skip. Used for pagination.
          example: 0
          nullable: true
    CursorQueryResponse:
      type: object
      properties:
        cursor:
          type: string
          example: "eyJOFFSETCI6MTAwMCwiQUNDRVNTX1RJTUUiOjE1NjM4 quantifiableV3In0="
          nullable: true
        results:
          type: array
          items:
            type: object
            additionalProperties:
              type: object # Actual structure depends on the entity being returned
            example: [{"id": "EPSG::4326", "data": {"Name": "WGS 84"}}]
          nullable: true
        totalCount:
          type: integer
          format: int64
          example: 1250
          nullable: true
    Datum:
      type: object
      description: Defines a geodetic datum.
      properties:
        name:
          type: string
          description: Human-readable name of the datum.
          example: "World Geodetic System 1984"
          nullable: true
        code:
          type: string
          description: Code or identifier for the datum within its codespace.
          example: "6326" # Example: EPSG datum code for WGS 84
          nullable: true
        codeSpace:
          type: string
          description: Authority or codespace that defines the datum code (e.g., EPSG).
          example: "EPSG"
          nullable: true
    InPolygonQuery:
      type: object
      description: Query for checking points against the Area of Use of a CRS or CT record.
      properties:
        recordId:
          type: string
          description: Record ID of the CRS or CT to check points against.
          example: "osdu:reference-data--CoordinateReferenceSystem:Projected:EPSG::32610:"
          nullable: true # Either recordId or dataId should be provided
        dataId:
          type: string
          description: Data ID (e.g. source:authority:code:version) of the CRS or CT record.
          example: "osdu:master-data--WellboreTrajectory:NoIDProvided-0001:"
          nullable: true # Either recordId or dataId should be provided
        points:
          type: array
          description: List of points to check against the record's Area of Use bounding box.
          items:
            $ref: '#/components/schemas/Point'
          minItems: 1
        returnedFields:
          type: array
          description: Specific list of fields to return for the record if needed (rarely used in this context).
          items:
            type: string
            example: "data.Name"
          nullable: true
        limit: # Typically not used for points-in-aou, but keeping for structural consistency from original
          type: integer
          format: int32
          description: Corresponds to limit on search service. Default is to return all found entities.
          nullable: true
        offset: # Typically not used for points-in-aou
          type: integer
          format: int32
          description: Corresponds to offset on search service.
          nullable: true
    Point:
      type: object
      description: A geographic point defined by latitude and longitude.
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          description: Latitude in decimal degrees.
          example: 34.0522
        longitude:
          type: number
          format: double
          minimum: -180 # Standard longitude range
          maximum: 180  # Standard longitude range
          description: Longitude in decimal degrees.
          example: -118.2437
    PointsInAouSearchPoint:
      type: object
      description: Represents a point that did not fall within the record's Area of Use bounding box, including its approximate distance outside.
      properties:
        index:
          type: integer
          format: int32
          description: Zero-based index of the point in the input `points` array.
          example: 0
        point:
          $ref: '#/components/schemas/Point'
        approximateKmDistanceOutside:
          type: integer
          format: int32
          description: Approximate distance in kilometers the point is outside the record's bounding box. Present if the point is outside.
          example: 15
          nullable: true
    PointsInAouSearchResult:
      type: object
      description: Results of checking points against a record's Area of Use, listing points that failed the bounding box check.
      properties:
        bboxFailedPoints:
          type: array
          description: A list of points that did not land within the bounding box of the record's Area of Use.
          items:
            $ref: '#/components/schemas/PointsInAouSearchPoint'
          nullable: true
        maxDistKmOutsideBBox:
          type: integer
          format: int32
          description: The maximum distance (in km) any checked point was found to be outside the bounding box.
          example: 25
          nullable: true
    QueryResponse:
      type: object
      description: Standard query results structure from the Search service.
      properties:
        results:
          type: array
          items:
            type: object
            additionalProperties:
              type: object # Actual structure depends on the entity
            example: [{"id": "EPSG::4326", "data": {"Name": "WGS 84"}}]
          nullable: true
        totalCount:
          type: integer
          format: int64
          example: 102
          nullable: true
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/AggregationResponse'
          nullable: true
        phraseSuggestions: # This field might not be standard for all search responses.
          type: array
          items:
            type: string
            example: ["World Geodetic System"]
          nullable: true
    SearchResponse:
      type: object
      description: Encapsulates search results, potentially including cursor-based or standard query responses.
      properties:
        query:
          type: string
          description: The actual query string sent to the underlying Search service.
          example: "kind:projected AND data.Name:UTM*"
          nullable: true
        searchResults:
          $ref: '#/components/schemas/QueryResponse'
          nullable: true # One of searchResults or cursorSearchResults might be present
        cursorSearchResults:
          $ref: '#/components/schemas/CursorQueryResponse'
          nullable: true # One of searchResults or cursorSearchResults might be present
    VersionInfo:
      type: object
      properties:
        groupId:
          type: string
          example: "org.osdu"
        artifactId:
          type: string
          example: "crs-catalog-service"
        version:
          type: string
          example: "3.0.0"
        buildTime:
          type: string
          format: date-time # Assuming it's a timestamp
          example: "2023-10-27T14:30:00Z"
        branch:
          type: string
          example: "release/3.0"
        commitId:
          type: string
          example: "f0a1b2c3d4e5"
        commitMessage:
          type: string
          example: "Release version 3.0.0"
        connectedOuterServices:
          type: array
          items:
            $ref: '#/components/schemas/ConnectedOuterService'
          nullable: true
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT # Or "Authorization" as in original; JWT is a common format.
      description: "Bearer token for API authorization. Example: \"Bearer {token}\""
  parameters:
    DataPartitionIdHeader:
      name: data-partition-id
      in: header
      description: Tenant Identifier (Data Partition ID) for data isolation.
      required: true
      schema:
        type: string
        example: "osdu-tenant1"
      x-ms-summary: Data Partition ID
    RecordIdQueryParam:
      name: recordId
      in: query
      description: The unique record identifier (e.g., `osdu:reference-data--CoordinateReferenceSystem:Projected:EPSG::32610:`).
      required: false # Typically one of recordId or dataId is used
      schema:
        type: string
        example: "osdu:reference-data--CoordinateReferenceSystem:Projected:EPSG::32610:"
      x-ms-summary: Record ID
    DataIdQueryParam:
      name: dataId
      in: query
      description: The data identifier (e.g., `source:authority:code:version` or `namespace:source:entity-type:id`).
      required: false # Typically one of recordId or dataId is used
      schema:
        type: string
        example: "osdu:crs-catalog:CoordinateReferenceSystem:EPSG::32610"
      x-ms-summary: Data ID
  responses:
    BadRequest:
      description: Bad Request. The request was invalid, malformed, or cannot be otherwise served. Check the `reason` field in the response body for details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    Unauthorized:
      description: Unauthorized. Authentication is required and has failed or has not yet been provided. Ensure a valid bearer token is included in the `Authorization` header.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    Forbidden:
      description: Forbidden. The authenticated user does not have the necessary permissions to perform this action on the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    NotFound:
      description: Not Found. The requested resource (e.g., CRS record, CT record) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    Conflict:
      description: Conflict. The request could not be completed due to a conflict with the current state of the target resource (e.g., attempting to create a resource that already exists with a unique identifier).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    InternalServerError:
      description: Internal Server Error. An unexpected condition was encountered on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    BadGateway:
      description: Bad Gateway. The server, while acting as a gateway or proxy, received an invalid response from an upstream server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'
    ServiceUnavailable:
      description: Service Unavailable. The server is currently unable to handle the request due to a temporary overload or scheduled maintenance. Please try again later.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppError'