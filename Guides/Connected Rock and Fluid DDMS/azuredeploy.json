{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.17.1.54307",
            "templateHash": "1543618559284229187"
        }
    },
    "parameters": {
        "name": {
            "type": "string",
            "metadata": {
                "description": "The base name of the services. Most services will be appended with a service name (i.e. -redis)."
            }
        },
        "containerImage": {
            "type": "string",
            "defaultValue": "community.opengroup.org:5555/osdu/platform/domain-data-mgmt-services/rock-and-fluid-sample/rafs-ddms-services/rafs-ddms-services-v0-27-1:1630990d6bd460e8a8ed25be69778512346e9f10",
            "metadata": {
                "description": "The container image to use. See [OSDU Forum RAFS Container Registry](https://community.opengroup.org/osdu/platform/domain-data-mgmt-services/rock-and-fluid-sample/rafs-ddms-services/container_registry) for available images."
            }
        },
        "workloadProfile": {
            "type": "string",
            "defaultValue": "Consumption",
            "allowedValues": [
                "Consumption",
                "Premium"
            ],
            "metadata": {
                "description": "The workload profile to use for the container app. Consumption uses the `Consumption` profile, while Premium uses the `D4` profile. [Learn more](https://learn.microsoft.com/en-us/azure/container-apps/workload-profiles-overview#profile-types)."
            }
        },
        "osduEndpoint": {
            "type": "string",
            "defaultValue": "https://<your-adme-instance>.energy.azure.com/",
            "metadata": {
                "description": "The ADME endpoint to connect to."
            },
            "minLength": 26,
            "maxLength": 41
        },
        "dataPartitionId": {
            "type": "string",
            "defaultValue": "opendes",
            "metadata": {
                "description": "The data partition ID to use."
            },
            "minLength": 1,
            "maxLength": 31
        },
        "loggingLevel": {
            "type": "string",
            "defaultValue": "Debug",
            "allowedValues": [
                "Debug",
                "Info"
            ],
            "metadata": {
                "description": "The logging level to use. 'Debug' for detailed logs, 'Info' for standard logs."
            }
        },
        "enableRedisCache": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable Redis cache for the service. This improves reliability and performance, but the deployment will take longer time."
            }
        }
    },
    "variables": {
        "containerAppName": "[parameters('name')]",
        "containerName": "[concat(parameters('name'), '-container')]",
        "environmentName": "[concat(parameters('name'), '-env')]",
        "redisName": "[concat(parameters('name'), '-redis')]",
        "environmentResourceID": "[resourceId('Microsoft.App/managedEnvironments', variables('environmentName'))]",
        "redisResourceID": "[resourceId('Microsoft.Cache/Redis', variables('redisName'))]",
        "containerResourceID": "[resourceId('Microsoft.App/containerApps', variables('containerAppName'))]",
        "osduEndpoint": "[if(endsWith(parameters('osduEndpoint'), '/'), parameters('osduEndpoint'), concat(parameters('osduEndpoint'), '/'))]"
    },
    "resources": [
        {
            "apiVersion": "2023-05-01",
            "name": "[variables('containerAppName')]",
            "type": "Microsoft.App/containerApps",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('environmentResourceID')]"
            ],
            "properties": {
                "environmentId": "[variables('environmentResourceID')]",
                "configuration": {
                    "activeRevisionsMode": "Single",
                    "ingress": {
                        "external": true,
                        "transport": "auto",
                        "targetPort": 8080,
                        "allowInsecure": false
                    }
                },
                "template": {
                    "containers": [
                        {
                            "name": "[variables('containerName')]",
                            "image": "[parameters('containerImage')]",
                            "resources": {
                                "cpu": 2,
                                "memory": "4Gi"
                            },
                            "env": [
                                {
                                    "name": "SERVICE_NAME",
                                    "value": "rafs-ddms"
                                },
                                {
                                    "name": "DDMS_ID",
                                    "value": "rafs"
                                },
                                {
                                    "name": "OPENAPI_PREFIX",
                                    "value": "/api/rafs-ddms"
                                },
                                {
                                    "name": "URL_PREFIX",
                                    "value": "api/rafs-ddms"
                                },
                                {
                                    "name": "CLOUD_PROVIDER",
                                    "value": "azure"
                                },
                                {
                                    "name": "SERVICE_HOST_STORAGE",
                                    "value": "[concat(variables('osduEndpoint'), 'api/storage/v2')]"
                                },
                                {
                                    "name": "SERVICE_HOST_SCHEMA",
                                    "value": "[concat(variables('osduEndpoint'), 'api/schema-service/v1')]"
                                },
                                {
                                    "name": "SERVICE_HOST_PARTITION",
                                    "value": "[concat(variables('osduEndpoint'), 'api/partition/v1')]"
                                },
                                {
                                    "name": "SERVICE_HOST_DATASET",
                                    "value": "[concat(variables('osduEndpoint'), 'api/dataset/v1')]"
                                },
                                {
                                    "name": "SERVICE_HOST_LEGAL",
                                    "value": "[concat(variables('osduEndpoint'), 'api/legal/v1')]"
                                },
                                {
                                    "name": "SERVICE_HOST_SEARCH",
                                    "value": "[concat(variables('osduEndpoint'), 'api/search/v2')]"
                                },
                                {
                                    "name": "REQUEST_TIMEOUT",
                                    "value": "180"
                                },
                                {
                                    "name": "SERVICE_READINESS_URLS",
                                    "value": "[concat(variables('osduEndpoint'), 'api/storage/v2/liveness_check', ',', variables('osduEndpoint'), 'api/schema-service/v1/liveness_check')]"
                                },
                                {
                                    "name": "CACHE_ENABLE",
                                    "value": "[if(parameters('enableRedisCache'), 'True', 'False')]"
                                },
                                {
                                    "name": "CACHE_BACKEND",
                                    "value": "[if(parameters('enableRedisCache'), 'app.core.helpers.cache.backends.redis_cache.RedisCacheBackend', '')]"
                                },
                                {
                                    "name": "PARTITION",
                                    "value": "[parameters('dataPartitionId')]"
                                },
                                {
                                    "name": "LOGGING_LEVEL",
                                    "value": "[if(equals(parameters('loggingLevel'), 'Debug'), '10', '20')]"
                                },
                                {
                                    "name": "PYTHONUNBUFFERED",
                                    "value": "1"
                                }
                            ]
                        }
                    ],
                    "scale": {
                        "minReplicas": 1,
                        "maxReplicas": 3
                    }
                },
                "workloadProfileName": "[parameters('workloadProfile')]"
            }
        },
        {
            "apiVersion": "2023-05-01",
            "name": "[variables('environmentName')]",
            "type": "Microsoft.App/managedEnvironments",
            "location": "[resourceGroup().location]",
            "properties": {
                "zoneRedundant": false,
                "workloadProfiles": [
                    {
                        "workloadProfileType": "[if(equals(parameters('workloadProfile'), 'Consumption'), 'Consumption', 'D4')]",
                        "name": "[parameters('workloadProfile')]",
                        "minimumCount": "[if(equals(parameters('workloadProfile'), 'Consumption'), json('null'), 1)]",
                        "maximumCount": "[if(equals(parameters('workloadProfile'), 'Consumption'), json('null'), 3)]"
                    }
                ]
            }
        },
        {
            "apiVersion": "2024-03-01",
            "condition": "[parameters('enableRedisCache')]",
            "name": "[variables('redisName')]",
            "type": "Microsoft.Cache/Redis",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "Standard",
                    "family": "C",
                    "capacity": 2
                },
                "enableNonSslPort": false,
                "redisConfiguration": {
                    "aad-enabled": "true"
                },
                "redisVersion": "6",
                "disableAccessKeyAuthentication": false
            }
        },
        {
            "condition": "[parameters('enableRedisCache')]",
            "type": "Microsoft.ServiceLinker/linkers",
            "apiVersion": "2024-07-01-preview",
            "scope": "[concat('Microsoft.App/containerApps/', variables('containerAppName'))]",
            "name": "rediscache",
            "properties": {
                "clientType": "none",
                "targetService": {
                    "type": "AzureResource",
                    "id": "[concat(variables('redisResourceID'), '/databases/0')]"
                },
                "authInfo": {
                    "authType": "secret",
                    "name": "key",
                    "secretInfo": {
                        "secretType": "rawValue",
                        "value": "[listKeys(variables('redisResourceID'), '2023-08-01').primaryKey]"
                    }
                },
                "scope": "[variables('containerName')]",
                "configurationInfo": {
                    "customizedKeys": {
                        "AZURE_REDIS_HOST": "REDIS_HOSTNAME",
                        "AZURE_REDIS_PORT": "REDIS_PORT",
                        "AZURE_REDIS_DATABASE": "REDIS_DATABASE",
                        "AZURE_REDIS_SSL": "REDIS_SSL",
                        "AZURE_REDIS_PASSWORD": "REDIS_PASSWORD"
                    }
                }
            },
            "dependsOn": [
                "[variables('containerResourceID')]",
                "[variables('redisResourceID')]"
            ]
        }
    ],
    "outputs": {
        "swaggerEndpoint": {
            "type": "string",
            "value": "[concat('https://', reference(variables('containerResourceID')).configuration.ingress.fqdn, '/api/rafs-ddms/docs')]"
        }
    }
}