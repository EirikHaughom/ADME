{
	"info": {
		"_postman_id": "6a550104-1329-476d-b077-aafad31fd921",
		"name": "Azure Data Manager for Energy (M12)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19343608"
	},
	"item": [
		{
			"name": "Authenticate",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "getRefreshToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody)\r",
											"pm.environment.set(\"refresh_token\", data.refresh_token);\r",
											"pm.environment.set(\"access_token\", data.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "{{client_id}}/.default openid profile offline_access",
											"type": "text"
										},
										{
											"key": "code",
											"value": "",
											"description": "The authorization code is generated by browsing to https://login.microsoftonline.com/{{tenant_id}}/oauth2/v2.0/authorize?\nclient_id={{client_id}}\n&response_type=code\n&redirect_uri=http%3a%2f%2flocalhost%3a8080\n&response_mode=query\n&scope={client_id}%2f.default&state=12345&sso_reload=true",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "http://localhost:8080",
											"description": "The redirect URI needs to be added to as a Web Redirect on the App Registration (client_id)",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{tenant_id}}/oauth2/v2.0/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{tenant_id}}",
										"oauth2",
										"v2.0",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody)\r",
											"pm.environment.set(\"access_token\", data.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "{{client_id}}/.default openid profile offline_access",
											"type": "text"
										},
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{tenant_id}}/oauth2/v2.0/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{tenant_id}}",
										"oauth2",
										"v2.0",
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "App Registration",
					"item": [
						{
							"name": "getAccessToken appRegistration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody)\r",
											"pm.environment.set(\"access_token\", data.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "{{client_id}}/.default",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{tenant_id}}/oauth2/v2.0/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{tenant_id}}",
										"oauth2",
										"v2.0",
										"token"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CRS",
			"item": [
				{
					"name": "CRS Catalog",
					"item": [
						{
							"name": "Info",
							"item": [
								{
									"name": "info",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/crs/catalog/v2/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v2",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Health Check",
							"item": [
								{
									"name": "livenessCheck",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/crs/catalog/_ah/liveness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"_ah",
												"liveness_check"
											]
										}
									},
									"response": []
								},
								{
									"name": "readinessCheck",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/crs/catalog/_ah/readiness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"_ah",
												"readiness_check"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "v2",
							"item": [
								{
									"name": "area",
									"item": [
										{
											"name": "getAreasOfUse",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/area?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"area"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getAreaOfUse",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"laborum \",\n      \"code\": \"non\"\n    },\n    \"boundBox\": {\n      \"latMax\": -66796511.439960375,\n      \"latMin\": -44112507.202444196,\n      \"lonMax\": 60896089.27849847,\n      \"lonMin\": -30832729.060896248\n    },\n    \"name\": \"sed irure incididunt reprehenderit\",\n    \"type\": \"aliquip voluptate\"\n  },\n  \"persistableReference\": \"ut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/area?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"area"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "catalog",
									"item": [
										{
											"name": "getCatalog",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/catalog",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"catalog"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCatalogAttributes",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/catalog/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"catalog",
														"attributes"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "compoundcrs",
									"item": [
										{
											"name": "getCompoundCRSes",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/compoundcrs?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"compoundcrs"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getCompoundCRS",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"dolore culpa tempor\",\n      \"code\": \"Ut est\"\n    },\n    \"horizontalCRS\": {},\n    \"horzEarlyBoundCRS\": {\n      \"authCode\": {\n        \"auth\": \"tempor incididunt eiusmod sit ut\",\n        \"code\": \"ad cupidatat anim\"\n      },\n      \"compoundCT\": {\n        \"authCode\": {\n          \"auth\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"code\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"cts\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"name\": \"sit nisi\",\n        \"policy\": \"ea\",\n        \"type\": \"exercitation\",\n        \"ver\": \"qui ipsum anim\"\n      },\n      \"lateBoundCRS\": {\n        \"authCode\": {\n          \"auth\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"code\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"name\": \"cupidatat\",\n        \"type\": \"adipisicing nostru\",\n        \"ver\": \"commodo\",\n        \"wkt\": \"occaecat n\"\n      },\n      \"name\": \"Ut cillum dolore sit anim\",\n      \"singleCT\": {\n        \"authCode\": {\n          \"auth\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"code\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"name\": \"nisi do eu\",\n        \"type\": \"eiusmod ullamco esse do\",\n        \"ver\": \"qui adipisicing\",\n        \"wkt\": \"ipsum in culpa \"\n      },\n      \"type\": \"laborum ea ullamco Ut\",\n      \"ver\": \"in cupidatat aliquip ea\"\n    },\n    \"horzLateBoundCRS\": {\n      \"authCode\": {\n        \"auth\": \"in anim quis sunt\",\n        \"code\": \"labore ipsum\"\n      },\n      \"name\": \"irure sit eiusmod magna\",\n      \"type\": \"ipsum Ut commodo irure\",\n      \"ver\": \"in Ut aute enim\",\n      \"wkt\": \"eiusmod veli\"\n    },\n    \"name\": \"id cupidatat amet\",\n    \"type\": \"ut proident\",\n    \"ver\": \"est enim\",\n    \"vertEarlyBoundCRS\": {\n      \"authCode\": {\n        \"auth\": \"sint et\",\n        \"code\": \"paria\"\n      },\n      \"compoundCT\": {\n        \"authCode\": {\n          \"auth\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"code\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"cts\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"name\": \"occaecat voluptate et eiusmod\",\n        \"policy\": \"voluptate anim tempor exercitation\",\n        \"type\": \"ut ad amet aliquip\",\n        \"ver\": \"aliqua ipsum velit\"\n      },\n      \"lateBoundCRS\": {\n        \"authCode\": {\n          \"auth\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"code\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"name\": \"ipsum qui dolore aliquip\",\n        \"type\": \"ad esse\",\n        \"ver\": \"esse in adipisicing deserunt\",\n        \"wkt\": \"id\"\n      },\n      \"name\": \"officia cupidatat incididun\",\n      \"singleCT\": {\n        \"authCode\": {\n          \"auth\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"code\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"name\": \"ullamco\",\n        \"type\": \"culpa in\",\n        \"ver\": \"sit aliqua\",\n        \"wkt\": \"ea tempor exercitation\"\n      },\n      \"type\": \"cupidatat ut laboris est\",\n      \"ver\": \"qui ipsum id dolor ea\"\n    },\n    \"vertLateBoundCRS\": {\n      \"authCode\": {\n        \"auth\": \"consectetur commodo consequat magna adipisicing\",\n        \"code\": \"dolor ea veniam deserunt\"\n      },\n      \"name\": \"minim sed qui ipsum\",\n      \"type\": \"velit aliqua Ut ea ullamco\",\n      \"ver\": \"cupidatat cillum in labore\",\n      \"wkt\": \"fugiat do incididunt\"\n    },\n    \"verticalCRS\": {}\n  },\n  \"persistableReference\": \"quis fugiat dolore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/compoundcrs?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"compoundcrs"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "compoundct",
									"item": [
										{
											"name": "getCompoundCTs",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/compoundct?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"compoundct"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getCompoundCT",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"cillum ad nisi laboris commodo\",\n      \"code\": \"non in\"\n    },\n    \"cts\": [\n      {\n        \"authCode\": {\n          \"auth\": \"magna sed\",\n          \"code\": \"ut exercitation reprehenderit Ut\"\n        },\n        \"name\": \"non nostrud laboris dolore sunt\",\n        \"type\": \"sit\",\n        \"ver\": \"velit amet et in\",\n        \"wkt\": \"aute commodo irure\"\n      },\n      {\n        \"authCode\": {\n          \"auth\": \"et\",\n          \"code\": \"eu commodo Excepteur minim\"\n        },\n        \"name\": \"velit incididunt quis\",\n        \"type\": \"irure sint\",\n        \"ver\": \"sint Ut\",\n        \"wkt\": \"dolore Duis nostrud mollit\"\n      }\n    ],\n    \"name\": \"laborum sed consectetur\",\n    \"policy\": \"aliquip \",\n    \"type\": \"non est ad\",\n    \"ver\": \"officia quis esse\"\n  },\n  \"persistableReference\": \"laboris nostrud ea adipisicing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/compoundct?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"compoundct"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "crs",
									"item": [
										{
											"name": "getAllCRSes",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/crs?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"crs"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getCRS",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"dolor minim consequat ut\",\n      \"code\": \"quis dolore\"\n    },\n    \"name\": \"incididunt dolor sint\",\n    \"type\": \"mollit esse laboris ullamco sed\",\n    \"ver\": \"exercitation esse\"\n  },\n  \"persistableReference\": \"cupidatat Excepteur cillum\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/crs?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"crs"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ct",
									"item": [
										{
											"name": "getAllCTs",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/ct?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"ct"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getCT",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"officia ut aute\",\n      \"code\": \"fugiat eu ipsum\"\n    },\n    \"name\": \"esse sint quis Excepteur\",\n    \"type\": \"ullamco occ\",\n    \"ver\": \"adipisicing\"\n  },\n  \"persistableReference\": \"cupidatat enim ut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/ct?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"ct"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "earlyboundcrs",
									"item": [
										{
											"name": "getEarlyBoundCRSes",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/earlyboundcrs?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"earlyboundcrs"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getEarlyBoundCRS",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"fugiat anim qui\",\n      \"code\": \"ut anim sint deserunt\"\n    },\n    \"compoundCT\": {\n      \"authCode\": {\n        \"auth\": \"minim est Lorem\",\n        \"code\": \"nostrud reprehenderit ipsum velit irure\"\n      },\n      \"cts\": [\n        {\n          \"authCode\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"velit et proident sed\",\n          \"type\": \"nisi sunt ullamco sed deserunt\",\n          \"ver\": \"nulla reprehenderit enim minim laboris\",\n          \"wkt\": \"eiusmod nulla culpa Ut\"\n        },\n        {\n          \"authCode\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"dolor irure in Duis Excepteur\",\n          \"type\": \"quis do sed eu\",\n          \"ver\": \"sed ut officia Duis ad\",\n          \"wkt\": \"ad adipisicing\"\n        }\n      ],\n      \"name\": \"veniam non ut tempor\",\n      \"policy\": \"cup\",\n      \"type\": \"ad ullamco aliquip exercitation\",\n      \"ver\": \"id voluptate dolore aliqua\"\n    },\n    \"lateBoundCRS\": {\n      \"authCode\": {\n        \"auth\": \"veniam dolore dolor enim\",\n        \"code\": \"magna deserunt sit\"\n      },\n      \"name\": \"laborum pariatur eu id\",\n      \"type\": \"do la\",\n      \"ver\": \"quis voluptate\",\n      \"wkt\": \"et fugiat est\"\n    },\n    \"name\": \"voluptate elit\",\n    \"singleCT\": {\n      \"authCode\": {\n        \"auth\": \"deserunt sunt id\",\n        \"code\": \"ad id occaecat dolore\"\n      },\n      \"name\": \"quis exercitatio\",\n      \"type\": \"cupidatat labore fugiat\",\n      \"ver\": \"do non irure\",\n      \"wkt\": \"ipsum reprehe\"\n    },\n    \"type\": \"elit qui\",\n    \"ver\": \"est anim\"\n  },\n  \"persistableReference\": \"culpa veniam\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/earlyboundcrs?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"earlyboundcrs"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "lateboundcrs",
									"item": [
										{
											"name": "getLateBoundCRSes",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/lateboundcrs?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"lateboundcrs"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getLateBoundCRS",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"ea qui amet minim non\",\n      \"code\": \"culpa id laboris\"\n    },\n    \"name\": \"nisi amet\",\n    \"type\": \"ea sint officia fugiat\",\n    \"ver\": \"Excepteur ut et\",\n    \"wkt\": \"dolor in eiusmod dolore\"\n  },\n  \"persistableReference\": \"ex quis ut exercitation\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/lateboundcrs?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"lateboundcrs"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "searchAreasOfUse",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"query\": \"aliqua laborum\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/search/area?longitudeLeft=37526225.87249878&latitudeLower=37526225.87249878&longitudeRight=37526225.87249878&latitudeUpper=37526225.87249878&offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"search",
														"area"
													],
													"query": [
														{
															"key": "longitudeLeft",
															"value": "37526225.87249878",
															"description": "longitudeLeft"
														},
														{
															"key": "latitudeLower",
															"value": "37526225.87249878",
															"description": "latitudeLower"
														},
														{
															"key": "longitudeRight",
															"value": "37526225.87249878",
															"description": "longitudeRight"
														},
														{
															"key": "latitudeUpper",
															"value": "37526225.87249878",
															"description": "latitudeUpper"
														},
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "searchCRSes",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"query\": \"aliqua laborum\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/search/crs?longitudeLeft=37526225.87249878&latitudeLower=37526225.87249878&longitudeRight=37526225.87249878&latitudeUpper=37526225.87249878&offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"search",
														"crs"
													],
													"query": [
														{
															"key": "longitudeLeft",
															"value": "37526225.87249878",
															"description": "longitudeLeft"
														},
														{
															"key": "latitudeLower",
															"value": "37526225.87249878",
															"description": "latitudeLower"
														},
														{
															"key": "longitudeRight",
															"value": "37526225.87249878",
															"description": "longitudeRight"
														},
														{
															"key": "latitudeUpper",
															"value": "37526225.87249878",
															"description": "latitudeUpper"
														},
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "searchCTs",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"query\": \"aliqua laborum\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/search/ct?longitudeLeft=37526225.87249878&latitudeLower=37526225.87249878&longitudeRight=37526225.87249878&latitudeUpper=37526225.87249878&offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"search",
														"ct"
													],
													"query": [
														{
															"key": "longitudeLeft",
															"value": "37526225.87249878",
															"description": "longitudeLeft"
														},
														{
															"key": "latitudeLower",
															"value": "37526225.87249878",
															"description": "latitudeLower"
														},
														{
															"key": "longitudeRight",
															"value": "37526225.87249878",
															"description": "longitudeRight"
														},
														{
															"key": "latitudeUpper",
															"value": "37526225.87249878",
															"description": "latitudeUpper"
														},
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "singlect",
									"item": [
										{
											"name": "getSingleCTs",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/singlect?offset=6676707&limit=6676707&mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"singlect"
													],
													"query": [
														{
															"key": "offset",
															"value": "6676707",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "6676707",
															"description": "limit"
														},
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getSingleCT",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"authCode\": {\n      \"auth\": \"culpa in nisi fugiat esse\",\n      \"code\": \"irure dolor\"\n    },\n    \"name\": \"consectetur est\",\n    \"type\": \"velit non et dolor ut\",\n    \"ver\": \"eu Duis\",\n    \"wkt\": \"nis\"\n  },\n  \"persistableReference\": \"ut et Ut quis ei\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v2/singlect?mode=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v2",
														"singlect"
													],
													"query": [
														{
															"key": "mode",
															"value": "Duis dolore dolore",
															"description": "mode"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "v3",
							"item": [
								{
									"name": "coordinate-reference-system",
									"item": [
										{
											"name": "getCoordinateReferenceSystem",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v3/coordinate-reference-system?recordId=Duis dolore dolore&dataId=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v3",
														"coordinate-reference-system"
													],
													"query": [
														{
															"key": "recordId",
															"value": "Duis dolore dolore",
															"description": "recordId"
														},
														{
															"key": "dataId",
															"value": "Duis dolore dolore",
															"description": "dataId"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getCoordinateReferenceSystems",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"baseCRS\": {\n    \"id\": \"dolore eu in magna\",\n    \"name\": \"in ipsum\"\n  },\n  \"code\": \"ea Duis\",\n  \"codeSpace\": \"veniam officia \",\n  \"coordinateReferenceSystemType\": \"laboris exercitation\",\n  \"datum\": {\n    \"code\": \"fugiat irure nulla cupidatat in\",\n    \"codeSpace\": \"ea commodo veniam aliquip\",\n    \"name\": \"in\"\n  },\n  \"extent\": {\n    \"description\": \"veniam proident incididunt\",\n    \"name\": \"incididunt sint ut\"\n  },\n  \"horizontalAxisUnitId\": \"dolore ullamco consequat\",\n  \"id\": \"est non\",\n  \"kind\": \"laborum adipisicing qui\",\n  \"latitude\": 28388867.153709978,\n  \"limit\": 77398739,\n  \"longitude\": 13164980.595741808,\n  \"name\": \"reprehenderit Duis\",\n  \"offset\": 57345157,\n  \"persistableReferenceSearch\": \"ex sint\",\n  \"returnBoundGeographic2DAndWgs84\": false,\n  \"returnBoundProjectedAndProjectedBasedOnWgs84\": true,\n  \"verticalAxisUnitId\": \"occaecat qui magna\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v3/coordinate-reference-system",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v3",
														"coordinate-reference-system"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "coordinate-transformation",
									"item": [
										{
											"name": "getCoordinateTransformation",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v3/coordinate-transformation?recordId=Duis dolore dolore&dataId=Duis dolore dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v3",
														"coordinate-transformation"
													],
													"query": [
														{
															"key": "recordId",
															"value": "Duis dolore dolore",
															"description": "recordId"
														},
														{
															"key": "dataId",
															"value": "Duis dolore dolore",
															"description": "dataId"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "getCoordinateTransformations",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"codeSpace\": \"voluptate nulla quis in qui\",\n  \"includeDeprecated\": false,\n  \"includeHorizontal\": true,\n  \"includeVertical\": false,\n  \"latitude\": -37871044.71794178,\n  \"limit\": 85225948,\n  \"longitude\": 56722737.15932882,\n  \"name\": \"est tempor\",\n  \"offset\": -82246656,\n  \"sourceCRS\": \"ex volupta\",\n  \"targetCRS\": \"irure labore nostrud consequat sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/crs/catalog/v3/coordinate-transformation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"crs",
														"catalog",
														"v3",
														"coordinate-transformation"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "getAouInfo",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dataId\": \"quis\",\n  \"limit\": 45613321,\n  \"offset\": 99649603,\n  \"points\": [\n    {\n      \"latitude\": 37.450727,\n      \"longitude\": -122.174762\n    },\n    {\n      \"latitude\": 37.450727,\n      \"longitude\": -122.174762\n    }\n  ],\n  \"recordId\": \"dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crs/catalog/v3/points-in-aou",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"points-in-aou"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CRS Converter",
					"item": [
						{
							"name": "Info",
							"item": [
								{
									"name": "v2info",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v2/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v2",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "v3info",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v3/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v3",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Health Check",
							"item": [
								{
									"name": "livenessCheck",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/_ah/liveness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"_ah",
												"liveness_check"
											]
										}
									},
									"response": []
								},
								{
									"name": "readinessCheck",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/_ah/readiness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"_ah",
												"readiness_check"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "v2",
							"item": [
								{
									"name": "Convert a list of points",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fromCRS\": {},\n  \"points\": [\n    {\n      \"x\": {},\n      \"y\": {},\n      \"z\": {}\n    },\n    {\n      \"x\": {},\n      \"y\": {},\n      \"z\": {}\n    }\n  ],\n  \"toCRS\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v2/convert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v2",
												"convert"
											]
										},
										"description": "Convert a list of points"
									},
									"response": []
								},
								{
									"name": "Convert a GeoJSON or AnyCrsGeoJson structure",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"featureCollection\": {\n    \"bbox\": [\n      -34256875.487155505,\n      9312033.150517434\n    ],\n    \"geoJsonVariantInternal\": \"GEO_JSON\",\n    \"type\": \"nostrud sint veniam reprehenderit\",\n    \"CoordinateReferenceSystemID\": \"irure incididunt in\",\n    \"VerticalUnitID\": \"consequat anim\",\n    \"features\": [\n      {\n        \"bbox\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"geoJsonVariantInternal\": \"ANY_CRS_GEO_JSON\",\n        \"type\": \"id consectetur ad\",\n        \"geometry\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"properties\": {}\n      },\n      {\n        \"bbox\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"geoJsonVariantInternal\": \"GEO_JSON\",\n        \"type\": \"ut\",\n        \"geometry\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"properties\": {}\n      }\n    ],\n    \"persistableReferenceCrs\": \"dolor anim exercitation\",\n    \"persistableReferenceUnitZ\": \"eu incididunt in\",\n    \"properties\": {}\n  },\n  \"toCRS\": {},\n  \"toUnitZ\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v2/convertGeoJson",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v2",
												"convertGeoJson"
											]
										},
										"description": "Convert a GeoJSON or AnyCrsGeoJson structure"
									},
									"response": []
								},
								{
									"name": "Convert trajectory stations",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"azimuthReference\": {},\n  \"inputStations\": [\n    {\n      \"azimuth\": {},\n      \"inclination\": {},\n      \"md\": {},\n      \"dx\": {},\n      \"dy\": {},\n      \"dz\": {}\n    },\n    {\n      \"azimuth\": {},\n      \"inclination\": {},\n      \"md\": {},\n      \"dx\": {},\n      \"dy\": {},\n      \"dz\": {}\n    }\n  ],\n  \"method\": {},\n  \"referencePoint\": {\n    \"x\": {},\n    \"y\": {},\n    \"z\": {}\n  },\n  \"trajectoryCRS\": {},\n  \"unitZ\": {},\n  \"inputKind\": {},\n  \"interpolate\": {},\n  \"unitXY\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v2/convertTrajectory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v2",
												"convertTrajectory"
											]
										},
										"description": "Convert a list of trajectory stations, given the unit and spatial context and a reference point in 3D where MD==0."
									},
									"response": []
								}
							]
						},
						{
							"name": "v3",
							"item": [
								{
									"name": "Convert a list of points",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fromCRS\": {},\n  \"points\": [\n    {\n      \"x\": {},\n      \"y\": {},\n      \"z\": {}\n    },\n    {\n      \"x\": {},\n      \"y\": {},\n      \"z\": {}\n    }\n  ],\n  \"toCRS\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v3/convert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v3",
												"convert"
											]
										},
										"description": "Convert a list of points"
									},
									"response": []
								},
								{
									"name": "Convert a GeoJSON or AnyCrsGeoJson structure",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"featureCollection\": {\n    \"bbox\": [\n      -99470874.90487711,\n      -67016356.53946805\n    ],\n    \"geoJsonVariantInternal\": \"ANY_CRS_GEO_JSON\",\n    \"type\": \"irure \",\n    \"CoordinateReferenceSystemID\": \"in minim proident\",\n    \"VerticalUnitID\": \"dolor\",\n    \"features\": [\n      {\n        \"bbox\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"geoJsonVariantInternal\": \"GEO_JSON\",\n        \"type\": \"labore in nostrud deserunt\",\n        \"geometry\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"properties\": {}\n      },\n      {\n        \"bbox\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"geoJsonVariantInternal\": \"GEO_JSON\",\n        \"type\": \"aliqua dolor eu fugiat tempor\",\n        \"geometry\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"properties\": {}\n      }\n    ],\n    \"persistableReferenceCrs\": \"mollit dolore\",\n    \"persistableReferenceUnitZ\": \"tempor Excepteur incididunt nisi\",\n    \"properties\": {}\n  },\n  \"toCRS\": {},\n  \"toUnitZ\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v3/convertGeoJson",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v3",
												"convertGeoJson"
											]
										},
										"description": "Convert a GeoJSON or AnyCrsGeoJson structure"
									},
									"response": []
								},
								{
									"name": "Convert trajectory stations",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"azimuthReference\": {},\n  \"inputStations\": [\n    {\n      \"azimuth\": {},\n      \"inclination\": {},\n      \"md\": {},\n      \"dx\": {},\n      \"dy\": {},\n      \"dz\": {}\n    },\n    {\n      \"azimuth\": {},\n      \"inclination\": {},\n      \"md\": {},\n      \"dx\": {},\n      \"dy\": {},\n      \"dz\": {}\n    }\n  ],\n  \"method\": {},\n  \"referencePoint\": {\n    \"x\": {},\n    \"y\": {},\n    \"z\": {}\n  },\n  \"trajectoryCRS\": {},\n  \"unitZ\": {},\n  \"inputKind\": {},\n  \"interpolate\": {},\n  \"unitXY\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/crs/converter/v3/convertTrajectory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"crs",
												"converter",
												"v3",
												"convertTrajectory"
											]
										},
										"description": "Convert a list of trajectory stations, given the unit and spatial context and a reference point in 3D where MD==0."
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Dataset",
			"item": [
				{
					"name": "getDatasetRegistry",
					"item": [
						{
							"name": "getDatasetRegistry",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getDatasetRegistry?id=opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getDatasetRegistry"
									],
									"query": [
										{
											"key": "id",
											"value": "opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a",
											"description": "(Required) dataset registry id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getDatasetRegistries",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Content-Type",
										"value": "application.json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datasetRegistryIds\": [\n    \"opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a\",\n    \"opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/getDatasetRegistry",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getDatasetRegistry"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "retrievalInstructions",
					"item": [
						{
							"name": "Generate retrieval instructions (Eg - Signed URLs) for single dataset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/retrievalInstructions?datasetRegistryId=opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"retrievalInstructions"
									],
									"query": [
										{
											"key": "datasetRegistryId",
											"value": "opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a",
											"description": "(Required) Dataset registry id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate retrieval instructions (Eg - Signed URLs) for multiple datasets",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Content-Type",
										"value": "application.json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datasetRegistryIds\": [\n    \"opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a\",\n    \"opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/retrievalInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"retrievalInstructions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "createOrUpdateDatasetRegistries",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"datasetRegistries\": [\n    {\n      \"kind\": \"osdu:wks:dataset--File.Generic:1.0.0\",\n      \"data\": {\n        \"ResourceId\": \"srn:osdu:file:dc556e0e3a554105a80cfcb19372a62d:\",\n        \"ResourceTypeID\": \"srn:type:file/json:\",\n        \"ResourceSecurityClassification\": \"srn:reference-data/ResourceSecurityClassification:RESTRICTED:\",\n        \"ResourceSource\": \"Some Company App\",\n        \"ResourceName\": \"trajectories - 1000.json\",\n        \"ResourceDescription\": \"Trajectory For Wellbore xyz\",\n        \"DatasetProperties\": {\n          \"FileSourceInfo\": {\n            \"FileSource\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"PreloadFilePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"acl\": {\n        \"owners\": [\n          \"data.default.owners@opendes.testing.com\",\n          \"data.default.owners@opendes.testing.com\"\n        ],\n        \"viewers\": [\n          \"data.default.viewers@opendes.testing.com\",\n          \"data.default.viewers@opendes.testing.com\"\n        ]\n      },\n      \"legal\": {\n        \"legaltags\": [\n          \"opendes-public-usa-dataset\",\n          \"opendes-public-usa-dataset\"\n        ],\n        \"otherRelevantDataCountries\": [\n          \"US\",\n          \"US\"\n        ],\n        \"status\": \"compliant\"\n      },\n      \"namespace\": \"opendes:osdu\",\n      \"id\": \"opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a\",\n      \"meta\": [\n        {\n          \"eiusmod_1\": {},\n          \"ea_3d3\": {},\n          \"eiusmod_e1_\": {}\n        },\n        {\n          \"veniam7\": {},\n          \"commodo_aab\": {},\n          \"irure_7a6\": {}\n        }\n      ],\n      \"ancestry\": {\n        \"parents\": [\n          \"pariatur Ut\",\n          \"sed cupidatat\"\n        ]\n      }\n    },\n    {\n      \"kind\": \"osdu:wks:dataset--File.Generic:1.0.0\",\n      \"data\": {\n        \"ResourceId\": \"srn:osdu:file:dc556e0e3a554105a80cfcb19372a62d:\",\n        \"ResourceTypeID\": \"srn:type:file/json:\",\n        \"ResourceSecurityClassification\": \"srn:reference-data/ResourceSecurityClassification:RESTRICTED:\",\n        \"ResourceSource\": \"Some Company App\",\n        \"ResourceName\": \"trajectories - 1000.json\",\n        \"ResourceDescription\": \"Trajectory For Wellbore xyz\",\n        \"DatasetProperties\": {\n          \"FileSourceInfo\": {\n            \"FileSource\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"PreloadFilePath\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"acl\": {\n        \"owners\": [\n          \"data.default.owners@opendes.testing.com\",\n          \"data.default.owners@opendes.testing.com\"\n        ],\n        \"viewers\": [\n          \"data.default.viewers@opendes.testing.com\",\n          \"data.default.viewers@opendes.testing.com\"\n        ]\n      },\n      \"legal\": {\n        \"legaltags\": [\n          \"opendes-public-usa-dataset\",\n          \"opendes-public-usa-dataset\"\n        ],\n        \"otherRelevantDataCountries\": [\n          \"US\",\n          \"US\"\n        ],\n        \"status\": \"compliant\"\n      },\n      \"namespace\": \"opendes:osdu\",\n      \"id\": \"opendes:dataset--File.Generic:8118591ee2a24eada7152e54b369e99a\",\n      \"meta\": [\n        {\n          \"tempor_\": {},\n          \"laborea9\": {}\n        },\n        {\n          \"culpa_7\": {},\n          \"consequat_8d5\": {},\n          \"pariatur_b36\": {}\n        }\n      ],\n      \"ancestry\": {\n        \"parents\": [\n          \"ad dolore qui nostrud veniam\",\n          \"dolore sed\"\n        ]\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/registerDataset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"registerDataset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate storage instructions (Eg - Signed URLs) for datasets",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/storageInstructions?kindSubType=dataset--File.Generic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"storageInstructions"
							],
							"query": [
								{
									"key": "kindSubType",
									"value": "dataset--File.Generic",
									"description": "(Required) subType of the kind (partition:wks:kindSubType:version)"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Entitlements",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/entitlements/v2/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "livenessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/entitlements/v2/_ah/liveness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"_ah",
										"liveness_check"
									]
								}
							},
							"response": []
						},
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/entitlements/v2/_ah/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"_ah",
										"readiness_check"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "deleteMember",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/members/:member_email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"members",
								":member_email"
							],
							"variable": [
								{
									"key": "member_email",
									"value": "tempor non nisi",
									"description": "(Required) member_email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listGroupsOnBehalfOf",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/members/:member_email/groups?type=tempor non nisi&appid=tempor non nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"members",
								":member_email",
								"groups"
							],
							"query": [
								{
									"key": "type",
									"value": "tempor non nisi",
									"description": "type"
								},
								{
									"key": "appid",
									"value": "tempor non nisi",
									"description": "appid"
								}
							],
							"variable": [
								{
									"key": "member_email",
									"value": "tempor non nisi",
									"description": "(Required) member_email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listGroups",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "createGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteGroup",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/groups/:group_email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"groups",
								":group_email"
							],
							"variable": [
								{
									"key": "group_email",
									"value": "tempor non nisi",
									"description": "(Required) group_email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listGroupMembers",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/groups/:group_email/members?role=MEMBER&includeType=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"groups",
								":group_email",
								"members"
							],
							"query": [
								{
									"key": "role",
									"value": "MEMBER",
									"description": "role"
								},
								{
									"key": "includeType",
									"value": "false",
									"description": "includeType"
								}
							],
							"variable": [
								{
									"key": "group_email",
									"value": "tempor non nisi",
									"description": "(Required) group_email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addMember",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/groups/:group_email/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"groups",
								":group_email",
								"members"
							],
							"variable": [
								{
									"key": "group_email",
									"value": "tempor non nisi",
									"description": "(Required) group_email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMember",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/groups/:group_email/members/:member_email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"groups",
								":group_email",
								"members",
								":member_email"
							],
							"variable": [
								{
									"key": "group_email",
									"value": "tempor non nisi",
									"description": "(Required) group_email"
								},
								{
									"key": "member_email",
									"value": "tempor non nisi",
									"description": "(Required) member_email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateGroup",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/entitlements/v2/groups/:group_email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"entitlements",
								"v2",
								"groups",
								":group_email"
							],
							"variable": [
								{
									"key": "group_email",
									"value": "tempor non nisi",
									"description": "(Required) group_email"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "File",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "livenessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": ""
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/liveness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"liveness_check"
									]
								}
							},
							"response": []
						},
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": ""
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"readiness_check"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "File Collection",
					"item": [
						{
							"name": "copyDms",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datasetSources\": [\n    {\n      \"acl\": {\n        \"owners\": [\n          \"Duis Lorem\",\n          \"ad ipsum reprehenderit elit\"\n        ],\n        \"viewers\": [\n          \"aute eli\",\n          \"aliqua tempor Excepteur sit cillum\"\n        ]\n      },\n      \"id\": \"common:work-product-component--wellLog:123456\",\n      \"kind\": \"common:wks:work-product-component--wellLog:1.0.0\",\n      \"ancestry\": {\n        \"parents\": [\n          \"ut occaecat aute\",\n          \"officia sint Ut\"\n        ]\n      },\n      \"data\": {},\n      \"legal\": {\n        \"legaltags\": [\n          \"cillum exercitation veniam\",\n          \"adipisicing eiusmod velit ipsum\"\n        ],\n        \"otherRelevantDataCountries\": [\n          \"consectetur \",\n          \"ut\"\n        ],\n        \"status\": \"incompliant\"\n      },\n      \"meta\": [\n        {\n          \"docd\": {},\n          \"nostrud89\": {}\n        },\n        {\n          \"elit8\": {},\n          \"etd0\": {}\n        }\n      ],\n      \"tags\": {\n        \"exercitationf_\": \"consequat non veniam dolore\"\n      },\n      \"version\": 39233158\n    },\n    {\n      \"acl\": {\n        \"owners\": [\n          \"non ut\",\n          \"culpa quis officia\"\n        ],\n        \"viewers\": [\n          \"ut\",\n          \"dolor aute\"\n        ]\n      },\n      \"id\": \"common:work-product-component--wellLog:123456\",\n      \"kind\": \"common:wks:work-product-component--wellLog:1.0.0\",\n      \"ancestry\": {\n        \"parents\": [\n          \"nisi in\",\n          \"proident culpa tempor\"\n        ]\n      },\n      \"data\": {},\n      \"legal\": {\n        \"legaltags\": [\n          \"sint sed qui\",\n          \"laborum et esse\"\n        ],\n        \"otherRelevantDataCountries\": [\n          \"in\",\n          \"quis est nulla\"\n        ],\n        \"status\": \"incompliant\"\n      },\n      \"meta\": [\n        {\n          \"laborum_e\": {},\n          \"nisi_64\": {}\n        },\n        {\n          \"sed36\": {},\n          \"ut___\": {}\n        }\n      ],\n      \"tags\": {\n        \"ut80e\": \"cupidatat laborum sed et in\"\n      },\n      \"version\": 78105435\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/file-collections/copy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"file-collections",
										"copy"
									]
								}
							},
							"response": []
						},
						{
							"name": "getRetrievalInstructions",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datasetRegistryIds\": [\n    \"pariat\",\n    \"dolore mollit\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/file-collections/retrievalInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"file-collections",
										"retrievalInstructions"
									]
								}
							},
							"response": []
						},
						{
							"name": "getStorageInstructions",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/file-collections/storageInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"file-collections",
										"storageInstructions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "getFileMetadataById",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/:id/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										":id",
										"metadata"
									],
									"variable": [
										{
											"key": "id",
											"value": "nisi aliqua magna",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteFileMetadataById",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/:id/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										":id",
										"metadata"
									],
									"variable": [
										{
											"key": "id",
											"value": "nisi aliqua magna",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "downloadURL",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/:id/downloadURL?expiryTime=nisi aliqua magna",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										":id",
										"downloadURL"
									],
									"query": [
										{
											"key": "expiryTime",
											"value": "nisi aliqua magna",
											"description": "expiryTime"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "nisi aliqua magna",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "copyDms",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datasetSources\": [\n    {\n      \"acl\": {\n        \"owners\": [\n          \"irure Duis ad consequat enim\",\n          \"magna eiusmod\"\n        ],\n        \"viewers\": [\n          \"occaecat amet nulla\",\n          \"ullamco Excepteur Duis magna\"\n        ]\n      },\n      \"id\": \"common:work-product-component--wellLog:123456\",\n      \"kind\": \"common:wks:work-product-component--wellLog:1.0.0\",\n      \"ancestry\": {\n        \"parents\": [\n          \"ipsum Lorem tempor\",\n          \"laboris culpa et sunt\"\n        ]\n      },\n      \"data\": {},\n      \"legal\": {\n        \"legaltags\": [\n          \"ullamco\",\n          \"sint ut\"\n        ],\n        \"otherRelevantDataCountries\": [\n          \"mollit\",\n          \"amet\"\n        ],\n        \"status\": \"incompliant\"\n      },\n      \"meta\": [\n        {\n          \"ad_0_\": {},\n          \"non_70f\": {}\n        },\n        {\n          \"tempora\": {},\n          \"nulla104\": {}\n        }\n      ],\n      \"tags\": {\n        \"enim_1\": \"consequat Duis\",\n        \"quis_4\": \"ad anim in\"\n      },\n      \"version\": -86102468\n    },\n    {\n      \"acl\": {\n        \"owners\": [\n          \"amet consectetur cillum\",\n          \"ut consectetur anim \"\n        ],\n        \"viewers\": [\n          \"in ipsum nostrud\",\n          \"sunt aliqua enim\"\n        ]\n      },\n      \"id\": \"common:work-product-component--wellLog:123456\",\n      \"kind\": \"common:wks:work-product-component--wellLog:1.0.0\",\n      \"ancestry\": {\n        \"parents\": [\n          \"non officia velit\",\n          \"qu\"\n        ]\n      },\n      \"data\": {},\n      \"legal\": {\n        \"legaltags\": [\n          \"enim ut cupidatat\",\n          \"irure occaecat officia commodo\"\n        ],\n        \"otherRelevantDataCountries\": [\n          \"Lorem dolore n\",\n          \"aute ea\"\n        ],\n        \"status\": \"compliant\"\n      },\n      \"meta\": [\n        {\n          \"magna9_2\": {},\n          \"dolore_d30\": {}\n        },\n        {\n          \"officia0ca\": {}\n        }\n      ],\n      \"tags\": {\n        \"dolore_400\": \"in culpa est in\",\n        \"culpa__\": \"reprehenderit nisi quis\",\n        \"commodo_9a\": \"nisi\"\n      },\n      \"version\": 64333488\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/copy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										"copy"
									]
								}
							},
							"response": []
						},
						{
							"name": "getRetrievalInstructions",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"datasetRegistryIds\": [\n    \"dolor cillum id\",\n    \"elit exercitation id esse\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/retrievalInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										"retrievalInstructions"
									]
								}
							},
							"response": []
						},
						{
							"name": "getStorageInstructions",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/storageInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										"storageInstructions"
									]
								}
							},
							"response": []
						},
						{
							"name": "getLocationFile",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/uploadURL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										"uploadURL"
									]
								}
							},
							"response": []
						},
						{
							"name": "postFilesMetadata",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"acl\": {\n    \"owners\": [\n      \"dolor dolor in incididunt irure\",\n      \"quis ut Ut laboru\"\n    ],\n    \"viewers\": [\n      \"anim cillum dolor\",\n      \"labore incididunt ea\"\n    ]\n  },\n  \"data\": {\n    \"DatasetProperties\": {\n      \"FileSourceInfo\": {\n        \"Checksum\": \"ad minim enim sunt\",\n        \"ChecksumAlgorithm\": \"nul\",\n        \"EncodingFormatTypeID\": \"sed Lorem sint\",\n        \"FileSize\": \"ullamco labore\",\n        \"FileSource\": \"labore sint exercitation culpa\",\n        \"Name\": \"eu aliquip cupidatat sint\",\n        \"PreLoadFilePath\": \"irure eiusmod ex nulla\",\n        \"PreloadFileCreateDate\": \"occaecat in\",\n        \"PreloadFileCreateUser\": \"ipsum officia\",\n        \"PreloadFileModifyDate\": \"eiusmod Lorem\",\n        \"PreloadFileModifyUser\": \"esse officia exercitation incididunt\"\n      }\n    },\n    \"Checksum\": \"mollit ea\",\n    \"Description\": \"in labore Ut ea\",\n    \"EncodingFormatTypeID\": \"proident minim esse\",\n    \"Endian\": \"LITTLE\",\n    \"ExistenceKind\": \"amet laboris\",\n    \"ExtensionProperties\": {},\n    \"Name\": \"ipsum Duis\",\n    \"ResourceCurationStatus\": \"in\",\n    \"ResourceHomeRegionID\": \"Duis culpa occaecat\",\n    \"ResourceHostRegionIDs\": [\n      \"no\",\n      \"elit magna nulla\"\n    ],\n    \"ResourceLifecycleStatus\": \"pariatur enim voluptate tempor est\",\n    \"ResourceSecurityClassification\": \"dolor deserunt nisi\",\n    \"SchemaFormatTypeID\": \"eiusmod ut\",\n    \"Source\": \"fugiat esse sit mollit\",\n    \"TotalSize\": \"nulla proident mollit nisi\"\n  },\n  \"kind\": \"\",\n  \"legal\": {\n    \"legaltags\": [\n      \"aliqua est in\",\n      \"eu id veniam\"\n    ],\n    \"otherRelevantDataCountries\": [\n      \"est fugiat id velit\",\n      \"sit\"\n    ],\n    \"status\": \"incompliant\"\n  },\n  \"ancestry\": {\n    \"parents\": [\n      \"fugiat reprehende\",\n      \"fugiat culpa Excepteur\"\n    ]\n  },\n  \"id\": \"dolor ex exercitat\",\n  \"meta\": [\n    {\n      \"veniame\": {}\n    },\n    {\n      \"voluptate_d9\": {}\n    }\n  ],\n  \"tags\": {\n    \"aliqua_21\": \"dolor aute deserunt\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/file/v2/files/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file",
										"v2",
										"files",
										"metadata"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getFileSignedURL",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "(Required) reference",
								"key": "frame-of-reference",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"srns\": [\n    \"mollit Lorem laboris enim sit\",\n    \"Ut sunt\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/file/v2/delivery/GetFileSignedUrl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"file",
								"v2",
								"delivery",
								"GetFileSignedUrl"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFile",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "(Required) reference",
								"key": "frame-of-reference",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"FileID\": \"tempor Duis consequat sit\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/file/v2/getFile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"file",
								"v2",
								"getFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFileList",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "(Required) reference",
								"key": "frame-of-reference",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Items\": -43965208,\n  \"PageNum\": 97738153,\n  \"TimeFrom\": \"2020-06-24T17:46:16.596Z\",\n  \"TimeTo\": \"1944-02-26T21:44:11.378Z\",\n  \"UserID\": \"dolore adipisicing irure incididunt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/file/v2/getFileList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"file",
								"v2",
								"getFileList"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFileLocation",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "(Required) reference",
								"key": "frame-of-reference",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"FileID\": \"Ut aliqua amet cupidatat\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/file/v2/getFileLocation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"file",
								"v2",
								"getFileLocation"
							]
						}
					},
					"response": []
				},
				{
					"name": "getLocation",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "(Required) reference",
								"key": "frame-of-reference",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"FileID\": \"cupidatat nulla sunt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/file/v2/getLocation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"file",
								"v2",
								"getLocation"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Indexer",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) data partition id",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/indexer/v2/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"indexer",
										"v2",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) data partition id",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/indexer/v2/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"indexer",
										"v2",
										"readiness_check"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "reindex",
					"item": [
						{
							"name": "reindex",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) data partition id",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"kind\": \"quis magna\",\n  \"cursor\": \"tempor adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/indexer/v2/reindex?force_clean=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"indexer",
										"v2",
										"reindex"
									],
									"query": [
										{
											"key": "force_clean",
											"value": "false",
											"description": "force_clean"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "fullReindex",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) data partition id",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/indexer/v2/reindex?force_clean=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"indexer",
										"v2",
										"reindex"
									],
									"query": [
										{
											"key": "force_clean",
											"value": "false",
											"description": "force_clean"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "deleteIndex",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) data partition id",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/indexer/v2/index?kind=ut commodo sint U",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"indexer",
								"v2",
								"index"
							],
							"query": [
								{
									"key": "kind",
									"value": "ut commodo sint U",
									"description": "(Required) kind"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "provisionPartition",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) data-partition-id",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/indexer/v2/partitions/provision",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"indexer",
								"v2",
								"partitions",
								"provision"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Legal",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/legal/v1/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"info"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"info"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"artifactId\": \"in quis conse\",\n  \"branch\": \"cillum quis et dolor adipisicing\",\n  \"buildTime\": \"ullamco Duis velit volu\",\n  \"commitId\": \"in sed\",\n  \"commitMessage\": \"deserunt aliqua velit anim laboris\",\n  \"connectedOuterServices\": [\n    {\n      \"name\": \"ad esse consectetur\",\n      \"version\": \"adipisicing non \"\n    },\n    {\n      \"name\": \"veniam\",\n      \"version\": \"labore exercitation\"\n    }\n  ],\n  \"groupId\": \"nulla voluptate\",\n  \"version\": \"magna dolor\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"info"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"info"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "livenessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/legal/v1/_ah/liveness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"_ah",
										"liveness_check"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/liveness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"liveness_check"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "commodo ex cupidatat non"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/liveness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"liveness_check"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/liveness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"liveness_check"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/liveness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"liveness_check"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/legal/v1/_ah/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"_ah",
										"readiness_check"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/readiness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"readiness_check"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "commodo ex cupidatat non"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/readiness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"readiness_check"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/readiness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"readiness_check"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/legal/v1/_ah/readiness_check",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"legal",
												"v1",
												"_ah",
												"readiness_check"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "getLegalTag",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "commodo ex cupidatat non",
									"description": "(Required) name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteLegalTag",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "commodo ex cupidatat non",
									"description": "(Required) name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listLegalTags",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags?valid=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags"
							],
							"query": [
								{
									"key": "valid",
									"value": "true",
									"description": "valid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateLegalTag",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contractId\": \"A1B2C3\",\n    \"description\": \"Legal Tag Description\",\n    \"expirationDate\": \"yyyy-MM-dd\",\n    \"name\": \"Legal Tag Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags"
							]
						}
					},
					"response": []
				},
				{
					"name": "createLegalTag",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Legal Tag Description\",\n  \"name\": \"Legal Tag Name\",\n  \"properties\": {\n    \"contractId\": \"A1B2C3\",\n    \"countryOfOrigin\": [\n      \"NO\",\n      \"US\"\n    ],\n    \"dataType\": \"Ut qui sit\",\n    \"expirationDate\": \"yyyy-MM-dd\",\n    \"exportClassification\": \"enim fug\",\n    \"originator\": \"dolor do aliqua Lorem\",\n    \"personalData\": \"id dolore ut est\",\n    \"securityClassification\": \"quis qui\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags"
							]
						}
					},
					"response": []
				},
				{
					"name": "getLegalTags",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"names\": [\n    \"Legal Tag 1\",\n    \"Legal Tag 2\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags:batchRetrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags:batchRetrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "getLegalTagProperties",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags:properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags:properties"
							]
						}
					},
					"response": []
				},
				{
					"name": "validateLegalTags",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"names\": [\n    \"dolor commodo sed\",\n    \"dolore Lorem exercitation nulla\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/legaltags:validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"legaltags:validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkLegalTagStatusChanges",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/legal/v1/jobs/updateLegalTagStatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"legal",
								"v1",
								"jobs",
								"updateLegalTagStatus"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/notification/v1/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "warmup",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/notification/v1/_ah/warmup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"_ah",
										"warmup"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "error",
					"item": [
						{
							"name": "handleErrorGet",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/notification/v1/error",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "handleErrorPut",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/notification/v1/error",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "handleErrorPost",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/notification/v1/error",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "handleErrorDelete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/notification/v1/error",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "handleErrorPatch",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/notification/v1/error",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"error"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "recordChanged",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/notification/v1/push-handlers/records-changed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notification",
								"v1",
								"push-handlers",
								"records-changed"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Partition",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "Version info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"info"
									]
								},
								"description": "For deployment available public `/info` endpoint,  which provides build and git related information."
							},
							"response": []
						}
					]
				},
				{
					"name": "partitions",
					"item": [
						{
							"name": "{partitionId}",
							"item": [
								{
									"name": "Get partition info",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/partitions/:partitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partitions",
												":partitionId"
											],
											"variable": [
												{
													"key": "partitionId",
													"value": "{{data_partition}}",
													"description": "(Required) partitionId"
												}
											]
										},
										"description": "Get all properties and their values for a given data partition id"
									},
									"response": []
								},
								{
									"name": "Create a new partition",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"cillum_61\": {\n      \"sensitive\": true,\n      \"value\": {}\n    },\n    \"cillum4\": {\n      \"sensitive\": false,\n      \"value\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/partitions/:partitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partitions",
												":partitionId"
											],
											"variable": [
												{
													"key": "partitionId",
													"value": "",
													"description": "(Required) partitionId"
												}
											]
										},
										"description": "Creates a new data partition with all given properties and their values."
									},
									"response": []
								},
								{
									"name": "Updates an existing partition",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"properties\": {\n    \"cillum_61\": {\n      \"sensitive\": true,\n      \"value\": {}\n    },\n    \"cillum4\": {\n      \"sensitive\": false,\n      \"value\": {}\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/partitions/:partitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partitions",
												":partitionId"
											],
											"variable": [
												{
													"key": "partitionId",
													"value": "{{data_partition}}",
													"description": "(Required) partitionId"
												}
											]
										},
										"description": "Add new properties or update exsiting properties of a given data partition"
									},
									"response": []
								},
								{
									"name": "Delete an existing partition",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/partitions/:partitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partitions",
												":partitionId"
											],
											"variable": [
												{
													"key": "partitionId",
													"value": "{{data_partition}}",
													"description": "(Required) partitionId"
												}
											]
										},
										"description": "Delete all the properties of a given data partition"
									},
									"response": []
								}
							]
						},
						{
							"name": "List all partitions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/partitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"partitions"
									]
								},
								"description": "Returns all existing data partitions"
							},
							"response": []
						}
					]
				}
			],
			"description": "Please note that this API is locked down in Microsoft Energy Data Services due to data partitions being handled by the Azure Resource Manager (ARM) through Azure CLI, PowerShell or Azure Portal."
		},
		{
			"name": "Register",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "livenessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/ah/liveness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"ah",
										"liveness_check"
									]
								}
							},
							"response": []
						},
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/ah/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"ah",
										"readiness_check"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "action",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "getAction",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/action/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"action",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "JDNfT3rQehYpac6rvQ3mc3mK1FMddv-",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteAction",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/action/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"action",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "JDNfT3rQehYpac6rvQ3mc3mK1FMddv-",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createAction",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactEmail\": \"ex sunt proident\",\n  \"description\": \"Hco1FBq8RyLDx4QW4.Jgia2SjyoQKPrf9QIn.08fwKDP1gukhsxFWxOHUXUbV4q6xmDlAdl5rZK5dnK41lHqOj1H2JyJ9VA3.hiTLQSW6jTgjZOqWmpsf7fcDiD1bTuQjaF.xBdJyRJpx1zsQzvkcpTAt6TdvpEpLLEV5z9qetpX8o7UTqtIc03M2DcfJQmhAjpQZIMWEyIKjjRImikmGEWUuAsVA1qJSf1seaauS2y3HeMlqlyROlUAwEwo\",\n  \"filter\": {\n    \"entityType\": [\n      \"culpa eiusmod\",\n      \"non culpa Lorem pariatur\"\n    ],\n    \"source\": [\n      \"veniam quis ea amet\",\n      \"laboris Lorem culpa\"\n    ],\n    \"version\": [\n      \"est sunt dolore\",\n      \"officia proident elit dolor\"\n    ]\n  },\n  \"id\": \"VltOCJ7m1Yedpnqjh6KPCUy3kQB5XaCJ4OXprWw1Vc6\",\n  \"img\": \"reprehenderit \",\n  \"name\": \"BqIcmviZXkRM1JMSs oqxhxnFr4\",\n  \"url\": \"mollit tempor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"action"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ddms",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "getDMS",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/ddms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"ddms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "JDNfT3rQehYpac6rvQ3mc3mK1FMddv-",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteDMS",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/ddms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"ddms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "JDNfT3rQehYpac6rvQ3mc3mK1FMddv-",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "redirectToDms",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/ddms/:id/:type/:localid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"ddms",
												":id",
												":type",
												":localid"
											],
											"variable": [
												{
													"key": "id",
													"value": "JDNfT3rQehYpac6rvQ3mc3mK1FMddv-",
													"description": "(Required) id"
												},
												{
													"key": "type",
													"value": "ojxsoZ",
													"description": "(Required) type"
												},
												{
													"key": "localid",
													"value": "JDNfT3rQehYpac6rvQ3mc3mK1FMddv-",
													"description": "(Required) localid"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "queryDMS",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/ddms?type=xDhsgMHVwlFxMBOOPE0B5HtXsIyxhH",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"ddms"
									],
									"query": [
										{
											"key": "type",
											"value": "xDhsgMHVwlFxMBOOPE0B5HtXsIyxhH",
											"description": "(Required) type"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "postDMS",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"cfvegdZwao0uxhVwJQHDCr\",\n  \"name\": \"TW\",\n  \"contactEmail\": \"aliqua nostrud\",\n  \"createdDateTimeEpoch\": {\n    \"date\": -37031726,\n    \"hours\": 22541709,\n    \"minutes\": -95173700,\n    \"month\": 77060430,\n    \"nanos\": -67445465,\n    \"seconds\": -16872361,\n    \"time\": 88167946,\n    \"year\": 78663462\n  },\n  \"description\": \"m2XJ.1j76YqWVJxsQoLxHISxWgYxmhMFCDfQcdbucyZ9tOw8gV2T8lkSkE BfGTTKHkadLjSSuCQulGjNxbsE9ALYxs5ZR2aYPlfi.MqCKIhLFlzhH0IzUpXQvnVlc\",\n  \"interfaces\": [\n    {\n      \"entityType\": \"53GhnIIrhdMMvjy221KWEjsQsEXTQTq7SCss\",\n      \"schema\": {}\n    },\n    {\n      \"entityType\": \"F VOBubIpBcZClQyegNo6oIyamfr4GW1sm\",\n      \"schema\": {}\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/ddms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"ddms"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "test",
					"item": [
						{
							"name": "gsa-challenge/{count}",
							"item": [
								{
									"name": "testGsa",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/test/gsa-challenge/:count?crc=ullamco aliqua ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"test",
												"gsa-challenge",
												":count"
											],
											"query": [
												{
													"key": "crc",
													"value": "ullamco aliqua ",
													"description": "(Required) crc"
												}
											],
											"variable": [
												{
													"key": "count",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "testPushGsa",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/test/gsa-challenge/:count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"test",
												"gsa-challenge",
												":count"
											],
											"variable": [
												{
													"key": "count",
													"value": null
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "challenge/{count}",
							"item": [
								{
									"name": "testCrc",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/test/challenge/:count?crc=ullamco aliqua &hmac=ullamco aliqua ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"test",
												"challenge",
												":count"
											],
											"query": [
												{
													"key": "crc",
													"value": "ullamco aliqua ",
													"description": "(Required) crc"
												},
												{
													"key": "hmac",
													"value": "ullamco aliqua ",
													"description": "(Required) hmac"
												}
											],
											"variable": [
												{
													"key": "count",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "testPushHmac",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/test/challenge/:count?hmac=ullamco aliqua ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"test",
												"challenge",
												":count"
											],
											"query": [
												{
													"key": "hmac",
													"value": "ullamco aliqua ",
													"description": "(Required) hmac"
												}
											],
											"variable": [
												{
													"key": "count",
													"value": null
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "subscription",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "getSubscription",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "ullamco aliqua ",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteSubscription",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "ullamco aliqua ",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "updateSecret",
									"request": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/register/v1/subscription/:id/secret",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"subscription",
												":id",
												"secret"
											],
											"variable": [
												{
													"key": "id",
													"value": "ullamco aliqua ",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "querySubscription",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/subscription?notificationId=ullamco aliqua ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"subscription"
									],
									"query": [
										{
											"key": "notificationId",
											"value": "ullamco aliqua ",
											"description": "(Required) notificationId"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createSubscription",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"YE8jl7b3YdCghq9\",\n  \"pushEndpoint\": \"qui iru\",\n  \"topic\": \"enim ipsum qui Ut\",\n  \"createdBy\": \"sint Duis cillum dolore dolore\",\n  \"description\": \"TT\",\n  \"id\": \"reprehenderit non exercitation consectetur\",\n  \"notificationId\": \"officia\",\n  \"secret\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/register/v1/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"subscription"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "retrieveAction",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/register/v1/action:retrieve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"register",
								"v1",
								"action:retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "testAction",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"testPayload\": {},\n  \"action\": {\n    \"contactEmail\": \"velit do\",\n    \"description\": \"fq3VBoEc2op\",\n    \"filter\": {\n      \"entityType\": [\n        \"incididunt officia labore cillum\",\n        \"et in\"\n      ],\n      \"source\": [\n        \"pariatur ex Duis consectetur\",\n        \"deserunt mollit et\"\n      ],\n      \"version\": [\n        \"minim aliquip incididunt consequat\",\n        \"tempor ea\"\n      ]\n    },\n    \"id\": \"oX9bN\",\n    \"img\": \"in Lorem in dolor Excepteur\",\n    \"name\": \"Wy7A\",\n    \"url\": \"sunt ullamco ut\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/register/v1/action:test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"register",
								"v1",
								"action:test"
							]
						}
					},
					"response": []
				},
				{
					"name": "listMessages",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/register/v1/topics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"register",
								"v1",
								"topics"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Schema",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/schema-service/v1/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"schema-service",
										"v1",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getSchemaInfoList",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/schema-service/v1/schema?authority=Duis sit&source=Duis sit&entityType=Duis sit&schemaVersionMajor=73971723&schemaVersionMinor=73971723&schemaVersionPatch=73971723&status=Duis sit&scope=Duis sit&latestVersion=true&limit=49425984&offset=49425984",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"schema-service",
								"v1",
								"schema"
							],
							"query": [
								{
									"key": "authority",
									"value": "Duis sit",
									"description": "authority"
								},
								{
									"key": "source",
									"value": "Duis sit",
									"description": "source"
								},
								{
									"key": "entityType",
									"value": "Duis sit",
									"description": "entityType"
								},
								{
									"key": "schemaVersionMajor",
									"value": "73971723",
									"description": "schemaVersionMajor"
								},
								{
									"key": "schemaVersionMinor",
									"value": "73971723",
									"description": "schemaVersionMinor"
								},
								{
									"key": "schemaVersionPatch",
									"value": "73971723",
									"description": "schemaVersionPatch"
								},
								{
									"key": "status",
									"value": "Duis sit",
									"description": "status"
								},
								{
									"key": "scope",
									"value": "Duis sit",
									"description": "scope"
								},
								{
									"key": "latestVersion",
									"value": "true",
									"description": "latestVersion"
								},
								{
									"key": "limit",
									"value": "49425984",
									"description": "limit"
								},
								{
									"key": "offset",
									"value": "49425984",
									"description": "offset"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "upsertSchema",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schema\": {},\n  \"schemaInfo\": {\n    \"schemaIdentity\": {\n      \"authority\": \"APwDflg\",\n      \"entityType\": \"CwhOUtYg\",\n      \"schemaVersionMajor\": 60626580,\n      \"schemaVersionMinor\": -81798083,\n      \"schemaVersionPatch\": -53869646,\n      \"source\": \"jY\",\n      \"id\": \"aliqua quis dolor\"\n    },\n    \"status\": \"PUBLISHED\",\n    \"createdBy\": \"in non id qui\",\n    \"dateCreated\": \"1996-12-13T18:11:13.924Z\",\n    \"scope\": \"INTERNAL\",\n    \"supersededBy\": {\n      \"authority\": \"x6i9F\",\n      \"entityType\": \"pA.vtZGIv\",\n      \"schemaVersionMajor\": -46955920,\n      \"schemaVersionMinor\": 64201956,\n      \"schemaVersionPatch\": -87218030,\n      \"source\": \"RE\",\n      \"id\": \"ut ullam\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/schema-service/v1/schema",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"schema-service",
								"v1",
								"schema"
							]
						}
					},
					"response": []
				},
				{
					"name": "createSchema",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schema\": {},\n  \"schemaInfo\": {\n    \"schemaIdentity\": {\n      \"authority\": \"APwDflg\",\n      \"entityType\": \"CwhOUtYg\",\n      \"schemaVersionMajor\": 60626580,\n      \"schemaVersionMinor\": -81798083,\n      \"schemaVersionPatch\": -53869646,\n      \"source\": \"jY\",\n      \"id\": \"aliqua quis dolor\"\n    },\n    \"status\": \"PUBLISHED\",\n    \"createdBy\": \"in non id qui\",\n    \"dateCreated\": \"1996-12-13T18:11:13.924Z\",\n    \"scope\": \"INTERNAL\",\n    \"supersededBy\": {\n      \"authority\": \"x6i9F\",\n      \"entityType\": \"pA.vtZGIv\",\n      \"schemaVersionMajor\": -46955920,\n      \"schemaVersionMinor\": 64201956,\n      \"schemaVersionPatch\": -87218030,\n      \"source\": \"RE\",\n      \"id\": \"ut ullam\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/schema-service/v1/schema",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"schema-service",
								"v1",
								"schema"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSchema",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/schema-service/v1/schema/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"schema-service",
								"v1",
								"schema",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "Duis sit",
									"description": "(Required) id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "upsertSystemSchema",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "{{apiKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schema\": {},\n  \"schemaInfo\": {\n    \"schemaIdentity\": {\n      \"authority\": \"ZVfVAmR\",\n      \"entityType\": \"K7raiY\",\n      \"schemaVersionMajor\": 25166447,\n      \"schemaVersionMinor\": 49470818,\n      \"schemaVersionPatch\": 8911543,\n      \"source\": \"09.nsMw1Sdm\",\n      \"id\": \"laboris ad fugiat laborum non\"\n    },\n    \"status\": \"OBSOLETE\",\n    \"createdBy\": \"consectetur dolore veniam\",\n    \"dateCreated\": \"1951-10-02T00:26:14.028Z\",\n    \"scope\": \"SHARED\",\n    \"supersededBy\": {\n      \"authority\": \"NhQv-xvg5\",\n      \"entityType\": \"Y8Lg\",\n      \"schemaVersionMajor\": -21057209,\n      \"schemaVersionMinor\": 86615525,\n      \"schemaVersionPatch\": 22719897,\n      \"source\": \"9UWk50jZki-\",\n      \"id\": \"commodo reprehenderit voluptate offi\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/schema-service/v1/schemas/system",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"schema-service",
								"v1",
								"schemas",
								"system"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant. This should be same value as first field in 'kind' field",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/v2/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"v2",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health",
					"item": [
						{
							"name": "livenessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant. This should be same value as first field in 'kind' field",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/v2/health/liveness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"v2",
										"health",
										"liveness_check"
									]
								}
							},
							"response": []
						},
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant. This should be same value as first field in 'kind' field",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/v2/health/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"v2",
										"health",
										"readiness_check"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cross Cluster Search",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Account ID is the active DELFI account (SLB account or customer's account) which the users choose to use with the Search API.",
								"key": "account-id",
								"value": ""
							},
							{
								"description": "(Required) tenant. This should be same value as first field in 'kind' field",
								"key": "data-partition-id",
								"value": ""
							},
							{
								"description": "Token (Google ID or SAuth) representing the user whose request is sent on behalf of.",
								"key": "on-behalf-of",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"kind\": \"\\\"common:ihs:well:1.0.0\\\" or \\\"common:ihs:well:1.0.0,common:ihs:well:2.0.0\\\" or [\\\"common:ihs:well:1.0.0\\\", \\\"common:ihs:well:2.0.0\\\"]\",\n  \"limit\": 30,\n  \"offset\": 0,\n  \"query\": \"dolore cillum veniam adipisicing\",\n  \"queryAsOwner\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/search/v2/ccs/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"search",
								"v2",
								"ccs",
								"query"
							]
						},
						"description": "The API supports cross cluster searches when given the list of partitions."
					},
					"response": []
				},
				{
					"name": "Search",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Account ID is the active DELFI account (SLB account or customer's account) which the users choose to use with the Search API.",
								"key": "account-id",
								"value": ""
							},
							{
								"description": "(Required) tenant. This should be same value as first field in 'kind' field",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "Token (Google ID or SAuth) representing the user whose request is sent on behalf of.",
								"key": "on-behalf-of",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"kind\": {},\n  \"limit\": 30,\n  \"offset\": 0,\n  \"query\": \"non repre\",\n  \"queryAsOwner\": false,\n  \"returnedFields\": [\n    \"elit \",\n    \"amet voluptate\"\n  ],\n  \"sort\": {\n    \"field\": [\n      \"Duis\",\n      \"nulla sit\"\n    ],\n    \"order\": {}\n  },\n  \"spatialFilter\": {\n    \"byBoundingBox\": {\n      \"bottomRight\": {\n        \"latitude\": 37.450727,\n        \"longitude\": -122.174762\n      },\n      \"topLeft\": {\n        \"latitude\": 37.450727,\n        \"longitude\": -122.174762\n      }\n    },\n    \"byDistance\": {\n      \"distance\": 1500,\n      \"point\": {\n        \"latitude\": 37.450727,\n        \"longitude\": -122.174762\n      }\n    },\n    \"byGeoPolygon\": {\n      \"points\": [\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        },\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        }\n      ]\n    },\n    \"byIntersection\": {\n      \"polygons\": [\n        {\n          \"points\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"points\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    \"byWithinPolygon\": {\n      \"points\": [\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        },\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        }\n      ]\n    },\n    \"field\": \"cillum in esse\"\n  },\n  \"trackTotalCount\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/search/v2/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"search",
								"v2",
								"query"
							]
						},
						"description": "The API supports full text search on string fields, range queries on date, numeric or string fields, along with geo-spatial search. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins' or 'users.datalake.ops'. In addition, users must be a member of data groups to access the data."
					},
					"response": []
				},
				{
					"name": "Cursor Search",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Account ID is the active DELFI account (SLB account or customer's account) which the users choose to use with the Search API.",
								"key": "account-id",
								"value": ""
							},
							{
								"description": "(Required) tenant. This should be same value as first field in 'kind' field",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "Token (Google ID or SAuth) representing the user whose request is sent on behalf of.",
								"key": "on-behalf-of",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"kind\": {},\n  \"cursor\": \"ad culpa ea enim\",\n  \"limit\": 30,\n  \"query\": \"eu\",\n  \"queryAsOwner\": false,\n  \"returnedFields\": [\n    \"cillum do dolore\",\n    \"aute qui veniam\"\n  ],\n  \"sort\": {\n    \"field\": [\n      \"et\",\n      \"cupidatat sunt cu\"\n    ],\n    \"order\": {}\n  },\n  \"spatialFilter\": {\n    \"byBoundingBox\": {\n      \"bottomRight\": {\n        \"latitude\": 37.450727,\n        \"longitude\": -122.174762\n      },\n      \"topLeft\": {\n        \"latitude\": 37.450727,\n        \"longitude\": -122.174762\n      }\n    },\n    \"byDistance\": {\n      \"distance\": 1500,\n      \"point\": {\n        \"latitude\": 37.450727,\n        \"longitude\": -122.174762\n      }\n    },\n    \"byGeoPolygon\": {\n      \"points\": [\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        },\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        }\n      ]\n    },\n    \"byIntersection\": {\n      \"polygons\": [\n        {\n          \"points\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"points\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    \"byWithinPolygon\": {\n      \"points\": [\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        },\n        {\n          \"latitude\": 37.450727,\n          \"longitude\": -122.174762\n        }\n      ]\n    },\n    \"field\": \"laboris in irure eu\"\n  },\n  \"trackTotalCount\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/search/v2/query_with_cursor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"search",
								"v2",
								"query_with_cursor"
							]
						},
						"description": "The API supports full text search on string fields, range queries on date, numeric or string fields, along with geo-spatial search. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins' or 'users.datalake.ops'. In addition, users must be a member of data groups to access the data. It can be used to retrieve large numbers of results (or even all results) from a single search request, in much the same way as you would use a cursor on a traditional database."
					},
					"response": []
				}
			]
		},
		{
			"name": "Storage",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "healthMessage",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"health"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Records",
					"item": [
						{
							"name": "createOrUpdateRecords",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"acl\": {\n      \"owners\": [\n        \"eu non\",\n        \"nulla sed voluptate\"\n      ],\n      \"viewers\": [\n        \"voluptate ex fugiat qui\",\n        \"ad\"\n      ]\n    },\n    \"id\": \"common:work-product-component--wellLog:123456\",\n    \"kind\": \"common:wks:work-product-component--wellLog:1.0.0\",\n    \"ancestry\": {\n      \"parents\": [\n        \"nulla\",\n        \"laborum cupidatat\"\n      ]\n    },\n    \"data\": {},\n    \"legal\": {\n      \"legaltags\": [\n        \"do quis exer\",\n        \"consequat\"\n      ],\n      \"otherRelevantDataCountries\": [\n        \"minim dolor amet culpa\",\n        \"ullamco pariatur culpa ad\"\n      ],\n      \"status\": \"compliant\"\n    },\n    \"meta\": [\n      {\n        \"non_386\": {}\n      },\n      {\n        \"dolore_8\": {}\n      }\n    ],\n    \"tags\": {\n      \"do_abd\": \"anim dolor mollit quis\",\n      \"officia_54a\": \"ut anim\"\n    },\n    \"version\": -29186894\n  },\n  {\n    \"acl\": {\n      \"owners\": [\n        \"consequat sed ad ullamco et\",\n        \"sit magna culpa Duis\"\n      ],\n      \"viewers\": [\n        \"cillum quis consectetur sint pariatur\",\n        \"aliquip exercitation enim\"\n      ]\n    },\n    \"id\": \"common:work-product-component--wellLog:123456\",\n    \"kind\": \"common:wks:work-product-component--wellLog:1.0.0\",\n    \"ancestry\": {\n      \"parents\": [\n        \"elit in officia sit proident\",\n        \"ullamco dolore minim\"\n      ]\n    },\n    \"data\": {},\n    \"legal\": {\n      \"legaltags\": [\n        \"adipisicing id fugiat\",\n        \"irure quis\"\n      ],\n      \"otherRelevantDataCountries\": [\n        \"consequat in sint\",\n        \"eu elit consequat velit\"\n      ],\n      \"status\": \"compliant\"\n    },\n    \"meta\": [\n      {\n        \"pariaturf\": {}\n      },\n      {\n        \"Duis_5\": {},\n        \"aliquaff\": {},\n        \"pariatur_8c\": {}\n      }\n    ],\n    \"tags\": {\n      \"in_e7_\": \"culpa incididunt\"\n    },\n    \"version\": 17568528\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records?skipdupes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records"
									],
									"query": [
										{
											"key": "skipdupes",
											"value": "true",
											"description": "skipdupes"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateRecordsMetadata",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": ""
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ops\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/acl/owners\",\n      \"value\": [\n        \"ipsum qui fugiat\",\n        \"voluptate aliqua cupidatat in\"\n      ]\n    },\n    {\n      \"op\": \"replace\",\n      \"path\": \"/acl/owners\",\n      \"value\": [\n        \"velit id sunt\",\n        \"ex exercitation\"\n      ]\n    }\n  ],\n  \"query\": {\n    \"ids\": [\n      \"dolor esse reprehenderit velit\",\n      \"in\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulkDeleteRecords",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"ipsum occaecat magna\",\n  \"magna est in veniam\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "getRecordVersions",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records/versions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										"versions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "WH:qFxgJq6:Vl2",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteRecord",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "[record_id]:delete",
											"description": "replace [record-id] with the relevant record id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getLatestRecordVersion",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records/:id?attribute=ipsum officia Lorem culpa in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										":id"
									],
									"query": [
										{
											"key": "attribute",
											"value": "ipsum officia Lorem culpa in",
											"description": "attribute"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "WH:qFxgJq6:Vl2",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "purgeRecord",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "WH:qFxgJq6:Vl2",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getSpecificRecordVersion",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/records/:id/:version?attribute=ipsum officia Lorem culpa in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										":id",
										":version"
									],
									"query": [
										{
											"key": "attribute",
											"value": "ipsum officia Lorem culpa in",
											"description": "attribute"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "WH:qFxgJq6:Vl2",
											"description": "(Required) id"
										},
										{
											"key": "version",
											"value": "-30744538",
											"description": "(Required) version"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Query",
					"item": [
						{
							"name": "getKinds",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/query/kinds?cursor=ipsum officia Lorem culpa in&limit=-5918117",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"query",
										"kinds"
									],
									"query": [
										{
											"key": "cursor",
											"value": "ipsum officia Lorem culpa in",
											"description": "cursor"
										},
										{
											"key": "limit",
											"value": "-5918117",
											"description": "limit"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "fetchRecords",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"records\": [\n    \"voluptate amet\",\n    \"laborum eiusmod\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/query/records:batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"query",
										"records:batch"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllRecords",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/query/records?cursor=ipsum officia Lorem culpa in&limit=-5918117&kind=ipsum officia Lorem culpa in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"query",
										"records"
									],
									"query": [
										{
											"key": "cursor",
											"value": "ipsum officia Lorem culpa in",
											"description": "cursor"
										},
										{
											"key": "limit",
											"value": "-5918117",
											"description": "limit"
										},
										{
											"key": "kind",
											"value": "ipsum officia Lorem culpa in",
											"description": "(Required) kind"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getRecords",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": [\n    \"incididunt dolor tempor pariatur\",\n    \"eiusmod reprehenderit elit\"\n  ],\n  \"records\": [\n    \"laboris sint commodo enim\",\n    \"officia Duis nulla anim\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/query/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"query",
										"records"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Schemas",
					"item": [
						{
							"name": "createSchema",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"kind\": \"common:wks:work-product-component--wellLog:1.0.0\",\n  \"ext\": {},\n  \"schema\": [\n    {\n      \"ext\": {},\n      \"kind\": \"d\",\n      \"path\": \"non eiusmod amet aliquip\",\n      \"properties\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/SchemaItem detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/SchemaItem detected>\"\n        }\n      ]\n    },\n    {\n      \"ext\": {},\n      \"kind\": \"labore ad aliqua\",\n      \"path\": \"e\",\n      \"properties\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/SchemaItem detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/SchemaItem detected>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"schemas"
									]
								}
							},
							"response": []
						},
						{
							"name": "getSchema",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/schemas/:kind",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"schemas",
										":kind"
									],
									"variable": [
										{
											"key": "kind",
											"value": "ipsum officia Lorem culpa in",
											"description": "(Required) kind"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteSchema",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"description": "(Required) reference",
										"key": "frame-of-reference",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/storage/v2/schemas/:kind",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"schemas",
										":kind"
									],
									"variable": [
										{
											"key": "kind",
											"value": "ipsum officia Lorem culpa in",
											"description": "(Required) kind"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "legaltagChanged",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) tenant",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"description": "(Required) reference",
								"key": "frame-of-reference",
								"value": ""
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/storage/v2/push-handlers/legaltag-changed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"storage",
								"v2",
								"push-handlers",
								"legaltag-changed"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unit",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/unit/v3/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"unit",
										"v3",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "livenessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/unit/_ah/liveness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"unit",
										"_ah",
										"liveness_check"
									]
								}
							},
							"response": []
						},
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/unit/_ah/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"unit",
										"_ah",
										"readiness_check"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "v3",
					"item": [
						{
							"name": "catalog",
							"item": [
								{
									"name": "getCatalog",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/catalog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"catalog"
											]
										}
									},
									"response": []
								},
								{
									"name": "getLastModified",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/catalog/lastmodified",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"catalog",
												"lastmodified"
											]
										}
									},
									"response": []
								},
								{
									"name": "getMapStates",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/catalog/mapstates?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"catalog",
												"mapstates"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "postSearch",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"query\": \"adipisicing ad magna\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/catalog/search?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"catalog",
												"search"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "conversion",
							"item": [
								{
									"name": "abcd",
									"item": [
										{
											"name": "getConversionABCDBySymbols",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/conversion/abcd?namespaces=occaecat cillum&fromSymbol=occaecat cillum&toSymbol=occaecat cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"conversion",
														"abcd"
													],
													"query": [
														{
															"key": "namespaces",
															"value": "occaecat cillum",
															"description": "(Required) namespaces"
														},
														{
															"key": "fromSymbol",
															"value": "occaecat cillum",
															"description": "(Required) fromSymbol"
														},
														{
															"key": "toSymbol",
															"value": "occaecat cillum",
															"description": "(Required) toSymbol"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "postConversionABCD",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fromUnit\": {\n    \"abcd\": {\n      \"a\": -75598797.93000177,\n      \"b\": -42051647.3723727,\n      \"c\": 62989691.59840438,\n      \"d\": 38067981.06087005\n    },\n    \"baseMeasurement\": {\n      \"ancestry\": \"in exercitation\",\n      \"type\": \"nisi proident\"\n    },\n    \"scaleOffset\": {\n      \"offset\": 39860585.31635335,\n      \"scale\": 26405577.45946768\n    },\n    \"symbol\": \"quis mollit\",\n    \"type\": \"iru\"\n  },\n  \"fromUnitPersistableReference\": \"dolore pariatur\",\n  \"toUnit\": {\n    \"abcd\": {\n      \"a\": -3502229.0805861205,\n      \"b\": -72498605.62742394,\n      \"c\": -68120453.00527787,\n      \"d\": -52535426.32267494\n    },\n    \"baseMeasurement\": {\n      \"ancestry\": \"esse\",\n      \"type\": \"fugiat irure aliquip cupidatat pariatur\"\n    },\n    \"scaleOffset\": {\n      \"offset\": -43929783.697205685,\n      \"scale\": 25830927.62285109\n    },\n    \"symbol\": \"veniam eu in elit\",\n    \"type\": \"mollit\"\n  },\n  \"toUnitPersistableReference\": \"minim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/conversion/abcd",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"conversion",
														"abcd"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "scale",
									"item": [
										{
											"name": "getConversionScaleOffsetBySymbols",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/conversion/scale?namespaces=occaecat cillum&fromSymbol=occaecat cillum&toSymbol=occaecat cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"conversion",
														"scale"
													],
													"query": [
														{
															"key": "namespaces",
															"value": "occaecat cillum",
															"description": "(Required) namespaces"
														},
														{
															"key": "fromSymbol",
															"value": "occaecat cillum",
															"description": "(Required) fromSymbol"
														},
														{
															"key": "toSymbol",
															"value": "occaecat cillum",
															"description": "(Required) toSymbol"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "postConversionScaleOffset",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fromUnit\": {\n    \"abcd\": {\n      \"a\": 74369039.94192111,\n      \"b\": -70480815.77698961,\n      \"c\": -8212595.339044526,\n      \"d\": 78327000.39161304\n    },\n    \"baseMeasurement\": {\n      \"ancestry\": \"aliquip culpa eu\",\n      \"type\": \"occaecat ex\"\n    },\n    \"scaleOffset\": {\n      \"offset\": 78891350.92395607,\n      \"scale\": 31122762.338821232\n    },\n    \"symbol\": \"deserunt non velit irure\",\n    \"type\": \"sint pariatur eiusmod consequat\"\n  },\n  \"fromUnitPersistableReference\": \"magna veniam\",\n  \"toUnit\": {\n    \"abcd\": {\n      \"a\": 13688316.487088144,\n      \"b\": -24725100.210986823,\n      \"c\": 22488018.76907827,\n      \"d\": 39411231.63374862\n    },\n    \"baseMeasurement\": {\n      \"ancestry\": \"id\",\n      \"type\": \"in\"\n    },\n    \"scaleOffset\": {\n      \"offset\": 5803445.700173169,\n      \"scale\": -67520368.84385175\n    },\n    \"symbol\": \"ea sit dolore nostrud\",\n    \"type\": \"amet\"\n  },\n  \"toUnitPersistableReference\": \"tempor do\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/conversion/scale",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"conversion",
														"scale"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "measurement",
							"item": [
								{
									"name": "getMeasurement",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/measurement?ancestry=occaecat cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"measurement"
											],
											"query": [
												{
													"key": "ancestry",
													"value": "occaecat cillum",
													"description": "(Required) ancestry"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "postMeasurement",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"essence\": {\n    \"ancestry\": \"id\",\n    \"type\": \"ea esse\"\n  },\n  \"persistableReference\": \"exercitation fug\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/measurement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"measurement"
											]
										}
									},
									"response": []
								},
								{
									"name": "getMeasurements",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/measurement/list?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"measurement",
												"list"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getMeasurementMaps",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/measurement/maps?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"measurement",
												"maps"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "postSearchMeasurements",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"query\": \"adipisicing ad magna\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/measurement/search?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"measurement",
												"search"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "unit",
							"item": [
								{
									"name": "measurement",
									"item": [
										{
											"name": "preferred",
											"item": [
												{
													"name": "getPreferredUnitsByMeasurement",
													"request": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition}}"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/unit/v3/unit/measurement/preferred?ancestry=occaecat cillum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"measurement",
																"preferred"
															],
															"query": [
																{
																	"key": "ancestry",
																	"value": "occaecat cillum",
																	"description": "(Required) ancestry"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "postPreferredUnitsByMeasurement",
													"request": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"essence\": {\n    \"ancestry\": \"id\",\n    \"type\": \"ea esse\"\n  },\n  \"persistableReference\": \"exercitation fug\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/unit/v3/unit/measurement/preferred",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"measurement",
																"preferred"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "getUnitsByMeasurement",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/unit/measurement?ancestry=occaecat cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"measurement"
													],
													"query": [
														{
															"key": "ancestry",
															"value": "occaecat cillum",
															"description": "(Required) ancestry"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "postUnitsByMeasurement",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"ancestry\": \"id\",\n    \"type\": \"ea esse\"\n  },\n  \"persistableReference\": \"exercitation fug\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/unit/measurement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"measurement"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "unitsystem",
									"item": [
										{
											"name": "getUnitBySystemAndMeasurement",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/unit/unitsystem?unitSystemName=occaecat cillum&ancestry=occaecat cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"unitsystem"
													],
													"query": [
														{
															"key": "unitSystemName",
															"value": "occaecat cillum",
															"description": "(Required) unitSystemName"
														},
														{
															"key": "ancestry",
															"value": "occaecat cillum",
															"description": "(Required) ancestry"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "postUnitBySystemAndMeasurement",
											"request": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"essence\": {\n    \"ancestry\": \"id\",\n    \"type\": \"ea esse\"\n  },\n  \"persistableReference\": \"exercitation fug\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/unit/v3/unit/unitsystem?unitSystemName=occaecat cillum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"unitsystem"
													],
													"query": [
														{
															"key": "unitSystemName",
															"value": "occaecat cillum",
															"description": "(Required) unitSystemName"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "getUnits",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unit?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unit"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "postUnit",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"essence\": {\n    \"abcd\": {\n      \"a\": -78594619.39025319,\n      \"b\": -6699485.919740275,\n      \"c\": 68149091.94360107,\n      \"d\": -59754501.67066887\n    },\n    \"baseMeasurement\": {\n      \"ancestry\": \"esse proident\",\n      \"type\": \"consectetur reprehenderit exercitation\"\n    },\n    \"scaleOffset\": {\n      \"offset\": -949734.1041316986,\n      \"scale\": -73532972.11627764\n    },\n    \"symbol\": \"mollit eiusmod irure cillum\",\n    \"type\": \"aute ullamco dolore mollit\"\n  },\n  \"persistableReference\": \"minim in reprehenderit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unit"
											]
										}
									},
									"response": []
								},
								{
									"name": "getUnitMaps",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unit/maps?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unit",
												"maps"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "postSearchUnits",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"query\": \"adipisicing ad magna\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unit/search?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unit",
												"search"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getUnitBySymbol",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unit/symbol?namespaces=occaecat cillum&symbol=occaecat cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unit",
												"symbol"
											],
											"query": [
												{
													"key": "namespaces",
													"value": "occaecat cillum",
													"description": "(Required) namespaces"
												},
												{
													"key": "symbol",
													"value": "occaecat cillum",
													"description": "(Required) symbol"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getUnitsBySymbol",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unit/symbols?symbol=occaecat cillum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unit",
												"symbols"
											],
											"query": [
												{
													"key": "symbol",
													"value": "occaecat cillum",
													"description": "(Required) symbol"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "unitsystem",
							"item": [
								{
									"name": "getUnitSystem",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unitsystem?name=occaecat cillum&offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unitsystem"
											],
											"query": [
												{
													"key": "name",
													"value": "occaecat cillum",
													"description": "(Required) name"
												},
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "postUnitSystem",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"essence\": {\n    \"ancestry\": \"velit exercitation\"\n  },\n  \"persistableReference\": \"eiusmod proident exercitatio\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unitsystem?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unitsystem"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getUnitSystemInfoList",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "{{data_partition}}"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/unit/v3/unitsystem/list?offset=91498549&limit=91498549",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"unit",
												"v3",
												"unitsystem",
												"list"
											],
											"query": [
												{
													"key": "offset",
													"value": "91498549",
													"description": "offset"
												},
												{
													"key": "limit",
													"value": "91498549",
													"description": "limit"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Workflow",
			"item": [
				{
					"name": "Info",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Which tenant to use",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/workflow/v1/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"workflow",
										"v1",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Health Check",
					"item": [
						{
							"name": "livenessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Which tenant to use",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/workflow/liveness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"workflow",
										"liveness_check"
									]
								}
							},
							"response": []
						},
						{
							"name": "readinessCheck",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Which tenant to use",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/workflow/readiness_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"workflow",
										"readiness_check"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "system",
					"item": [
						{
							"name": "createSystemWorkflow",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Which tenant to use",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"incididunt\",\n  \"registrationInstructions\": {},\n  \"workflowName\": \"do sunt sed occaecat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/workflow/v1/workflow/system",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"workflow",
										"v1",
										"workflow",
										"system"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteSystemWorkflowById",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Which tenant to use",
										"key": "data-partition-id",
										"value": "{{data_partition}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/workflow/v1/workflow/system/:workflow_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"workflow",
										"v1",
										"workflow",
										"system",
										":workflow_name"
									],
									"variable": [
										{
											"key": "workflow_name",
											"value": "reprehenderit ut",
											"description": "(Required) workflow_name"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getAllWorkflowsForTenant",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow?prefix=reprehenderit ut",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow"
							],
							"query": [
								{
									"key": "prefix",
									"value": "reprehenderit ut",
									"description": "prefix"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"incididunt\",\n  \"registrationInstructions\": {},\n  \"workflowName\": \"do sunt sed occaecat\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow"
							]
						}
					},
					"response": []
				},
				{
					"name": "getWorkflowRunById",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow/:workflow_name/workflowRun/:runId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow",
								":workflow_name",
								"workflowRun",
								":runId"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "reprehenderit ut",
									"description": "(Required) workflow_name"
								},
								{
									"key": "runId",
									"value": "reprehenderit ut",
									"description": "(Required) runId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateWorkflowRun",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"QUEUED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow/:workflow_name/workflowRun/:runId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow",
								":workflow_name",
								"workflowRun",
								":runId"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "reprehenderit ut",
									"description": "(Required) workflow_name"
								},
								{
									"key": "runId",
									"value": "reprehenderit ut",
									"description": "(Required) runId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllRunInstances",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow/:workflow_name/workflowRun",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow",
								":workflow_name",
								"workflowRun"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "reprehenderit ut",
									"description": "(Required) workflow_name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "triggerWorkflow",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"executionContext\": {},\n  \"runId\": \"labore\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow/:workflow_name/workflowRun",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow",
								":workflow_name",
								"workflowRun"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "reprehenderit ut",
									"description": "(Required) workflow_name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getWorkflowByName",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow/:workflow_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow",
								":workflow_name"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "reprehenderit ut",
									"description": "(Required) workflow_name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteWorkflowById",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) Which tenant to use",
								"key": "data-partition-id",
								"value": "{{data_partition}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/workflow/v1/workflow/:workflow_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"workflow",
								"v1",
								"workflow",
								":workflow_name"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "reprehenderit ut",
									"description": "(Required) workflow_name"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
