swagger: "2.0"
info:
  version: "2.0.0"
  title: Storage Service
  description: Api Documentation for Storage service
  contact: {}
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
basePath: /api/storage/v2
paths:
  /health:
    get:
      description: 'This API returns Health Information using `data-partition-id`.'
      summary: Get Health Information.
      tags:
        - health-check-api
      operationId: Health_Get
      deprecated: false
      produces:
        - text/plain
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
      responses:
        '200':
          description: OK
          schema:
            type: string
            default: ''
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /info:
    get:
      description: 'This API provides which provides build and git related information.'
      summary: Get Version Info.
      tags:
        - info-api
      operationId: Version_Get
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VersionInfo'
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /records:
    patch:
      description: 'The API represents the patch update mechanism for records. It allows updating multiple records in one request. The currently supported operations are replace, add, and remove for Legal Tags, ACLs, and Tags.'
      summary: 'Modify record metadata attributes using patch operations'
      tags:
        - patch-api
      operationId: RecordsMetadata_PATCH
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ''
        - name: body
          in: body
          required: false
          description: ''
          schema:
            $ref: '#/definitions/RecordBulkUpdateParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkUpdateRecordsResponse'
          headers: {}
        '204':
          description: No Content
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
      security:
        - Bearer: []
    put:
      description: The API represents the main injection mechanism into the Data Ecosystem. It allows records creation and/or update. When no record id is provided or when the provided id is not already present in the Data Ecosystemthen a new record is created. If the id is related to an existing record in the Data Ecosystemthen an update operation takes place and a new version of the record is created.
      summary: Create or Update Records.
      tags:
        - record-api
      operationId: Record_PUT
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: skipdupes
          in: query
          required: false
          type: boolean
          description: skipdupes
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ''
        - name: body
          in: body
          required: false
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Record'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CreateUpdateRecordsResponse'
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /query/kinds:
    get:
      description: 'This Api will return kinds using `data-partition-id` as extended list with cursor.'
      summary: Get Kinds.
      tags:
        - query-api
      operationId: Kinds_Get
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: cursor
          in: query
          required: false
          type: string
          description: cursor
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
          description: limit
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DatastoreQueryResult'
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /query/records:
    get:
      description: 'This Api will return `recordIds` as list using `kind` and `data-partition-id`.'
      summary: Get Records Info using kind.
      tags:
        - query-api
      operationId: RecordIdUsingKind_Get
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: cursor
          in: query
          required: false
          type: string
          description: cursor
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
          description: limit
        - name: kind
          in: query
          required: true
          type: string
          description: kind
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DatastoreQueryResult'
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
    post:
      description: 'This Api will return Records data using post.'
      summary: Get Records data using post.
      tags:
        - query-api
      operationId: GetRecords_POST
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ''
        - name: body
          in: body
          required: false
          description: ''
          schema:
            $ref: '#/definitions/MultiRecordIds'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MultiRecordInfo'
          headers: {}
        '201':
          description: Created
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /query/records:batch:
    post:
      description: 'The API fetches multiple records from storage service at once, it allows user to request data being converted to common standard by using customized header {frame-of-reference}. Common standard is units in SI, crs in wgs84, elevation in msl, azimuth in true north, dates in utc.'
      summary: Fetch batch records using post.
      tags:
        - query-api
      operationId: FetchRecords_POST
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ''
        - name: frame-of-reference
          in: header
          required: true
          type: string
          description: reference
        - name: body
          in: body
          required: false
          description: ''
          schema:
            $ref: '#/definitions/MultiRecordRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MultiRecordResponse'
          headers: {}
        '201':
          description: Created
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /records/delete:
    post:
      description: 'The API performs a logical deletion of batch of record.'
      summary: Bulk delete records.
      tags:
        - record-api
      operationId: BultDelete_POST
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ''
        - name: body
          in: body
          required: false
          description: ''
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          headers: {}
        '201':
          description: Created
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /records/versions/{id}:
    get:
      description: 'The API returns a list containing all versions for the given record id.'
      summary: Get record versions.
      tags:
        - record-api
      operationId: RecordVersion_Get
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: id
          in: path
          required: true
          type: string
          pattern: ^[\w\-\.]+:[\w-\.]+:[\w\-\.\:\%]+$
          description: id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RecordVersions'
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /records/{id}:
    get:
      description: 'This API returns the latest version of the given record.'
      summary: Get latest record version data.
      tags:
        - record-api
      operationId: LatestRecordVersinData_Get
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: id
          in: path
          required: true
          type: string
          pattern: ^[\w\-\.]+:[\w-\.]+:[\w\-\.\:\%]+$
          description: id
        - name: attribute
          in: query
          required: false
          type: string
          description: attribute
      responses:
        '200':
          description: OK
          schema:
            type: string
            default: ''
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
    delete:
      description: 'Delete all version of record using recordId.'
      summary: Delete record.
      tags:
        - record-api
      operationId: Record_Delete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: id
          in: path
          required: true
          type: string
          pattern: ^[\w\-\.]+:[\w-\.]+:[\w\-\.\:\%]+$
          description: id
      responses:
        '200':
          description: OK
          headers: {}
        '204':
          description: No Content
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
      security:
        - Bearer: []
  /records/{id}/{version}:
    get:
      description: 'The API retrieves the specific version of the given record.'
      summary: Get Specific record.
      tags:
        - record-api
      operationId: SpecificRecord_GET
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: id
          in: path
          required: true
          type: string
          pattern: ^[\w\-\.]+:[\w-\.]+:[\w\-\.\:\%]+$
          description: id
        - name: version
          in: path
          required: true
          type: integer
          format: int64
          description: version
        - name: attribute
          in: query
          required: false
          type: string
          description: attribute
      responses:
        '200':
          description: OK
          schema:
            type: string
            default: ''
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
  /records/{id}:delete:
    post:
      description: 'The API performs a logical deletion of the given record.'
      summary: Delete Record using POST.
      tags:
        - record-api
      operationId: DeleteRecord_POST
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          required: true
          type: string
          description: 'data partition-id for resource.'
        - name: id
          in: path
          required: true
          type: string
          pattern: ^[\w\-\.]+:[\w-\.]+:[\w\-\.\:\%]+$
          description: id
      responses:
        '200':
          description: OK
          headers: {}
        '201':
          description: Created
          headers: {}
        '401':
          description: Unauthorized
          headers: {}
        '403':
          description: Forbidden
          headers: {}
        '404':
          description: Not Found
          headers: {}
      security:
        - Bearer: []
definitions:
  Acl:
    title: Acl
    description: "Group of users who have access to the record."
    type: object
    properties:
      owners:
        type: array
        description: "List of valid groups which will have write privileges over the\
          \ record."
        items:
          type: string
      viewers:
        type: array
        description: "List of valid groups which will have view/read privileges over\
          \ the record."
        items:
          type: string
  BulkUpdateRecordsResponse:
    title: BulkUpdateRecordsResponse
    type: object
    properties:
      lockedRecordIds:
        type: array
        description: "List of locked record ids"
        items:
          type: string
      notFoundRecordIds:
        type: array
        description: "List of record ids for whom RecordMetadata was not found"
        items:
          type: string
      recordCount:
        type: integer
        description: "Number of records which updated successfully."
        format: int32
      recordIds:
        type: array
        description: "List of successfully updated record ids."
        items:
          type: string
      unAuthorizedRecordIds:
        type: array
        description: "List of record ids for whom user does not has owner permissions"
        items:
          type: string
  ConnectedOuterService:
    title: ConnectedOuterService
    type: object
    properties:
      name:
        type: string
        description: "Connected outer service name."
      version:
        type: string
        description: "Connected outer service version."
  ConversionStatus:
    title: ConversionStatus
    type: object
    properties:
      errors:
        type: array
        items:
          type: string
      id:
        type: string
      status:
        type: string
  CreateUpdateRecordsResponse:
    title: CreateUpdateRecordsResponse
    type: object
    properties:
      recordCount:
        type: integer
        description: "Number of records ingested successfully."
        format: int32
      recordIdVersions:
        type: array
        description: "List of ingested record id versions."
        items:
          type: string
      recordIds:
        type: array
        description: "List of record ids."
        items:
          type: string
      skippedRecordIds:
        type: array
        description: "List of record id that skipped update because it was a duplicate."
        items:
          type: string
  DatastoreQueryResult:
    title: DatastoreQueryResult
    type: object
    properties:
      cursor:
        type: string
        description: 'cursor information for pagination.'
      results:
        type: array
        items:
          type: string
  Legal:
    title: Legal
    type: object
    properties:
      legaltags:
        type: array
        description: "List of legaltag names associated with the record."
        items:
          type: string
        uniqueItems: true
      otherRelevantDataCountries:
        type: array
        description: 'List of other relevant data countries.'
        items:
          type: string
        uniqueItems: true
      status:
        $ref: '#/definitions/Status'
  MultiRecordIds:
    title: MultiRecordIds
    type: object
    properties:
      attributes:
        type: array
        description: 'Filter attributes to restrict the returned fields of the record.'
        items:
          type: string
      records:
        type: array
        description: 'List of record ids.'
        items:
          type: string
  MultiRecordInfo:
    title: MultiRecordInfo
    description: "Multiple Storage records."
    type: object
    properties:
      invalidRecords:
        type: array
        items:
          type: string
      records:
        type: array
        items:
          $ref: '#/definitions/Record'
      retryRecords:
        type: array
        items:
          type: string
  MultiRecordRequest:
    title: MultiRecordRequest
    type: object
    properties:
      records:
        type: array
        items:
          type: string
  MultiRecordResponse:
    title: MultiRecordResponse
    type: object
    properties:
      conversionStatuses:
        type: array
        items:
          $ref: '#/definitions/ConversionStatus'
      notFound:
        type: array
        items:
          type: string
      records:
        type: array
        items:
          type: string
  PatchOperation:
    title: PatchOperation
    type: object
    properties:
      op:
        description: 'Bulk update record operation.'
        example: replace, add, remove
        type: string
      path:
        description: 'Bulk update record path.'
        example: /acl/owners
        type: string
      value:
        description: 'Bulk update record path.'
        type: array
        items:
          type: string
    required:
      - op
      - path
      - value
  Record:
    title: Record
    type: object
    properties:
      acl:
        $ref: '#/definitions/Acl'
      ancestry:
        $ref: '#/definitions/RecordAncestry'
      data:
        type: object
        description: "Record payload represented as a list of key-value pairs."
      id:
        description: 'Unique identifier in whole Data Ecosystem. When not provided, Data Ecosystem will create and assign an id to the record. Must follow the naming convention: {Data-Partition-Id}:{object-type}:{uuid}.'
        example: common:work-product-component--wellLog:123456
        type: string
        pattern: ^[\w\-\.]+:[\w-\.]+:[\w\-\.\:\%]+$
      kind:
        description: 'Record kind for which the schema information is applied to.'
        example: common:wks:work-product-component--wellLog:1.0.0
        type: string
      legal:
        $ref: '#/definitions/Legal'
      meta:
        type: array
        items:
          type: object
      tags:
        type: object
        additionalProperties:
          type: string
      version:
        type: integer
        format: int64
    required:
      - acl
      - id
      - kind
  RecordAncestry:
    title: RecordAncestry
    type: object
    properties:
      parents:
        type: array
        items:
          type: string
        uniqueItems: true
  RecordBulkUpdateParam:
    title: RecordBulkUpdateParam
    type: object
    properties:
      ops:
        description: "Record metadata operations."
        type: array
        items:
          $ref: '#/definitions/PatchOperation'
      query:
        $ref: '#/definitions/RecordQuery'
    required:
      - ops
      - query
  RecordQuery:
    title: RecordQuery
    type: object
    properties:
      ids:
        description: "List of record ids. Each record id must follow the naming convention {Data-Partition-Id}:{dataset-name}:{record-type}:{version}."
        type: array
        items:
          type: string
    required:
      - ids
  RecordVersions:
    title: RecordVersions
    type: object
    properties:
      recordId:
        type: string
      versions:
        type: array
        items:
          type: integer
          format: int64
  VersionInfo:
    type: "object"
    properties:
      groupId:
        type: "string"
        description: "Maven artifact group ID."
      actifactId:
        type: "string"
        description: "Maven artifact ID."
      version:
        type: "string"
        description: "Maven artifact version"
      buildTime:
        type: "string"
        description: "Maven artifact build time"
      branch:
        type: "string"
        description: "Current git branch"
      commitId:
        type: "string"
        description: "Latest commit hash"
      commitMessage:
        type: "string"
        description: "Latest commit message"
      connectedOuterServices:
        type: "array"
        description: "Connected outer services information"
        items:
          $ref: "#/definitions/ConnectedOuterService"
    description: "Version info."
  Status:
    title: Status
    type: string
    enum:
      - compliant
      - incompliant
security: []
tags:
  - name: health-check-api
    description: Health Check Api
  - name: info-api
    description: Info Api
  - name: patch-api
    description: Patch Api
  - name: query-api
    description: Query Api
  - name: record-api
    description: Record Api
