swagger: '2.0'
info:
  description: Entity service
  version: 1.0.0
  title: Well Delivery Service APIs
host: dns-host
basePath: /api/well-delivery
tags:
  - name: storage
    description: Entities management operations.
  - name: wellActivityPrograms
    description: Well activity program queries
  - name: activityPlans
    description: Activity plan queries
  - name: wells
    description: Well queries
  - name: wellbores
    description: Wellbore queries
  - name: holeSections
    description: Hole section queries
  - name: bhaRuns
    description: BHA run queries
  - name: query
    description: entity queries by well id list
  - name: fluidsPrograms
    description: Fluids Program queries
  - name: operationsReports
    description: Operations report queries
  - name: fluidsReports
    description: Fluids report queries
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /storage/v1/{type}:
    put:
      tags:
        - storage
      summary: Create or update entity
      description: >-
        The API represents the main injection mechanism into the Object
        Database. It allows entity creation and/or update. When no entity id is
        provided or when the provided id is not already present in the Object
        Database then a new entity is created. If the id is related to an
        existing entity in the Object Database then an update operation takes
        place and a new version of the entity is created. Required roles:
        service.storage.creator or service.storage.admin.
      operationId: Create or update entity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          default: Well
        - name: Entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/Entity'
      responses:
        '201':
          description: Entity created and/or updated successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '400':
          description: Invalid entity format.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: Entity Id is invalid.
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
      security:
        - Bearer: []
  /storage/v1/{type}/{id}:
    get:
      tags:
        - storage
      summary: Get latest version of entity
      description: >-
        This API returns the latest version of the given entity type and id.
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get latest versio of entity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          default: Well
        - name: id
          in: path
          description: Entity id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Entity retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '400':
          description: Invalid entity type
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Invalid entity type: invalid-well'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Entity not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find entity with id:
                b0aa7248-9392-49f4-9e7c-d6215a91547d
      security:
        - Bearer: []
    delete:
      tags:
        - storage
      summary: Delete entity
      description: >-
        The API performs a logical deletion of the given entity and all of its
        versions.   This operation can be reverted later. Required roles:
        service.storage.creator or service.storage.admin.
      operationId: Delete entity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          default: Well
        - name: id
          in: path
          description: Entity id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '204':
          description: Entity deleted successfully.
        '400':
          description: Invalid entity type
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Invalid entity type: invalid-well'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Entity not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find entity with id:
                b0aa7248-9392-49f4-9e7c-d6215a91547d
      security:
        - Bearer: []
  /storage/v1/{type}/{id}/{version}:
    get:
      tags:
        - storage
      summary: Get a specific version of the given entity
      description: >-
        The API retrieves the specific version of the given entity type and id.
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get a specific version of the given entity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          default: Well
        - name: id
          in: path
          description: Entity id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
        - name: version
          in: path
          description: Entity version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '200':
          description: Entity retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '400':
          description: Invalid entity type
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Invalid entity type: invalid-well'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Entity id or version not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find entity version with id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7_1601570839996
      security:
        - Bearer: []
    delete:
      tags:
        - storage
      summary: Delete a specific version of entity
      description: >-
        The API performs a logical deletion of the given entity type, id, and
        version number.This operation can be reverted later. Required roles:
        service.storage.creator or service.storage.admin.
      operationId: Delete a specific version of entity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          default: Well
        - name: id
          in: path
          description: Entity id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
        - name: version
          in: path
          description: Entity version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '204':
          description: Entity deleted successfully.
        '400':
          description: Invalid entity type
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Invalid entity type: invalid-well'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Entity id or version not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find entity version with id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7_1601570839996
      security:
        - Bearer: []
  /storage/v1/{type}/versions/{id}:
    get:
      tags:
        - storage
      summary: Get all entity version numbers
      description: >-
        The API returns a list containing all version numbers for the given
        entity type and id. Required roles: service.storage.viewer,
        service.storage.creator or service.storage.admin.
      operationId: Get all entity version  numbers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          default: Well
        - name: id
          in: path
          description: Entity id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Entity version numbers retrieved successfully.
          schema:
            $ref: '#/definitions/VersionNumbers'
        '400':
          description: Invalid entity type
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Invalid entity type: invalid-well'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Entity not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find entity with id:
                b0aa7248-9392-49f4-9e7c-d6215a91547d
      security:
        - Bearer: []
  /storage/v1/{type}/{id}:purge:
    delete:
      tags:
        - storage
      summary: Purge entity
      description: >-
        The API performs a physical deletion of the given entity and all of its
        versions.  This operation cannot be undone. Required roles:
        service.storage.creator or service.storage.admin.
      operationId: Purge entity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          default: Well
        - name: id
          in: path
          description: Entity id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '204':
          description: Entity purged successfully.
        '400':
          description: Invalid entity type
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Invalid entity type: invalid-well'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Entity not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find entity with id:
                b0aa7248-9392-49f4-9e7c-d6215a91547d
      security:
        - Bearer: []
  /wellActivityPrograms/v1/versions/by_well/{well_id}:
    get:
      tags:
        - wellActivityPrograms
      summary: Get the version number list of well activity program
      description: >-
        The API returns version number list of well activity program for the
        given well id. Required roles: service.storage.viewer,
        service.storage.creator or service.storage.admin.
      operationId: Get the version number list of well activity program
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Well activity program object retrieved successfully.
          schema:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1601927059473
              - 1601927355133
              - 1601929371667
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well id or related well activity program object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related well activity program with well id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wellActivityPrograms/v1/by_well/{well_id}:
    get:
      tags:
        - wellActivityPrograms
      summary: Get the latest version of well activity program
      description: >-
        The API returns latest version of well activity program for the given
        well id. Required roles: service.storage.viewer, service.storage.creator
        or service.storage.admin.
      operationId: Get the latest version of well activity program
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Well activity program object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well id or related well activity program object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related well activity program with well id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wellActivityPrograms/v1/by_well/{well_id}/{wap_version}:
    get:
      tags:
        - wellActivityPrograms
      summary: Get a specific version of well activity program
      description: >-
        The API returns specific version of well activity program for the given
        well id and well activity program version. Required roles:
        service.storage.viewer,  service.storage.creator or
        service.storage.admin.
      operationId: Get a specific version of well activity program
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
        - name: wap_version
          in: path
          description: Well activity program version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '200':
          description: Well activity program object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well id or related well activity program object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related well activity program with well id
                bd932928-ff2c-4c8c-9f0d-b359325b77a7 and and specific version
                1601570839996
      security:
        - Bearer: []
  /wellActivityPrograms/v1/reference_tree/by_well/{well_id}:
    get:
      tags:
        - wellActivityPrograms
      summary: >-
        Get the latest version of well activity program with a lists of URI
        references
      description: >-
        The API returns the latest version of well activity program with a lists
        of URI   references for a well. Required roles: service.storage.viewer,
        service.storage.creator or service.storage.admin.
      operationId: >-
        Get the latest version of well activity program with a lists of URI
        references
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Well activity program tree retrieved successfully.
          schema:
            $ref: '#/definitions/ReferenceTree'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well id or related well activity program object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related well activity program reference tree with
                well id: bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wellActivityPrograms/v1/reference_tree/by_well/{well_id}/{wap_version}:
    get:
      tags:
        - wellActivityPrograms
      summary: >-
        Get a specific version of well activity program with a lists of URI
        references
      description: >-
        The API returns a specific version of well activity program with a lists
        of URI references for a well. Required roles: service.storage.viewer,
        service.storage.creator or service.storage.admin.
      operationId: >-
        Get a specific version of well activity program with a lists of URI
        references
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
        - name: wap_version
          in: path
          description: Well activity program version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '200':
          description: Well activity program tree retrieved successfully.
          schema:
            $ref: '#/definitions/ReferenceTree'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well id or related well activity program object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related well activity program reference tree with
                well id bd932928-ff2c-4c8c-9f0d-b359325b77a7 and and specific
                version 1601570839996
      security:
        - Bearer: []
  /wellActivityPrograms/v1/full_content/by_well/{well_id}:
    get:
      tags:
        - wellActivityPrograms
      summary: Get the latest version of well activity program with a lists of children
      description: >-
        The API returns the latest version of well activity program with a lists
        of children   for a well. Required roles: service.storage.viewer,
        service.storage.creator or service.storage.admin.
      operationId: Get the latest version of well activity program with a lists of children
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Well activity program object with children retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well id or related well activity program object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related well activity program reference tree with
                well id: bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /activityPlans/v1/by_well/{well_id}:
    get:
      tags:
        - activityPlans
      summary: Get the Activity Plan object from a well
      description: >-
        The API returns the Activity Plan object from a well id.   Required
        roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get the Activity Plan object from a well
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Activity plan object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: well id or related Activity plan object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found activity plan with well id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wells/v1/versions/by_name/{name}:actual:
    get:
      tags:
        - wells
      summary: Get the version number list of actual well
      description: >-
        The API returns version number list of actual well for the given name.
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get the version number list of actual well
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: name
          in: path
          description: Name
          required: true
          type: string
          default: well 01
      responses:
        '200':
          description: Actual Well object retrieved successfully.
          schema:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1601927059473
              - 1601927355133
              - 1601929371667
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Actual well object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Could not find actual well with name: well 01'
      security:
        - Bearer: []
  /wells/v1/by_name/{name}:actual:
    get:
      tags:
        - wells
      summary: Get a latest version of actual well object for the given name
      description: >-
        The API returns actual well object for given name.   Required roles:
        service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get a latest version of actual well object for given name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: name
          in: path
          description: Name
          required: true
          type: string
          default: well 01
      responses:
        '200':
          description: Well object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Could not find actual well with name: well 01'
      security:
        - Bearer: []
  /wells/v1/by_name/{name}/{version}:actual:
    get:
      tags:
        - wells
      summary: Get a specific version of actual well object for the given name
      description: >-
        The API returns a specific version of actual well object for the given
        name.   Required roles: service.storage.viewer, service.storage.creator
        or service.storage.admin.
      operationId: Get a specific version of actual well object for given name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: name
          in: path
          description: Name
          required: true
          type: string
          default: well 01
        - name: version
          in: path
          description: Well version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '200':
          description: Well object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Could not find actual well with name: well 01'
      security:
        - Bearer: []
  /wells/v1/versions/by_name/{name}:planned:
    get:
      tags:
        - wells
      summary: Get the version number list of planned well
      description: >-
        The API returns version number list of planned well for the given name.
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get the version number list of planned well
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: name
          in: path
          description: Name
          required: true
          type: string
          default: well 01
      responses:
        '200':
          description: Planned well object retrieved successfully.
          schema:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1601927059473
              - 1601927355133
              - 1601929371667
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Planned well object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Could not find planned well with name: well 01'
      security:
        - Bearer: []
  /wells/v1/by_name/{name}:planned:
    get:
      tags:
        - wells
      summary: Get a latest version of planned well object for the given name
      description: >-
        The API returns a latest version of planned well object for given
        name.   Required roles: service.storage.viewer, service.storage.creator
        or service.storage.admin.
      operationId: Get a latest version of planned well object for given name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: name
          in: path
          description: Name
          required: true
          type: string
          default: well 01
      responses:
        '200':
          description: Planned well object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Planned well object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Could not find planned well with name: well 01'
      security:
        - Bearer: []
  /wells/v1/by_name/{name}/{version}:planned:
    get:
      tags:
        - wells
      summary: Get a specific version of planned well object for the given name
      description: >-
        The API returns a specific version of planned well object for the given
        name.   Required roles: service.storage.viewer, service.storage.creator
        or service.storage.admin.
      operationId: Get a specific version of planned well object for given name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: name
          in: path
          description: Name
          required: true
          type: string
          default: well 01
        - name: version
          in: path
          description: Well version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '200':
          description: Planned well object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Planned well object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: 'Could not find planned well with name: well 01'
      security:
        - Bearer: []
  /wellbores/v1/versions/by_well/{well_id}:actual:
    get:
      tags:
        - wellbores
      summary: Get the version number list of actual wellbore
      description: >-
        The API returns version number list of actual wellbore for the given
        well id. Required roles: service.storage.viewer, service.storage.creator
        or service.storage.admin.
      operationId: Get the version number list of actual wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Actual wellbore object retrieved successfully.
          schema:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1601927059473
              - 1601927355133
              - 1601929371667
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Actual wellbore object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related actual wellbore with well id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wellbores/v1/by_well/{well_id}:actual:
    get:
      tags:
        - wellbores
      summary: Get the latest version of actual wellbore
      description: >-
        The API returns latest version of actual wellbore for the given well id.
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get the latest version of actual wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Actual wellbore object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Actual wellbore object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related actual wellbore with well id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wellbores/v1/by_well/{well_id}/{wellbore_version}:actual:
    get:
      tags:
        - wellbores
      summary: Get a specific version of actual wellbore
      description: >-
        The API returns specific version of actual wellbore for the given well
        id and well activity program version. Required roles:
        service.storage.viewer,  service.storage.creator or
        service.storage.admin.
      operationId: Get a specific version of actual wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
        - name: wellbore_version
          in: path
          description: Actual wellbore version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '200':
          description: Actual wellbore object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Actual wellbore object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related actual wellbore with well id
                bd932928-ff2c-4c8c-9f0d-b359325b77a7 and and specific version
                1601570839996
      security:
        - Bearer: []
  /wellbores/v1/versions/by_well/{well_id}:planned:
    get:
      tags:
        - wellbores
      summary: Get the version number list of planned wellbore
      description: >-
        The API returns version number list of planned wellbore for the given
        well id. Required roles: service.storage.viewer, service.storage.creator
        or service.storage.admin.
      operationId: Get the version number list of planned wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Planned wellbore object retrieved successfully.
          schema:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1601927059473
              - 1601927355133
              - 1601929371667
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Planned wellbore object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related planned wellbore with well id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wellbores/v1/by_well/{well_id}:planned:
    get:
      tags:
        - wellbores
      summary: Get the latest version of planned wellbore
      description: >-
        The API returns latest version of planned wellbore for the given well
        id. Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get the latest version of planned wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Planned wellbore object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Planned wellbore object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related planned wellbore with well id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /wellbores/v1/by_well/{well_id}/{wellbore_version}:planned:
    get:
      tags:
        - wellbores
      summary: Get a specific version of planned wellbore
      description: >-
        The API returns specific version of planned wellbore for the given well
        id and well activity program version. Required roles:
        service.storage.viewer,  service.storage.creator or
        service.storage.admin.
      operationId: Get a specific version of planned wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: well_id
          in: path
          description: Well id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
        - name: wellbore_version
          in: path
          description: Planned wellbore version
          required: true
          type: integer
          default: 1596719439820
          format: int64
      responses:
        '200':
          description: Planned wellbore object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturn'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Planned wellbore object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related planned wellbore with well id
                bd932928-ff2c-4c8c-9f0d-b359325b77a7 and and specific version
                1601570839996
      security:
        - Bearer: []
  /holeSections/v1/by_wellbore/{wellbore_id}:
    get:
      tags:
        - holeSections
      summary: Get a list of hole section objects for a wellbore
      description: >-
        The API returns a list of hole section objects for a wellbore id.  
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get a list of hole section objects for a wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: wellbore_id
          in: path
          description: Wellbore id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Hole section objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Wellbore id or related hole section object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found hole sections with wellbore id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /bhaRuns/v1/by_holeSection/{holeSection_id}:
    get:
      tags:
        - bhaRuns
      summary: Get a list of BHA Run objects for a hole section
      description: >-
        The API returns a list of BHA Run objects for a hole section id.  
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get a list of BHA Run objects for a hole section
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: holeSection_id
          in: path
          description: Hole section id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: BHA Run objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Hole section id or related BHA Run object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found BHA run with hole section id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /bhaRuns/v1/by_wellbore/{wellbore_id}:actual:
    get:
      tags:
        - bhaRuns
      summary: Get a list of actual BHA Run objects for a wellbore
      description: >-
        The API returns a list of actual BHA Run objects for a wellbore id.  
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get a list of actual BHA Run objects for a wellbore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: wellbore_id
          in: path
          description: Wellbore id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Actual BHA Run objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Actual BHA Run object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found actual BHA run with wellbore id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /query/v1/by_well/{type}:batch:
    post:
      tags:
        - query
      summary: Get a list of entity objects for a list of wells
      description: >-
        The API returns a list of entity objects for a list of wells.   Required
        roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get a list of entity objects for a list of wells
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: Content-Type
          in: header
          description: Content type
          required: true
          type: string
          enum:
            - application/json
        - name: type
          in: path
          description: Entity type
          required: true
          type: string
          enum:
            - wellboreTrajectory
            - bhaRun
        - name: well_ids
          in: body
          description: Array of well id
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - d6ef6b31-a9a7-416a-9f63-2ad65d82383c
              - 464442d6-e33c-4f60-aa65-852eea0ed951
      responses:
        '200':
          description: Entity objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Well id or related entity object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found BHA run with well ids:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /fluidsPrograms/v1/by_wellbore/{wellbore_id}:
    get:
      tags:
        - fluidsPrograms
      summary: Get fluids program objects for the given wellbore id
      description: >-
        The API returns fluids program objects for the given wellbore id.  
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get fluids program objects for the given wellbore id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: wellbore_id
          in: path
          description: Wellbore id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Fluids program objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Fluids report object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found fluids programs with wellbore id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /operationsReports/v1/by_wellbore/{wellbore_id}:
    get:
      tags:
        - operationsReports
      summary: Get all available operations report objects for the given wellbore id
      description: >-
        The API returns all available operations report objects for the given
        wellbore id.   Required roles: service.storage.viewer,
        service.storage.creator or service.storage.admin.
      operationId: Get all available operations report objects for the given wellbore id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: wellbore_id
          in: path
          description: Wellbore id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Operations report objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Operations report object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found operations reports with wellbore id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /operationsReports/v1/latest/by_wellbore/{wellbore_id}:
    get:
      tags:
        - operationsReports
      summary: Get latest operations report object for the given wellbore id
      description: >-
        The API returns latest operations report object for the given wellbore
        id.   Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get latest operations report object forthe given wellbore id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: wellbore_id
          in: path
          description: Wellbore id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Operations report object retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Operations report object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found operations report with wellbore id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /operationsReports/v1/by_timeRange/{start_time}/{end_time}:
    get:
      tags:
        - operationsReports
      summary: Get a list of operations report objects for the given time range
      description: >-
        The API returns a list of operations report objects for the given time
        range. Date time format can be 'yyyyMMdd', 'yyyy-MM-dd', 'yyyy-M-d',
        'yyyy-MM-ddTHH:mm:ss' or 'yyyy-MM-ddTHH:mm:ssZ'. Required roles:
        service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get a list of operations report objects for the given time range
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: start_time
          in: path
          description: Start time
          required: true
          type: string
          default: '2021-03-01'
        - name: end_time
          in: path
          description: End time
          required: true
          type: string
          default: '2021-04-01'
      responses:
        '200':
          description: Operations report objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Operations report object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found operations reports between yyyy-MM-ddTHH:mm-ss and
                yyyy-MM-ddTHH:mm-ss
      security:
        - Bearer: []
  /operationsReports/v1/reference_tree/by_operationsReport/{operations_report_id}:
    get:
      tags:
        - operationsReports
      summary: >-
        Get the latest version of operations report with a lists of URI
        references
      description: >-
        The API returns the latest version of operations report with a lists of
        URI references. Required roles: service.storage.viewer,
        service.storage.creator or service.storage.admin.
      operationId: >-
        Get the latest version of operations report with a lists of URI
        references
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: operations_report_id
          in: path
          description: Operations report id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Operations report tree retrieved successfully.
          schema:
            $ref: '#/definitions/ReferenceTree'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Operations report object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Could not find related operations report reference tree with
                operations report id: bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
  /fluidsReports/v1/by_wellbore/{wellbore_id}:
    get:
      tags:
        - fluidsReports
      summary: Get fluids report objects for the given wellbore id
      description: >-
        The API returns fluids report objects for the given wellbore id.  
        Required roles: service.storage.viewer, service.storage.creator or
        service.storage.admin.
      operationId: Get fluids report objects for the given wellbore id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: data-partition-id
          in: header
          description: This value should be the desired data partition id
          required: true
          type: string
          default: opendes
        - name: wellbore_id
          in: path
          description: Wellbore id
          required: true
          type: string
          default: 0E706AE7-8645-4BF8-9309-E1AAD1B6E54D
      responses:
        '200':
          description: Fluids report objects retrieved successfully.
          schema:
            $ref: '#/definitions/EntityReturns'
        '403':
          description: User not authorized to perform the action.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: The user is not authorized to perform this action
        '404':
          description: Fluids report object not found.
          schema:
            $ref: '#/definitions/AppError'
          examples:
            application/json:
              message: >-
                Not found fluids reports with wellbore id:
                bd932928-ff2c-4c8c-9f0d-b359325b77a7
      security:
        - Bearer: []
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  AppError:
    type: object
    properties:
      message:
        type: string
  Entity:
    type: object
    description: Entity object
    required:
      - kind
      - acl
      - legal
      - data
    properties:
      id:
        $ref: '#/definitions/EntityID'
      kind:
        $ref: '#/definitions/EntityKind'
      acl:
        $ref: '#/definitions/ACL'
      legal:
        $ref: '#/definitions/Legal'
      data:
        $ref: '#/definitions/EntityData'
  EntityReturn:
    type: object
    description: Entity return object
    properties:
      id:
        $ref: '#/definitions/EntityID'
      kind:
        $ref: '#/definitions/EntityKind'
      version:
        type: integer
        example: 1831253916104085
        format: int64
        description: The version number of this OSDU resource; set by the framework
      acl:
        $ref: '#/definitions/ACL'
      legal:
        $ref: '#/definitions/Legal'
      valid:
        type: boolean
        example: true
        description: The entity is valid or not.
      data:
        $ref: '#/definitions/EntityData'
  EntityReturns:
    type: array
    items:
      $ref: '#/definitions/EntityReturn'
  EntityID:
    type: string
    example: namespace:master-data--ExampleType:47c5967c-2961-55ea-96d7-e976a7954c26
    description: The SRN which identifies this OSDU resource object without version.
    pattern: ^[\w\-\.]+:master-data\-\-ExampleType:[\w\-\.\:\%]+$
  EntityKind:
    type: string
    example: osdu:wks:exampletype:1.0.0
    description: >-
      Kind of data it is being ingested and following the  pattern
      <Namespace>:<Source>:<Type>:<VersionMajor>.<VersionMinor>.<VersionPatch>. 
      The versioning scheme follows the semantic versioning,
      https://semver.org/..
    pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
  ACL:
    type: object
    description: The access control tags associated with this entity.
    required:
      - owners
      - viewers
    properties:
      viewers:
        type: array
        description: >-
          List of valid groups which will have view/read privileges over the
          entity.
        items:
          type: string
          example: data.default.viewers@opendes.contoso.com
      owners:
        type: array
        description: List of valid groups which will have write privileges over the entity.
        items:
          type: string
          example: data.default.owners@opendes.contoso.com
  Legal:
    type: object
    description: >-
      Attributes which represent the legal constraints associated with the
      record.
    properties:
      legaltags:
        type: array
        description: List of legaltag names associated with the entity.
        uniqueItems: true
        items:
          type: string
          example: sample-legal-tag
      otherRelevantDataCountries:
        type: array
        description: List of other relevant data countries.
        uniqueItems: true
        items:
          type: string
          example: US
          pattern: ^[A-Z]{2,2}$
  VersionNumbers:
    type: object
    properties:
      id:
        type: string
        example: 374ba092-5a20-56f9-ada4-bc2cf71f2e50
      versions:
        type: array
        example:
          - 1597699007194
          - 1598021313729
          - 1598021463526
        items:
          type: integer
    description: Entity version numbers.
  EntityData:
    type: object
    description: Record payload represented as a list of key-value pairs.
    example:
      ExistenceKind: 'namespace:reference-data--ExistenceKind:planned:'
      NameWell: Well 01
      NameWellbore: Wellbore 01
  ReferenceTree:
    type: object
    properties:
      id:
        type: string
        example: ce49e5af-7f19-4625-a141-c0de4d5ac391
      version:
        type: integer
        example: 1599842774564
      type:
        type: string
        example: wellactivityprogram
      items:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            verion:
              type: integer
            type:
              type: string
            items:
              type: object
              properties:
                id:
                  type: string
                verion:
                  type: integer
                type:
                  type: string
        example:
          - id: bd932928-ff2c-4c8c-9f0d-b359325b77a7
            version: 1601570839996
            type: activityplan
          - id: bf61dbea-99ce-41ac-9498-6e9bc67f25c5
            version: 1601929333120
            type: rig
          - id: b3528018-860e-4766-a940-0adbcca8f63b
            version: 1601571043836
            type: well
          - id: 6a99fc9b-f9c0-4c8a-a100-a43b6b6d84ab
            version: 1601929331601
            type: wellbore
            items:
              - id: e947d79e-b721-4134-855f-e71c424097c8
                version: 1601927575971
                type: wellboreSegment
                items:
                  - id: 81336a4b-8547-4079-af07-ad3526b60585
                    version: 1601927575971
                    type: bharun
              - id: 8bfe58a2-7951-49bb-b1d1-e869b0b33db6
                version: 1601929345042
                type: wellboreSegment
                items:
                  - id: 2af558e2-d081-4296-913f-635a6b9226b9
                    version: 1601929346576
                    type: bharun
                  - id: 865bfed1-d197-4307-ba16-e94d2f86837f
                    version: 1601929347940
                    type: bharun
