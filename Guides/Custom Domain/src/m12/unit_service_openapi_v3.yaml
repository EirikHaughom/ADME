swagger: '2.0'
info:
  version: '3.0'
  title: Unit Service
  description: API documentation for Unit service
basePath: "/api/unit"
schemes:
  - https
tags:
  - name: info-api
    description: Info Api
  - name: unit-api-v-3
    description: Unit Api V 3
  - name: health-check
    description: Health Check
paths:
  "/_ah/liveness_check":
    get:
      tags:
        - health-check
      summary: Checks the liveness of the service
      operationId: livenessCheckUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ResponseEntity"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/_ah/readiness_check":
    get:
      tags:
        - health-check
      summary: Checks the readiness of the service
      operationId: readinessCheckUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ResponseEntity"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/info":
    get:
      tags:
        - info-api
      summary: Get the info for the deployed version of Unit service.
      description: For deployment available public /info endpoint, which provides build and git related information.
      operationId: infoUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/VersionInfo"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/catalog":
    get:
      tags:
        - unit-api-v-3
      summary: Get the entire Catalog
      description: Get the Units of Measure Catalog summary. The response contains empty lists and corresponding list counts. Use the specific endpoints to obtain the list contents as required.
      operationId: getCatalogUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Catalog"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/catalog/lastmodified":
    get:
      tags:
        - unit-api-v-3
      summary: Gets the Catalog's last modified date
      description: Gets the last modification date of the catalog.
      operationId: getLastModifiedUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/CatalogLastModified"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/catalog/mapstates":
    get:
      tags:
        - unit-api-v-3
      summary: Get the map and/or deprecation states
      description: Get the defined states for deprecation and cross-namespace mappings as defined in this catalog.
      operationId: getMapStatesUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: offset
          in: query
          description: The offset into the result array. Default 0.
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/catalog/search":
    post:
      tags:
        - unit-api-v-3
      summary: Search Catalog by keyword(s)
      description: Search units, measurements, etc. by keywords. Valid keywords are - 'name', 'namespace', 'source', 'symbol', 'type' (unit parameterization type Abcd or ScaleOffset), 'ancestry', 'code', 'dimensionCode', 'unitQuantityCode', 'dimensionAnalysis', 'state', 'baseMeasurement'.
      operationId: postSearchUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            "$ref": "#/definitions/SearchRequest"
        - name: offset
          in: query
          description: The offset into the result array. Default 0.
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/conversion/abcd":
    get:
      tags:
        - unit-api-v-3
      summary: Get Abcd Unit conversion parameters given two Unit specifications
      description: Get the Energistics style unit parameters given the 'from' and 'to' unit symbols and the namespace (list) to disambiguate the unit symbols. Example for a prioritized namespaces list- 'LIS,RP66,ECL,Energistics_UoM' this will prioritize the units in the LIS namespace over other namespaces.
      operationId: getConversionABCDBySymbolsUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: namespaces
          in: query
          description: List of namespace codes to disambiguate the unit symbols. Example- 'LIS,RP66,ECL,Energistics_UoM' to prioritize old LIS unit symbols.
          required: true
          type: string
        - name: fromSymbol
          in: query
          description: The source (=from) unit symbol, example- 'ftUS'.
          required: true
          type: string
        - name: toSymbol
          in: query
          description: The target (=to) unit symbol, example- 'm'.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ConversionResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Get Abcd Unit conversion parameters given two Units
      description: Get the Energistics style unit parameters given the 'fromUnit' and 'toUnit'. The 'fromUnit' and 'toUnit' definitions can either be passed as persistable reference strings (JSON serialized Unit essence) or as Unit essence structures.
      operationId: postConversionABCDUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            "$ref": "#/definitions/ConversionABCDRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ConversionResult"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/conversion/scale":
    get:
      tags:
        - unit-api-v-3
      summary: Get ScaleOffset Unit conversion parameters given two unit specifications
      description: Get the scale/offset unit parameters given the 'from' and 'to' unit symbols and the namespace(-list) to disambiguate the unit symbols. Example for a prioritized namespaces list 'LIS,RP66,ECL,Energistics_UoM' - this will prioritize the units in the LIS namespace over other namespaces.
      operationId: getConversionScaleOffsetBySymbolsUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: namespaces
          in: query
          description: List of namespace codes to disambiguate the unit symbols. Example- 'LIS,RP66,ECL,Energistics_UoM' to prioritize old LIS unit symbols
          required: true
          type: string
        - name: fromSymbol
          in: query
          description: The source (=from) unit symbol, example- 'ftUS'.
          required: true
          type: string
        - name: toSymbol
          in: query
          description: The target (=to) unit symbol, example- 'm'.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ConversionResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Post ScaleOffset Unit conversion parameters given two Units
      description: Get the scale/offset unit parameters given the 'fromUnit' and 'toUnit'. The 'fromUnit' and 'toUnit' definitions can either be passed as persistable reference strings (JSON serialized Unit essence) or as Unit essence structures.
      operationId: postConversionScaleOffsetUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            "$ref": "#/definitions/ConversionScaleOffsetRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ConversionResult"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/measurement":
    get:
      tags:
        - unit-api-v-3
      summary: Get a specific Measurement by ancestry
      description: Get a specific measurement given dot separated measurement ancestry
      operationId: getMeasurementUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: ancestry
          in: query
          description: The measurement's ancestry, example 'Dimensionless'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Measurement"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Get a specific Measurement
      description: Get a specific measurement given a persistable reference string or measurement essence structure.
      operationId: postMeasurementUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: The request to get a specific measurement given a persistable reference string or measurement essence structure.
          required: true
          schema:
            "$ref": "#/definitions/MeasurementRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Measurement"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/measurement/list":
    get:
      tags:
        - unit-api-v-3
      summary: Get all Measurements
      description: Get all measurements defined in this catalog.
      operationId: getMeasurementsUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: offset
          in: query
          description: The offset into the result array
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/measurement/maps":
    get:
      tags:
        - unit-api-v-3
      summary: Get the Measurement maps
      description: Get the measurement maps defined in this catalog.
      operationId: getMeasurementMapsUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: offset
          in: query
          description: The offset into the result array.
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/measurement/search":
    post:
      tags:
        - unit-api-v-3
      summary: Search Measurements by keyword(s),
      description: Search measurements by keywords. Valid keywords are- 'name', 'namespace', 'source', 'ancestry', 'code', 'dimensionCode', 'unitQuantityCode', 'dimensionAnalysis', 'state', 'baseMeasurement'.
      operationId: postSearchMeasurementsUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            "$ref": "#/definitions/SearchRequest"
        - name: offset
          in: query
          description: The offset into the result array
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit":
    get:
      tags:
        - unit-api-v-3
      summary: Get all Units
      description: Get all units defined in this catalog
      operationId: getUnitsUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: offset
          in: query
          description: The offset into the result array. Default 0.
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Get a specific Unit
      description: Get a specific unit instance given either a persistable reference string or unit essence JSON structure.
      operationId: postUnitUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            "$ref": "#/definitions/UnitRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Unit"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit/maps":
    get:
      tags:
        - unit-api-v-3
      summary: Get Unit maps between namespaces
      description: Get the UnitMapItems defined between namespaces in this catalog.
      operationId: getUnitMapsUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: offset
          in: query
          description: The offset into the result array. Default 0
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit/measurement":
    get:
      tags:
        - unit-api-v-3
      summary: Get all Units for a Measurement by ancestry
      description: Get all units given dot separated ancestry, e.g. Dimensionless.
      operationId: getUnitsByMeasurementUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: ancestry
          in: query
          description: The measurement's ancestry, example- Dimensionless
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Get all Units for a Measurement
      description: Get all units given either a measurement's persistable reference string or a measurement essence JSON structure.
      operationId: postUnitsByMeasurementUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: The request to get a specific measurement given a persistable reference string or measurement essence structure.
          required: true
          schema:
            "$ref": "#/definitions/MeasurementRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit/measurement/preferred":
    get:
      tags:
        - unit-api-v-3
      summary: Get preferred Units for a Measurement by ancestry
      description: Get the preferred units given dot separated ancestry, e.g. Dimensionless
      operationId: getPreferredUnitsByMeasurementUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: ancestry
          in: query
          description: The measurement's ancestry, example- Dimensionless
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Get preferred Units for a Measurement
      description: Get the preferred units given a measurement persistable reference string or measurement essence JSON structure.
      operationId: postPreferredUnitsByMeasurementUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: The request to get a specific measurement given a persistable reference string or measurement essence structure
          required: true
          schema:
            "$ref": "#/definitions/MeasurementRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit/search":
    post:
      tags:
        - unit-api-v-3
      summary: Search Units by keyword(s)
      description: Search units by keywords. Valid keywords are- 'name', 'namespace', 'source', 'symbol', 'type' (unit parameterization type Abcd or ScaleOffset), 'state'.
      operationId: postSearchUnitsUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            "$ref": "#/definitions/SearchRequest"
        - name: offset
          in: query
          description: The offset into the result array. Default 0.
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit/symbol":
    get:
      tags:
        - unit-api-v-3
      summary: Get a unique Unit by Namespace,Symbol
      description: Get single, unique unit given a namespace or namespace list and a symbol. Example- namespace='LIS,RP66,ECL', symbol='F' returns the LIS Foot.
      operationId: getUnitBySymbolUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: namespaces
          in: query
          description: The namespace or namespace list setting the priority of sources to resolve a symbol ambiguity. Example- 'Energistics_UoM' or 'LIS,RP66,ECL'.
          required: true
          type: string
        - name: symbol
          in: query
          description: The unit symbol to look up. Example -'F'. 'F' is ambiguous and requires a namespace to disambiguate.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Unit"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit/symbols":
    get:
      tags:
        - unit-api-v-3
      summary: Get Units by symbol,
      description: Get all units given a specific symbol. Example- 'F'. 'F' is defined in multiple namespaces belonging to different measurements.
      operationId: getUnitsBySymbolUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: symbol
          in: query
          description: The unit symbol to look up. Example- 'F'. 'F' is defined in multiple namespaces.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/QueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unit/unitsystem":
    get:
      tags:
        - unit-api-v-3
      summary: Get a unique Unit for the given Measurement ancestry in the named UnitSystem
      description: Get a unique unit given a unit system name and dot separated measurement ancestry, e.g. Time_Per_Length.Acoustic_Slowness.
      operationId: getUnitBySystemAndMeasurementUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: unitSystemName
          in: query
          description: The name of the unit system. Example- 'English'.
          required: true
          type: string
        - name: ancestry
          in: query
          description: The measurement's ancestry, example- Dimensionless
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Unit"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Get a unique Unit for the given Measurement in the named UnitSystem
      description: Get a unique unit given a unit system name and a measurement persistable reference string or measurement essence Json structure. Example- Unit system- English; measurement essence- { \"ancestry\"- \"Length\", \"type\"- \"UM\" }"
      operationId: postUnitBySystemAndMeasurementUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: unitSystemName
          in: query
          description: The name of the unit system. Example- 'English'.
          required: true
          type: string
        - in: body
          name: request
          description: The request to get a specific measurement given a persistable reference string or measurement essence structure.
          required: true
          schema:
            "$ref": "#/definitions/MeasurementRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Unit"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unitsystem":
    get:
      tags:
        - unit-api-v-3
      summary: Get all Units assigned to the UnitSystem name
      description: Get all unit assignments for the given unit system.
      operationId: getUnitSystemUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: name
          in: query
          description: The name of the unit system. Example- 'English'.
          required: true
          type: string
        - name: offset
          in: query
          description: The offset into the result array. Default 0.
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/UnitSystem"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - unit-api-v-3
      summary: Get all Units assigned to the UnitSystem",
      description: Get all unit assignments for the given unit system essence.
      operationId: postUnitSystemUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: "The essence of the unit system. Example: {\"ancestry\"-\"English\"}"
          required: true
          schema:
            "$ref": "#/definitions/UnitSystemRequest"
        - name: offset
          in: query
          description: The offset into the result array. Default 0.
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit for the number of items in the response. Default 100; -1 for all items.
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/UnitSystem"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  "/v3/unitsystem/list":
    get:
      tags:
        - unit-api-v-3
      summary: Get all UnitSystem info
      description: Get all known unit systems as info (name, description, ancestry, persistableReference) as declared in this catalog.
      operationId: getUnitSystemInfoListUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - name: offset
          in: query
          description: The offset into the result array. Default 0
          required: false
          type: integer
          default: 0
          format: int32
        - name: limit
          in: query
          description: The size limit of the response. Default 100; -1 for all items
          required: false
          type: integer
          default: 100
          format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/UnitSystemInfoResponse"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  ABCD:
    type: object
    properties:
      a:
        type: number
        format: double
      b:
        type: number
        format: double
      c:
        type: number
        format: double
      d:
        type: number
        format: double
  ABCDImpl:
    type: object
    properties:
      a:
        type: number
        format: double
      b:
        type: number
        format: double
      c:
        type: number
        format: double
      d:
        type: number
        format: double
  Catalog:
    type: object
    properties:
      lastModified:
        type: string
      mapStates:
        type: array
        items:
          "$ref": "#/definitions/MapState"
      measurementMaps:
        type: array
        items:
          "$ref": "#/definitions/MeasurementMap"
      measurements:
        type: array
        items:
          "$ref": "#/definitions/Measurement"
      totalMapStateCount:
        type: integer
        format: int32
      totalMeasurementCount:
        type: integer
        format: int32
      totalMeasurementMapCount:
        type: integer
        format: int32
      totalUnitCount:
        type: integer
        format: int32
      totalUnitMapCount:
        type: integer
        format: int32
      totalUnitSystemCount:
        type: integer
        format: int32
      unitMaps:
        type: array
        items:
          "$ref": "#/definitions/UnitMap"
      unitSystemInfos:
        type: array
        items:
          "$ref": "#/definitions/UnitSystemInfo"
      units:
        type: array
        items:
          "$ref": "#/definitions/Unit"
  CatalogLastModified:
    type: object
    properties:
      lastModified:
        type: string
  ConversionABCDRequest:
    type: object
    properties:
      fromUnit:
        "$ref": "#/definitions/UnitEssenceImpl"
      fromUnitPersistableReference:
        type: string
      toUnit:
        "$ref": "#/definitions/UnitEssenceImpl"
      toUnitPersistableReference:
        type: string
  ConversionResult:
    type: object
    properties:
      abcd:
        "$ref": "#/definitions/ABCD"
      fromUnit:
        "$ref": "#/definitions/Unit"
      scaleOffset:
        "$ref": "#/definitions/ScaleOffset"
      toUnit:
        "$ref": "#/definitions/Unit"
  ConversionScaleOffsetRequest:
    type: object
    properties:
      fromUnit:
        "$ref": "#/definitions/UnitEssenceImpl"
      fromUnitPersistableReference:
        type: string
      toUnit:
        "$ref": "#/definitions/UnitEssenceImpl"
      toUnitPersistableReference:
        type: string
  MapState:
    type: object
    properties:
      description:
        type: string
      source:
        type: string
      state:
        type: string
  Measurement:
    type: object
    properties:
      baseMeasurement:
        type: boolean
      baseMeasurementEssenceJson:
        type: string
      childMeasurementEssenceJsons:
        type: array
        items:
          type: string
      code:
        type: string
      deprecationInfo:
        "$ref": "#/definitions/MeasurementDeprecationInfo"
      description:
        type: string
      dimensionAnalysis:
        type: string
      dimensionCode:
        type: string
      essence:
        "$ref": "#/definitions/MeasurementEssence"
      essenceJson:
        type: string
      lastModified:
        type: string
      name:
        type: string
      namespace:
        type: string
      parentEssenceJson:
        type: string
      preferredUnitEssenceJsons:
        type: array
        items:
          type: string
      unitEssenceJsons:
        type: array
        items:
          type: string
      unitQuantityCode:
        type: string
  MeasurementDeprecationInfo:
    type: object
    properties:
      remarks:
        type: string
      state:
        type: string
      supersededByUnitMeasurement:
        type: string
  MeasurementEssence:
    type: object
    properties:
      ancestry:
        type: string
      type:
        type: string
  MeasurementEssenceImpl:
    type: object
    properties:
      ancestry:
        type: string
      type:
        type: string
  MeasurementMap:
    type: object
    properties:
      fromNamespace:
        type: string
      measurementMapItemCount:
        type: integer
        format: int32
      measurementMapItems:
        type: array
        items:
          "$ref": "#/definitions/MeasurementMapItem"
      toNamespace:
        type: string
  MeasurementMapItem:
    type: object
    properties:
      fromMeasurement:
        "$ref": "#/definitions/Measurement"
      fromNamespace:
        type: string
      note:
        type: string
      state:
        type: string
      toMeasurement:
        "$ref": "#/definitions/Measurement"
      toNamespace:
        type: string
  MeasurementRequest:
    type: object
    properties:
      essence:
        "$ref": "#/definitions/MeasurementEssenceImpl"
      persistableReference:
        type: string
  QueryResult:
    type: object
    properties:
      count:
        type: integer
        format: int32
      mapStates:
        type: array
        items:
          "$ref": "#/definitions/MapState"
      measurementMapItems:
        type: array
        items:
          "$ref": "#/definitions/MeasurementMapItem"
      measurements:
        type: array
        items:
          "$ref": "#/definitions/Measurement"
      offset:
        type: integer
        format: int32
      totalCount:
        type: integer
        format: int32
      unitMapItems:
        type: array
        items:
          "$ref": "#/definitions/UnitMapItem"
      units:
        type: array
        items:
          "$ref": "#/definitions/Unit"
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      statusCodeValue:
        type: integer
        format: int32
  ScaleOffset:
    type: object
    properties:
      offset:
        type: number
        format: double
      scale:
        type: number
        format: double
  ScaleOffsetImpl:
    type: object
    properties:
      offset:
        type: number
        format: double
      scale:
        type: number
        format: double
  SearchRequest:
    type: object
    properties:
      query:
        type: string
  Unit:
    type: object
    properties:
      deprecationInfo:
        "$ref": "#/definitions/UnitDeprecationInfo"
      description:
        type: string
      displaySymbol:
        type: string
      essence:
        "$ref": "#/definitions/UnitEssence"
      essenceJson:
        type: string
      lastModified:
        type: string
      name:
        type: string
      namespace:
        type: string
      source:
        type: string
  UnitAssignment:
    type: object
    properties:
      lastModified:
        type: string
      measurement:
        "$ref": "#/definitions/Measurement"
      unit:
        "$ref": "#/definitions/Unit"
  UnitDeprecationInfo:
    type: object
    properties:
      remarks:
        type: string
      state:
        type: string
      supersededByUnit:
        type: string
  UnitEssence:
    type: object
    properties:
      abcd:
        "$ref": "#/definitions/ABCD"
      baseMeasurementEssence:
        "$ref": "#/definitions/MeasurementEssence"
      scaleOffset:
        "$ref": "#/definitions/ScaleOffset"
      symbol:
        type: string
      type:
        type: string
  UnitEssenceImpl:
    type: object
    properties:
      abcd:
        "$ref": "#/definitions/ABCDImpl"
      baseMeasurement:
        "$ref": "#/definitions/MeasurementEssenceImpl"
      scaleOffset:
        "$ref": "#/definitions/ScaleOffsetImpl"
      symbol:
        type: string
      type:
        type: string
  UnitMap:
    type: object
    properties:
      fromNamespace:
        type: string
      toNamespace:
        type: string
      unitMapItemCount:
        type: integer
        format: int32
      unitMapItems:
        type: array
        items:
          "$ref": "#/definitions/UnitMapItem"
  UnitMapItem:
    type: object
    properties:
      fromNamespace:
        type: string
      fromUnit:
        "$ref": "#/definitions/Unit"
      note:
        type: string
      state:
        type: string
      toNamespace:
        type: string
      toUnit:
        "$ref": "#/definitions/Unit"
  UnitRequest:
    type: object
    properties:
      essence:
        "$ref": "#/definitions/UnitEssenceImpl"
      persistableReference:
        type: string
  UnitSystem:
    type: object
    properties:
      ancestry:
        type: string
      description:
        type: string
      lastModified:
        type: string
      name:
        type: string
      offset:
        type: integer
        format: int32
      persistableReference:
        type: string
      referenceUnitSystem:
        type: string
      source:
        type: string
      unitAssignmentCount:
        type: integer
        format: int32
      unitAssignmentCountInResponse:
        type: integer
        format: int32
      unitAssignmentCountTotal:
        type: integer
        format: int32
      unitAssignments:
        type: array
        items:
          "$ref": "#/definitions/UnitAssignment"
  UnitSystemEssenceImpl:
    type: object
    properties:
      ancestry:
        type: string
  UnitSystemInfo:
    type: object
    properties:
      ancestry:
        type: string
      description:
        type: string
      name:
        type: string
      persistableReference:
        type: string
  UnitSystemInfoResponse:
    type: object
    properties:
      count:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      totalCount:
        type: integer
        format: int32
      unitSystemInfoList:
        type: array
        items:
          "$ref": "#/definitions/UnitSystemInfo"
  UnitSystemRequest:
    type: object
    properties:
      essence:
        "$ref": "#/definitions/UnitSystemEssenceImpl"
      persistableReference:
        type: string
  VersionInfo:
    type: object
    properties:
      artifactId:
        type: string
      branch:
        type: string
      buildTime:
        type: string
      commitId:
        type: string
      commitMessage:
        type: string
      connectedOuterServices:
        type: array
      groupId:
        type: string
      version:
        type: string
