info:
  title: Wellbore DDMS
  description: API Documentation for Wellbore DDMS
  version: '0.2'
openapi: 3.0.2
components:
  schemas:
    AboutResponse:
      properties:
        buildNumber:
          title: Buildnumber
          type: string
        cloudEnvironment:
          title: Cloudenvironment
          type: string
        service:
          title: Service
          type: string
        version:
          title: Version
          type: string
      title: AboutResponse
      type: object
    AbstractAccessControlList100:
      additionalProperties: false
      description: The access control tags associated with this entity.
      properties:
        owners:
          description: >-
            The list of owners of this data record formatted as an email
            (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
          items:
            $ref: '#/components/schemas/Owner'
          title: List of Owners
          type: array
        viewers:
          description: >-
            The list of viewers to which this data record is
            accessible/visible/discoverable formatted as an email
            (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
          items:
            $ref: '#/components/schemas/Viewer'
          title: List of Viewers
          type: array
      required:
        - owners
        - viewers
      title: AbstractAccessControlList100
      type: object
    AbstractAliasNames100:
      additionalProperties: false
      description: >-
        A list of alternative names for an object.  The preferred name is in a
        separate, scalar property.  It may or may not be repeated in the alias
        list, though a best practice is to include it if the list is present,
        but to omit the list if there are no other names.  Note that the
        abstract entity is an array so the $ref to it is a simple property
        reference.
      properties:
        AliasName:
          description: Alternative Name value of defined name type for an object.
          title: Aliasname
          type: string
        AliasNameTypeID:
          description: >-
            A classification of alias names such as by role played or type of
            source, such as regulatory name, regulatory code, company code,
            international standard name, etc.
          pattern: ^[\w\-\.]+:reference-data\-\-AliasNameType:[\w\-\.\:\%]+:[0-9]*$
          title: Aliasnametypeid
          type: string
        DefinitionOrganisationID:
          description: >-
            The StandardsOrganisation (reference-data) or Organisation
            (master-data) that provided the name (the source).
          pattern: >-
            ^[\w\-\.]+:(reference-data\-\-StandardsOrganisation|master-data\-\-Organisation):[\w\-\.\:\%]+:[0-9]*$
          title: Definitionorganisationid
          type: string
        EffectiveDateTime:
          description: The date and time when an alias name becomes effective.
          format: date-time
          title: Effectivedatetime
          type: string
        TerminationDateTime:
          description: The data and time when an alias name is no longer in effect.
          format: date-time
          title: Terminationdatetime
          type: string
      title: AbstractAliasNames100
      type: object
    AbstractAnyCrsFeatureCollection100:
      additionalProperties: false
      description: >-
        The original or 'as ingested' coordinates (Point, MultiPoint,
        LineString, MultiLineString, Polygon or MultiPolygon). The name
        'AsIngestedCoordinates' was chosen to contrast it to
        'OriginalCoordinates', which carries the uncertainty whether any
        coordinate operations took place before ingestion. In cases where the
        original CRS is different from the as-ingested CRS, the
        OperationsApplied can also contain the list of operations applied to the
        coordinate prior to ingestion. The data structure is similar to GeoJSON
        FeatureCollection, however in a CRS context explicitly defined within
        the AbstractAnyCrsFeatureCollection. The coordinate sequence follows
        GeoJSON standard, i.e. 'eastward/longitude', 'northward/latitude' {,
        'upward/height' unless overridden by an explicit direction in the
        AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
      properties:
        CoordinateReferenceSystemID:
          description: The CRS reference into the CoordinateReferenceSystem catalog.
          example: >-
            namespace:reference-data--CoordinateReferenceSystem:BoundCRS.SLB.32021.15851:
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          title: Coordinate Reference System ID
          type: string
        VerticalCoordinateReferenceSystemID:
          description: >-
            The explicit VerticalCRS reference into the
            CoordinateReferenceSystem catalog. This property stays empty for 2D
            geometries. Absent or empty values for 3D geometries mean the
            context may be provided by a CompoundCRS in
            'CoordinateReferenceSystemID' or implicitly EPSG:5714 MSL height
          example: >-
            namespace:reference-data--CoordinateReferenceSystem:VerticalCRS.EPSG.5773:
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          title: Vertical Coordinate Reference System ID
          type: string
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        features:
          items:
            $ref: '#/components/schemas/Feature'
          title: Features
          type: array
        persistableReferenceCrs:
          description: >-
            The CRS reference as persistableReference string. If populated, the
            CoordinateReferenceSystemID takes precedence.
          example: >-
            {"lateBoundCRS":{"wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.1833333333333],PARAMETER[\"Standard_Parallel_2\",47.4833333333333],PARAMETER[\"Latitude_Of_Origin\",45.6666666666667],UNIT[\"Foot_US\",0.304800609601219],AUTHORITY[\"EPSG\",32021]]","ver":"PE_10_3_1","name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","authCode":{"auth":"EPSG","code":"32021"},"type":"LBC"},"singleCT":{"wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],AUTHORITY[\"EPSG\",15851]]","ver":"PE_10_3_1","name":"NAD_1927_To_WGS_1984_79_CONUS","authCode":{"auth":"EPSG","code":"15851"},"type":"ST"},"ver":"PE_10_3_1","name":"NAD27
            * OGP-Usa Conus / North Dakota South
            [32021,15851]","authCode":{"auth":"SLB","code":"32021079"},"type":"EBC"}
          title: CRS Reference
          type: string
        persistableReferenceUnitZ:
          description: >-
            The unit of measure for the Z-axis (only for 3-dimensional
            coordinates, where the CRS does not describe the vertical unit).
            Note that the direction is upwards positive, i.e. Z means height.
          example: >-
            {"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}
          title: Z-Unit Reference
          type: string
        persistableReferenceVerticalCrs:
          description: >-
            The VerticalCRS reference as persistableReference string. If
            populated, the VerticalCoordinateReferenceSystemID takes precedence.
            The property is null or empty for 2D geometries. For 3D geometries
            and absent or null persistableReferenceVerticalCrs the vertical CRS
            is either provided via persistableReferenceCrs's CompoundCRS or it
            is implicitly defined as EPSG:5714 MSL height.
          example: >-
            {"authCode":{"auth":"EPSG","code":"5773"},"type":"LBC","ver":"PE_10_3_1","name":"EGM96_Geoid","wkt":"VERTCS[\"EGM96_Geoid\",VDATUM[\"EGM96_Geoid\"],PARAMETER[\"Vertical_Shift\",0.0],PARAMETER[\"Direction\",1.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",5773]]"}
          title: Vertical CRS Reference
          type: string
        type:
          $ref: '#/components/schemas/app__model__osdu_model__Type'
      required:
        - type
        - persistableReferenceCrs
        - features
      title: AbstractAnyCrsFeatureCollection100
      type: object
    AbstractFacilityEvent100:
      additionalProperties: false
      description: >-
        A significant occurrence in the life of a facility, which often changes
        its state, or the state of one of its components. It can describe a
        point-in-time (event) or a time interval of a specific type
        (FacilityEventType).
      properties:
        EffectiveDateTime:
          description: The date and time at which the event took place or takes effect.
          format: date-time
          title: Effectivedatetime
          type: string
        FacilityEventTypeID:
          description: >-
            The facility event type is a picklist. Examples: 'Permit', 'Spud',
            'Abandon', etc.
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityEventType:[\w\-\.\:\%]+:[0-9]*$
          title: Facilityeventtypeid
          type: string
        TerminationDateTime:
          description: >-
            The date and time at which the event is no longer in effect. For
            point-in-time events the 'TerminationDateTime' must be set equal to
            'EffectiveDateTime'. Open time intervals have an absent
            'TerminationDateTime'.
          format: date-time
          title: Terminationdatetime
          type: string
      title: AbstractFacilityEvent100
      type: object
    AbstractFacilityOperator100:
      additionalProperties: false
      description: >-
        The organisation that was responsible for a facility at some point in
        time.
      properties:
        EffectiveDateTime:
          description: The date and time at which the facility operator becomes effective.
          format: date-time
          title: Effectivedatetime
          type: string
        FacilityOperatorID:
          description: >-
            Internal, unique identifier for an item 'AbstractFacilityOperator'.
            This identifier is used by 'AbstractFacility.CurrentOperatorID' and
            'AbstractFacility.InitialOperatorID'.
          title: Facility Operator ID
          type: string
        FacilityOperatorOrganisationID:
          description: >-
            The company that currently operates, or previously operated the
            facility
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Facilityoperatororganisationid
          type: string
        TerminationDateTime:
          description: >-
            The date and time at which the facility operator is no longer in
            effect. If the operator is still effective, the
            'TerminationDateTime' is left absent.
          format: date-time
          title: Terminationdatetime
          type: string
      title: AbstractFacilityOperator100
      type: object
    AbstractFacilitySpecification100:
      additionalProperties: false
      description: >-
        A property, characteristic, or attribute about a facility that is not
        described explicitly elsewhere.
      properties:
        EffectiveDateTime:
          description: >-
            The date and time at which the facility specification instance
            becomes effective.
          format: date-time
          title: Effectivedatetime
          type: string
        FacilitySpecificationDateTime:
          description: The actual date and time value of the parameter.
          format: date-time
          title: Facilityspecificationdatetime
          type: string
        FacilitySpecificationIndicator:
          description: The actual indicator value of the parameter.
          title: Facilityspecificationindicator
          type: boolean
        FacilitySpecificationQuantity:
          description: The value for the specified parameter type.
          title: Facilityspecificationquantity
          type: number
        FacilitySpecificationText:
          description: The actual text value of the parameter.
          title: Facilityspecificationtext
          type: string
        ParameterTypeID:
          description: Parameter type of property or characteristic.
          pattern: ^[\w\-\.]+:reference-data\-\-ParameterType:[\w\-\.\:\%]+:[0-9]*$
          title: Parametertypeid
          type: string
        TerminationDateTime:
          description: >-
            The date and time at which the facility specification instance is no
            longer in effect.
          format: date-time
          title: Terminationdatetime
          type: string
        UnitOfMeasureID:
          description: >-
            The unit for the quantity parameter, like metre (m in SI units
            system) for quantity Length.
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          title: Unitofmeasureid
          type: string
      title: AbstractFacilitySpecification100
      type: object
    AbstractFacilityState100:
      additionalProperties: false
      description: The life cycle status of a facility at some point in time.
      properties:
        EffectiveDateTime:
          description: The date and time at which the facility state becomes effective.
          format: date-time
          title: Effectivedatetime
          type: string
        FacilityStateTypeID:
          description: The facility life cycle state from planning to abandonment.
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityStateType:[\w\-\.\:\%]+:[0-9]*$
          title: Facilitystatetypeid
          type: string
        TerminationDateTime:
          description: >-
            The date and time at which the facility state is no longer in
            effect.
          format: date-time
          title: Terminationdatetime
          type: string
      title: AbstractFacilityState100
      type: object
    AbstractFacilityVerticalMeasurement100:
      additionalProperties: false
      description: >-
        A location along a wellbore, _usually_ associated with some aspect of
        the drilling of the wellbore, but not with any intersecting _subsurface_
        natural surfaces.
      properties:
        EffectiveDateTime:
          description: >-
            The date and time at which a vertical measurement instance becomes
            effective.
          format: date-time
          title: Effectivedatetime
          type: string
        TerminationDateTime:
          description: >-
            The date and time at which a vertical measurement instance is no
            longer in effect.
          format: date-time
          title: Terminationdatetime
          type: string
        VerticalCRSID:
          description: >-
            A vertical coordinate reference system defines the origin for height
            or depth values. It is expected that either VerticalCRSID or
            VerticalReferenceID reference is provided in a given vertical
            measurement array object, but not both.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalcrsid
          type: string
        VerticalMeasurement:
          description: >-
            The value of the elevation or depth. Depth is positive downwards
            from a vertical reference or geodetic datum along a path, which can
            be vertical; elevation is positive upwards from a geodetic datum
            along a vertical path. Either can be negative.
          title: Verticalmeasurement
          type: number
        VerticalMeasurementDescription:
          description: Text which describes a vertical measurement in detail.
          title: Verticalmeasurementdescription
          type: string
        VerticalMeasurementPathID:
          description: Specifies Measured Depth, True Vertical Depth, or Elevation.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-VerticalMeasurementPath:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementpathid
          type: string
        VerticalMeasurementSourceID:
          description: Specifies Driller vs Logger.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-VerticalMeasurementSource:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementsourceid
          type: string
        VerticalMeasurementTypeID:
          description: >-
            Specifies the type of vertical measurement (TD, Plugback, Kickoff,
            Drill Floor, Rotary Table...).
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-VerticalMeasurementType:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementtypeid
          type: string
        VerticalMeasurementUnitOfMeasureID:
          description: >-
            The unit of measure for the vertical measurement. If a unit of
            measure and a vertical CRS are provided, the unit of measure
            provided is taken over the unit of measure from the CRS.
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementunitofmeasureid
          type: string
        VerticalReferenceID:
          description: >-
            The reference point from which the relative vertical measurement is
            made. This is only populated if the measurement has no VerticalCRSID
            specified. The value entered must be the VerticalMeasurementID for
            another vertical measurement array element in this resource or its
            parent facility, and as a chain of measurements, they must resolve
            ultimately to a Vertical CRS. It is expected that a VerticalCRSID or
            a VerticalReferenceID is provided in a given vertical measurement
            array object, but not both.
          title: Verticalreferenceid
          type: string
        WellboreTVDTrajectoryID:
          description: >-
            Specifies what directional survey or wellpath was used to calculate
            the TVD.
          pattern: >-
            ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+:[0-9]*$
          title: Wellboretvdtrajectoryid
          type: string
      title: AbstractFacilityVerticalMeasurement100
      type: object
    AbstractFeatureCollection100:
      additionalProperties: false
      description: >-
        The normalized coordinates (Point, MultiPoint, LineString,
        MultiLineString, Polygon or MultiPolygon) based on WGS 84 (EPSG:4326 for
        2-dimensional coordinates, EPSG:4326 + EPSG:5714 (MSL) for 3-dimensional
        coordinates). This derived coordinate representation is intended for
        global discoverability only. The schema of this substructure is
        identical to the GeoJSON FeatureCollection
        https://geojson.org/schema/FeatureCollection.json. The coordinate
        sequence follows GeoJSON standard, i.e. longitude, latitude {, height}
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        features:
          items:
            $ref: '#/components/schemas/Feature1'
          title: Features
          type: array
        type:
          $ref: '#/components/schemas/Type9'
      required:
        - type
        - features
      title: AbstractFeatureCollection100
      type: object
    AbstractLegalParentList100:
      additionalProperties: false
      description: The links to data, which constitute the inputs.
      properties:
        parents:
          description: >-
            An array of none, one or many entity references in the data
            ecosystem, which identify the source of data in the legal sense. In
            contract to other relationships, the source record version is
            required. Example: the 'parents' will be queried when e.g. the
            subscription of source data services is terminated; access to the
            derivatives is also terminated.
          example: []
          items:
            $ref: '#/components/schemas/Parent'
          title: Parents
          type: array
      title: AbstractLegalParentList100
      type: object
    AbstractLegalTags100:
      additionalProperties: false
      description: >-
        The entity's legal tags and compliance status. The actual contents
        associated with the legal tags is managed by the Compliance Service.
      properties:
        legaltags:
          description: >-
            The list of legal tags, which resolve to legal properties (like
            country of origin, export classification code, etc.) and rules with
            the help of the Compliance Service.
          items:
            type: string
          title: Legal Tags
          type: array
        otherRelevantDataCountries:
          description: >-
            The list of other relevant data countries as an array of two-letter
            country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
          items:
            $ref: '#/components/schemas/OtherRelevantDataCountry'
          title: Other Relevant Data Countries
          type: array
        status:
          description: >-
            The legal status. Set by the system after evaluation against the
            compliance rules associated with the "legaltags" using the
            Compliance Service.
          pattern: ^(compliant|uncompliant)$
          title: Legal Status
          type: string
      required:
        - legaltags
        - otherRelevantDataCountries
      title: AbstractLegalTags100
      type: object
    AbstractSpatialLocation100:
      additionalProperties: false
      description: >-
        The spatial location information such as coordinates, CRS information
        (left empty when not appropriate).
      properties:
        AppliedOperations:
          description: >-
            The audit trail of operations applied to the coordinates from the
            original state to the current state. The list may contain operations
            applied prior to ingestion as well as the operations applied to
            produce the Wgs84Coordinates. The text elements refer to ESRI style
            CRS and Transformation names, which may have to be translated to
            EPSG standard names.
          example:
            - >-
              conversion from ED_1950_UTM_Zone_31N to GCS_European_1950; 1
              points converted
            - >-
              transformation GCS_European_1950 to GCS_WGS_1984 using
              ED_1950_To_WGS_1984_24; 1 points successfully transformed
          items:
            type: string
          title: Operations Applied
          type: array
        AsIngestedCoordinates:
          allOf:
            - $ref: '#/components/schemas/AbstractAnyCrsFeatureCollection100'
          description: >-
            The original or 'as ingested' coordinates (Point, MultiPoint,
            LineString, MultiLineString, Polygon or MultiPolygon). The name
            'AsIngestedCoordinates' was chosen to contrast it to
            'OriginalCoordinates', which carries the uncertainty whether any
            coordinate operations took place before ingestion. In cases where
            the original CRS is different from the as-ingested CRS, the
            OperationsApplied can also contain the list of operations applied to
            the coordinate prior to ingestion. The data structure is similar to
            GeoJSON FeatureCollection, however in a CRS context explicitly
            defined within the AbstractAnyCrsFeatureCollection. The coordinate
            sequence follows GeoJSON standard, i.e. 'eastward/longitude',
            'northward/latitude' {, 'upward/height' unless overridden by an
            explicit direction in the
            AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
          title: As Ingested Coordinates
        CoordinateQualityCheckDateTime:
          description: The date of the Quality Check.
          format: date-time
          title: Coordinatequalitycheckdatetime
          type: string
        CoordinateQualityCheckPerformedBy:
          description: The user who performed the Quality Check.
          title: Coordinatequalitycheckperformedby
          type: string
        CoordinateQualityCheckRemarks:
          description: Freetext remarks on Quality Check.
          items:
            type: string
          title: Coordinatequalitycheckremarks
          type: array
        QualitativeSpatialAccuracyTypeID:
          description: >-
            A qualitative description of the quality of a spatial location, e.g.
            unverifiable, not verified, basic validation.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-QualitativeSpatialAccuracyType:[\w\-\.\:\%]+:[0-9]*$
          title: Qualitativespatialaccuracytypeid
          type: string
        QuantitativeAccuracyBandID:
          description: >-
            An approximate quantitative assessment of the quality of a location
            (accurate to > 500 m (i.e. not very accurate)), to < 1 m, etc.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-QuantitativeAccuracyBand:[\w\-\.\:\%]+:[0-9]*$
          title: Quantitativeaccuracybandid
          type: string
        SpatialGeometryTypeID:
          description: >-
            Indicates the expected look of the SpatialParameterType, e.g. Point,
            MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon. The
            value constrains the type of geometries in the GeoJSON
            Wgs84Coordinates and AsIngestedCoordinates.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-SpatialGeometryType:[\w\-\.\:\%]+:[0-9]*$
          title: Spatialgeometrytypeid
          type: string
        SpatialLocationCoordinatesDate:
          description: Date when coordinates were measured or retrieved.
          format: date-time
          title: Spatiallocationcoordinatesdate
          type: string
        SpatialParameterTypeID:
          description: >-
            A type of spatial representation of an object, often general (e.g.
            an Outline, which could be applied to Field, Reservoir, Facility,
            etc.) or sometimes specific (e.g. Onshore Outline, State Offshore
            Outline, Federal Offshore Outline, 3 spatial representations that
            may be used by Countries).
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-SpatialParameterType:[\w\-\.\:\%]+:[0-9]*$
          title: Spatialparametertypeid
          type: string
        Wgs84Coordinates:
          allOf:
            - $ref: '#/components/schemas/AbstractFeatureCollection100'
          description: >-
            The normalized coordinates (Point, MultiPoint, LineString,
            MultiLineString, Polygon or MultiPolygon) based on WGS 84 (EPSG:4326
            for 2-dimensional coordinates, EPSG:4326 + EPSG:5714 (MSL) for
            3-dimensional coordinates). This derived coordinate representation
            is intended for global discoverability only. The schema of this
            substructure is identical to the GeoJSON FeatureCollection
            https://geojson.org/schema/FeatureCollection.json. The coordinate
            sequence follows GeoJSON standard, i.e. longitude, latitude {,
            height}
          title: WGS 84 Coordinates
      title: AbstractSpatialLocation100
      type: object
    AbstractWellboreDrillingReason100:
      additionalProperties: false
      description: >-
        Purpose for drilling a wellbore, which often is an indication of the
        level of risk.
      properties:
        DrillingReasonTypeID:
          description: >-
            Identifier of the drilling reason type for the corresponding time
            period.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-DrillingReasonType:[\w\-\.\:\%]+:[0-9]*$
          title: Drillingreasontypeid
          type: string
        EffectiveDateTime:
          description: The date and time at which the event becomes effective.
          format: date-time
          title: Effectivedatetime
          type: string
        TerminationDateTime:
          description: The date and time at which the event is no longer in effect.
          format: date-time
          title: Terminationdatetime
          type: string
      title: AbstractWellboreDrillingReason100
      type: object
    AggregationResponse:
      properties:
        count:
          title: Count
          type: integer
        key:
          title: Key
          type: string
      title: AggregationResponse
      type: object
    Artefact:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        ResourceID:
          description: The SRN which identifies this OSDU Artefact resource.
          pattern: ^[\w\-\.]+:dataset\-\-[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$
          title: Resourceid
          type: string
        ResourceKind:
          description: >-
            The kind or schema ID of the artefact. Resolvable with the Schema
            Service.
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          title: Resourcekind
          type: string
        RoleID:
          description: The SRN of this artefact's role.
          pattern: ^[\w\-\.]+:reference-data\-\-ArtefactRole:[\w\-\.\:\%]+:[0-9]*$
          title: Roleid
          type: string
      title: Artefact
      type: object
    AvailableMarkerProperty:
      additionalProperties: false
      description: >-
        A set of properties describing a marker property which is available for
        this instance of a WellboreMarkerSet.
      properties:
        MarkerPropertyTypeID:
          description: >-
            The reference to a marker property type - or if interpreted as CSV
            columns, the 'well-known column type. It is a relationship to a
            reference-data--MarkerPropertyType record id.
          example: 'partition-id:reference-data--MarkerPropertyType:MissingThickness:'
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-MarkerPropertyType:[\w\-\.\:\%]+:[0-9]*$
          title: Marker Property Type ID
          type: string
        MarkerPropertyUnitID:
          description: >-
            Unit of Measure for the marker properties of type
            MarkerPropertyType.
          example: 'partition-id:reference-data--UnitOfMeasure:ft:'
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          title: Marker Property Unit ID
          type: string
        Name:
          description: >-
            The name of the marker property (e.g. column in a CSV document) as
            originally found. If absent The name of the MarkerPropertyType is
            intended to be used.
          example: MissingThickness
          title: Name
          type: string
      title: AvailableMarkerProperty
      type: object
    AvailableTrajectoryStationProperty:
      additionalProperties: false
      description: >-
        A set of properties describing a trajectory station property which is
        available for this instance of a WellboreTrajectory.
      properties:
        Name:
          description: >-
            The name of the curve (e.g. column in a CSV document) as originally
            found. If absent The name of the TrajectoryCurveType is intended to
            be used.
          example: AzimuthTN
          title: Name
          type: string
        StationPropertyUnitID:
          description: >-
            Unit of Measure for the station properties of type
            TrajectoryStationPropertyType.
          example: 'partition-id:reference-data--UnitOfMeasure:dega:'
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          title: Station Property Unit ID
          type: string
        TrajectoryStationPropertyTypeID:
          description: >-
            The reference to a trajectory station property type - of if
            interpreted as channels, the curve or channel name type, identifying
            e.g. MD, Inclination, Azimuth. This is a relationship to a
            reference-data--TrajectoryStationPropertyType record id.
          example: >-
            partition-id:reference-data--TrajectoryStationPropertyType:AzimuthTN:
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-TrajectoryStationPropertyType:[\w\-\.\:\%]+:[0-9]*$
          title: Trajectory Station Property Type ID
          type: string
      title: AvailableTrajectoryStationProperty
      type: object
    Body_fastquery_wellbores_bygeopolygon_ddms_fastquery_wellbores_bygeopolygon_post:
      properties:
        points:
          items:
            $ref: '#/components/schemas/Point'
          title: Points
          type: array
        query:
          $ref: '#/components/schemas/SearchQuery'
      required:
        - points
      title: >-
        Body_fastquery_wellbores_bygeopolygon_ddms_fastquery_wellbores_bygeopolygon_post
      type: object
    Body_query_wellbores_bygeopolygon_ddms_query_wellbores_bygeopolygon_post:
      properties:
        points:
          items:
            $ref: '#/components/schemas/Point'
          title: Points
          type: array
        query:
          $ref: '#/components/schemas/SearchQuery'
      required:
        - points
      title: Body_query_wellbores_bygeopolygon_ddms_query_wellbores_bygeopolygon_post
      type: object
    Body_upload_log_data_file_ddms_v2_logs__logid__upload_data_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
        - file
      title: Body_upload_log_data_file_ddms_v2_logs__logid__upload_data_post
      type: object
    ByBoundingBox:
      properties:
        bottomRight:
          $ref: '#/components/schemas/Point'
        topLeft:
          $ref: '#/components/schemas/Point'
      required:
        - topLeft
        - bottomRight
      title: ByBoundingBox
      type: object
    ByDistance:
      properties:
        distance:
          title: Distance
          type: number
        point:
          $ref: '#/components/schemas/Point'
      required:
        - point
      title: ByDistance
      type: object
    ByGeoPolygon:
      properties:
        points:
          items:
            $ref: '#/components/schemas/Point'
          title: Points
          type: array
      title: ByGeoPolygon
      type: object
    Catalog:
      properties:
        family_catalog:
          items:
            $ref: '#/components/schemas/CatalogItem'
          title: Family Catalog
          type: array
        main_family_catalog:
          items:
            $ref: '#/components/schemas/MainFamilyCatalogItem'
          title: Main Family Catalog
          type: array
      required:
        - family_catalog
      title: Catalog
      type: object
    CatalogItem:
      properties:
        family:
          default: ''
          title: Family
          type: string
        rule:
          title: Rule
          type: string
        unit:
          title: Unit
          type: string
      required:
        - unit
        - rule
      title: CatalogItem
      type: object
    CatalogRecord:
      example:
        acl:
          owners:
            - abc@domain.com, cde@domain.com
          viewers:
            - abc@domain.com, cde@domain.com
        data:
          family_catalog:
            - family: Medium Resistivity
              rule: MEDR
              unit: ohm.m
          main_family_catalog:
            - Family: Medium Resistivity
              MainFamily: Resistivity
              Unit: OHMM
        legal:
          legaltags:
            - opendes-public-usa-dataset-1
          otherRelevantDataCountries:
            - US
      properties:
        acl:
          $ref: '#/components/schemas/StorageAcl'
        data:
          $ref: '#/components/schemas/Catalog'
        legal:
          $ref: '#/components/schemas/odes_storage__models__Legal'
      required:
        - acl
        - legal
        - data
      title: CatalogRecord
      type: object
    Coordinate:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate
      type: array
    Coordinate1:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate1
      type: array
    Coordinate2:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate2
      type: array
    Coordinate3:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate3
      type: array
    Coordinate4:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate4
      type: array
    Coordinate5:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate5
      type: array
    Coordinate6:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate6
      type: array
    Coordinate7:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate7
      type: array
    Coordinate8:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate8
      type: array
    Coordinate9:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      items: {}
      title: Coordinate9
      type: array
    CreateDataSessionRequest:
      description: |-
        Note:
        if fromVersion is provided, should we:
            force mode to 'update'
            raise an error if mode is overwrite
      properties:
        fromVersion:
          default: 0
          description: >-
            specify the version on top of which update will be applied. By
            default use the latest one (0). Not relevant if overwrite is set to
            True.
          title: Fromversion
          type: integer
        meta:
          additionalProperties:
            type: string
          description: dictionary all values, stored in the session
          title: Meta
          type: object
        mode:
          allOf:
            - $ref: '#/components/schemas/SessionUpdateMode'
          description: >-
            merge mode at commit. If 'update', existing data will be merged with
            the data sent during the session. If 'overwrite', existing data will
            be ignored, the final result will only contains data sent within the
            session.
        timeToLive:
          default: 1440
          description: optional - time to live in minutes.
          title: Timetolive
          type: integer
      required:
        - mode
      title: CreateDataSessionRequest
      type: object
    CreateUpdateRecordsResponse:
      properties:
        recordCount:
          title: Recordcount
          type: integer
        recordIdVersions:
          items:
            type: string
          title: Recordidversions
          type: array
        recordIds:
          items:
            type: string
          title: Recordids
          type: array
        skippedRecordIds:
          items:
            type: string
          title: Skippedrecordids
          type: array
      title: CreateUpdateRecordsResponse
      type: object
    CursorQueryResponse:
      properties:
        cursor:
          title: Cursor
          type: string
        results:
          items:
            type: object
          title: Results
          type: array
        totalCount:
          title: Totalcount
          type: integer
      title: CursorQueryResponse
      type: object
    Curve110:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        BaseDepth:
          description: >-
            DEPRECATED: populate data.SamplingStart or data.SamplingStop
            instead, for informational purposes data.BottomMeasuredDepth.
            SamplingStart and SamplingStop support other domains than depth.
          title: Basedepth
          type: number
        CurveID:
          description: The ID of the Well Log Curve
          title: Curveid
          type: string
        CurveQuality:
          description: The Quality of the Log Curve.
          title: Curvequality
          type: string
        CurveUnit:
          description: Unit of Measure for the Log Curve
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          title: Curveunit
          type: string
        CurveVersion:
          description: The Version of the Log Curve.
          title: Curveversion
          type: string
        DateStamp:
          description: Date curve was created in the database
          format: date-time
          title: Datestamp
          type: string
        DepthCoding:
          description: >-
            DEPRECATED: Replaced by boolean data.IsRegular. The Coding of the
            depth.
          pattern: ^REGULAR|DISCRETE$
          title: Depthcoding
          type: string
        DepthUnit:
          description: >-
            DEPRECATED: use the meta[] to specify the sampling UnitOfMeasure
            (AbstractMetaItem of kind "Unit"; propertyNames["TopMeasuredDepth",
            "BottomMeasuredDepth"]). Originally: Unit of Measure for Top and
            Base depth.
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          title: Depthunit
          type: string
        Interpolate:
          description: Whether curve can be interpolated or not
          title: Interpolate
          type: boolean
        InterpreterName:
          description: The name of person who interpreted this Log Curve.
          title: Interpretername
          type: string
        IsProcessed:
          description: >-
            Indicates if the curve has been (pre)processed or if it is a raw
            recording
          title: Isprocessed
          type: boolean
        LogCurveBusinessValueID:
          description: The related record id of the Log Curve Business Value Type.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-LogCurveBusinessValue:[\w\-\.\:\%]+:[0-9]*$
          title: Logcurvebusinessvalueid
          type: string
        LogCurveFamilyID:
          description: >-
            The related record id of the Log Curve Family - which is the
            detailed Geological Physical Quantity Measured - such as neutron
            porosity
          pattern: ^[\w\-\.]+:reference-data\-\-LogCurveFamily:[\w\-\.\:\%]+:[0-9]*$
          title: Logcurvefamilyid
          type: string
        LogCurveMainFamilyID:
          description: >-
            The related record id of the Log Curve Main Family Type - which is
            the Geological Physical Quantity measured - such as porosity.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-LogCurveMainFamily:[\w\-\.\:\%]+:[0-9]*$
          title: Logcurvemainfamilyid
          type: string
        LogCurveTypeID:
          description: >-
            The related record id of the Log Curve Type - which is the standard
            mnemonic chosen by the company - OSDU provides an initial list
          pattern: ^[\w\-\.]+:reference-data\-\-LogCurveType:[\w\-\.\:\%]+:[0-9]*$
          title: Logcurvetypeid
          type: string
        Mnemonic:
          description: >-
            The Mnemonic of the Log Curve is the value as received either from
            Raw Providers or from Internal Processing team
          title: Mnemonic
          type: string
        NullValue:
          description: Indicates that there is no measurement within the curve
          title: Nullvalue
          type: boolean
        NumberOfColumns:
          description: >-
            The number of columns present in this Curve for a single reference
            value. For simple logs this is typically 1; for image logs this
            holds the number of image traces or property series. Further
            information about the columns can be obtained via the respective log
            or curve APIs of the Domain Data Management Service.
          example: 192
          title: Number Of Columns
          type: integer
        TopDepth:
          description: >-
            DEPRECATED: populate data.SamplingStart or data.SamplingStop
            instead, for informational purposes data.TopMeasuredDepth.
            SamplingStart and SamplingStop support other domains than depth.
          title: Topdepth
          type: number
      title: Curve110
      type: object
    DataType:
      description: An enumeration.
      enum:
        - string
        - number
        - integer
        - boolean
      title: DataType
    DataType_1:
      description: An enumeration.
      enum:
        - string
        - number
        - integer
        - boolean
      title: DataType_1
    DataType_2:
      description: An enumeration.
      enum:
        - string
        - number
        - integer
        - boolean
        - date-time
      title: DataType_2
    Dataset:
      additionalProperties: false
      description: The SRN which identifies this OSDU File resource.
      pattern: ^[\w\-\.]+:dataset\-\-[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$
      title: Dataset
      type: string
    Dip:
      example:
        azimuth:
          unitKey: dega
          value: 42
        classification: fracture
        inclination:
          unitKey: dega
          value: 9
        quality:
          unitKey: unitless
          value: 0.5
        reference:
          unitKey: meter
          value: 1000.5
        xCoordinate:
          unitKey: meter
          value: 2
        yCoordinate:
          unitKey: meter
          value: 45
        zCoordinate:
          unitKey: meter
          value: 7
      properties:
        azimuth:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Only degrees unit is supported for the moment
          title: Azimuth value of the dip
        classification:
          description: Any string is accepted.
          title: Classification of the dip
          type: string
        inclination:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Only degrees unit is supported for the moment
          title: Inclination value of the dip
        quality:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Decimal number between 0 and 1
          title: Quality of the dip
        reference:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Only Measured Depth in meter is supported for the moment
          title: Reference of the dip
        xCoordinate:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Only meter unit is supported for the moment
          title: The X coordinate of the dip
        yCoordinate:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Only meter unit is supported for the moment
          title: The Y coordinate of the dip
        zCoordinate:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Only meter unit is supported for the moment
          title: The Z coordinate of the dip
      required:
        - reference
        - azimuth
        - inclination
      title: Dip
      type: object
    DirectionWell:
      description: An enumeration.
      enum:
        - huff-n-puff
        - injector
        - producer
        - uncertain
        - unknown
      title: DirectionWell
    Feature:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        geometry:
          anyOf:
            - $ref: '#/components/schemas/GeometryItem'
            - $ref: '#/components/schemas/GeometryItem1'
            - $ref: '#/components/schemas/GeometryItem2'
            - $ref: '#/components/schemas/GeometryItem3'
            - $ref: '#/components/schemas/GeometryItem4'
            - $ref: '#/components/schemas/GeometryItem5'
            - $ref: '#/components/schemas/GeometryItem6'
          title: Geometry
        properties:
          title: Properties
          type: object
        type:
          $ref: '#/components/schemas/Type1'
      required:
        - type
      title: Feature
      type: object
    Feature1:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        geometry:
          anyOf:
            - $ref: '#/components/schemas/GeometryItem7'
            - $ref: '#/components/schemas/GeometryItem8'
            - $ref: '#/components/schemas/GeometryItem9'
            - $ref: '#/components/schemas/GeometryItem10'
            - $ref: '#/components/schemas/GeometryItem11'
            - $ref: '#/components/schemas/GeometryItem12'
            - $ref: '#/components/schemas/GeometryItem13'
          title: Geometry
        properties:
          title: Properties
          type: object
        type:
          $ref: '#/components/schemas/Type10'
      required:
        - type
      title: Feature1
      type: object
    FluidWell:
      description: An enumeration.
      enum:
        - air
        - condensate
        - dry
        - gas
        - gas-water
        - non HC gas
        - non HC gas -- CO2
        - oil
        - oil-gas
        - oil-water
        - steam
        - water
        - water -- brine
        - water -- fresh water
        - unknown
      title: FluidWell
    Format:
      description: An enumeration.
      enum:
        - date
        - date-time
        - time
        - byte
        - binary
        - boolean
        - email
        - uuid
        - uri
        - int8
        - int16
        - int32
        - int64
        - float32
        - float64
        - float128
      title: Format
    Format_1:
      description: An enumeration.
      enum:
        - date
        - date-time
        - time
        - byte
        - binary
        - boolean
        - email
        - uuid
        - uri
        - int8
        - int16
        - int32
        - int64
        - float32
        - float64
        - float128
      title: Format_1
    Format_2:
      description: An enumeration.
      enum:
        - date
        - date-time
        - time
        - byte
        - binary
        - email
        - uuid
        - uri
        - int8
        - int16
        - int32
        - int64
        - float32
        - float64
        - float128
      title: Format_2
    GeoJsonFeature:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        geometry:
          anyOf:
            - $ref: '#/components/schemas/GeoJsonPoint'
            - $ref: '#/components/schemas/GeoJsonMultiPoint'
            - $ref: '#/components/schemas/GeoJsonLineString'
            - $ref: '#/components/schemas/GeoJsonMultiLineString'
            - $ref: '#/components/schemas/Polygon'
            - $ref: '#/components/schemas/GeoJsonMultiPolygon'
            - $ref: '#/components/schemas/geometryItem'
          title: Geometry
        properties:
          title: Properties
          type: object
        type:
          $ref: '#/components/schemas/Type_1'
      required:
        - geometry
        - properties
        - type
      title: GeoJsonFeature
      type: object
    GeoJsonFeatureCollection:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        features:
          items:
            $ref: '#/components/schemas/GeoJsonFeature'
          title: Features
          type: array
        type:
          $ref: '#/components/schemas/Type_2'
      required:
        - features
        - type
      title: GeoJsonFeatureCollection
      type: object
    GeoJsonLineString:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        coordinates:
          items:
            items:
              type: number
            type: array
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type_3'
      required:
        - coordinates
        - type
      title: GeoJsonLineString
      type: object
    GeoJsonMultiLineString:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        coordinates:
          items:
            items:
              items:
                type: number
              type: array
            type: array
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type_4'
      required:
        - coordinates
        - type
      title: GeoJsonMultiLineString
      type: object
    GeoJsonMultiPoint:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        coordinates:
          items:
            items:
              type: number
            type: array
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type_5'
      required:
        - coordinates
        - type
      title: GeoJsonMultiPoint
      type: object
    GeoJsonMultiPolygon:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          description: Bounding box in longitude, latitude WGS 84.
          items:
            type: number
          title: Bbox
          type: array
        coordinates:
          description: >-
            Array of polygons (minimum 2D), containing an array of point
            coordinates (longitude, latitude, (optionally elevation and other
            properties).
          items:
            items:
              items:
                items:
                  type: number
                type: array
              type: array
            type: array
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type_6'
      required:
        - coordinates
        - type
      title: GeoJsonMultiPolygon
      type: object
    GeoJsonPoint:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        coordinates:
          items:
            type: number
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type_7'
      required:
        - coordinates
        - type
      title: GeoJsonPoint
      type: object
    GeometryItem:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            type: number
          minItems: 2
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type2'
      required:
        - type
        - coordinates
      title: GeometryItem
      type: object
    GeometryItem1:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate'
          minItems: 2
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type3'
      required:
        - type
        - coordinates
      title: GeometryItem1
      type: object
    GeometryItem10:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate7'
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type14'
      required:
        - type
        - coordinates
      title: GeometryItem10
      type: object
    GeometryItem11:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate8'
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type15'
      required:
        - type
        - coordinates
      title: GeometryItem11
      type: object
    GeometryItem12:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            items:
              $ref: '#/components/schemas/Coordinate9'
            type: array
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type16'
      required:
        - type
        - coordinates
      title: GeometryItem12
      type: object
    GeometryItem13:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        geometries:
          items: {}
          title: Geometries
          type: array
        type:
          $ref: '#/components/schemas/Type17'
      required:
        - type
        - geometries
      title: GeometryItem13
      type: object
    GeometryItem2:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate1'
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type4'
      required:
        - type
        - coordinates
      title: GeometryItem2
      type: object
    GeometryItem3:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate2'
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type5'
      required:
        - type
        - coordinates
      title: GeometryItem3
      type: object
    GeometryItem4:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate3'
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type6'
      required:
        - type
        - coordinates
      title: GeometryItem4
      type: object
    GeometryItem5:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            items:
              $ref: '#/components/schemas/Coordinate4'
            type: array
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type7'
      required:
        - type
        - coordinates
      title: GeometryItem5
      type: object
    GeometryItem6:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        geometries:
          items: {}
          title: Geometries
          type: array
        type:
          $ref: '#/components/schemas/Type8'
      required:
        - type
        - geometries
      title: GeometryItem6
      type: object
    GeometryItem7:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            type: number
          minItems: 2
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type11'
      required:
        - type
        - coordinates
      title: GeometryItem7
      type: object
    GeometryItem8:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate5'
          minItems: 2
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type12'
      required:
        - type
        - coordinates
      title: GeometryItem8
      type: object
    GeometryItem9:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          minItems: 4
          title: Bbox
          type: array
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate6'
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type13'
      required:
        - type
        - coordinates
      title: GeometryItem9
      type: object
    GetLogDataResponse:
      oneOf:
        - properties:
            columns:
              items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
              title: Columns
              type: array
            data:
              anyOf:
                - items:
                    anyOf:
                      - type: string
                      - type: integer
                      - type: number
                  type: array
                - items:
                    items:
                      anyOf:
                        - type: string
                        - type: integer
                        - type: number
                    type: array
                  type: array
              title: Data
            index:
              items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
              title: Index
              type: array
          required:
            - data
          title: SplitFormat
          type: object
        - additionalProperties:
            additionalProperties:
              anyOf:
                - type: string
                - type: integer
                - type: number
            type: object
          title: ColumnFormat
          type: object
    GetTrajectoryDataResponse:
      oneOf:
        - properties:
            columns:
              items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
              title: Columns
              type: array
            data:
              anyOf:
                - items:
                    anyOf:
                      - type: string
                      - type: integer
                      - type: number
                  type: array
                - items:
                    items:
                      anyOf:
                        - type: string
                        - type: integer
                        - type: number
                    type: array
                  type: array
              title: Data
            index:
              items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
              title: Index
              type: array
          required:
            - data
          title: SplitFormat
          type: object
        - additionalProperties:
            additionalProperties:
              anyOf:
                - type: string
                - type: integer
                - type: number
            type: object
          title: ColumnFormat
          type: object
    GuessRequest:
      example:
        description: LDTD Gamma Ray
        label: GRD
        log_unit: GAPI
      properties:
        description:
          title: Description
          type: string
        label:
          title: Label
          type: string
        log_unit:
          title: Log Unit
          type: string
      required:
        - label
      title: GuessRequest
      type: object
    GuessResponse:
      properties:
        base_unit:
          title: Base Unit
          type: string
        family:
          title: Family
          type: string
        family_type:
          items:
            type: string
          title: Family Type
          type: array
        log_unit:
          title: Log Unit
          type: string
      title: GuessResponse
      type: object
    HTTPValidationError:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Errors
          type: array
      title: HTTPValidationError
      type: object
    JSONOrient:
      description: An enumeration.
      enum:
        - split
        - columns
      title: JSONOrient
      type: string
    Kind:
      description: An enumeration.
      enum:
        - CRS
        - Unit
        - Measurement
        - AzimuthReference
        - DateTime
      title: Kind
      type: string
    LineageAssertion:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        ID:
          description: >-
            The object reference identifying the DIRECT, INDIRECT, REFERENCE
            dependency.
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$
          title: Id
          type: string
        LineageRelationshipType:
          description: >-
            Used by LineageAssertion to describe the nature of the line of
            descent of a work product component from a prior Resource, such as
            DIRECT, INDIRECT, REFERENCE.  It is not for proximity (number of
            nodes away), it is not to cover all the relationships in a full
            ontology or graph, and it is not to describe the type of activity
            that created the asserting WPC.  LineageAssertion does not encompass
            a full provenance, process history, or activity model.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-LineageRelationshipType:[\w\-\.\:\%]+:[0-9]*$
          title: Lineagerelationshiptype
          type: string
      title: LineageAssertion
      type: object
    LinkList:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties: {}
      title: LinkList
      type: object
    LogServiceDateInterval:
      additionalProperties: false
      description: >-
        An interval built from two nested values : StartDate and EndDate. It
        applies to the whole log services and may apply to composite logs as
        [start of the first run job] and [end of the last run job]Log Service
        Date
      properties:
        EndDate:
          format: date-time
          title: Enddate
          type: string
        StartDate:
          format: date-time
          title: Startdate
          type: string
      title: LogServiceDateInterval
      type: object
    MainFamilyCatalogItem:
      properties:
        Family:
          title: Family
          type: string
        MainFamily:
          title: Mainfamily
          type: string
        Unit:
          title: Unit
          type: string
      required:
        - MainFamily
        - Family
        - Unit
      title: MainFamilyCatalogItem
      type: object
    Marker110:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        FeatureName:
          description: Name of the feature the marker is characterizing
          title: Featurename
          type: string
        FeatureTypeID:
          description: >-
            Feature Type Reference Type. Possible values - Base, top, fault,
            salt, reef, sea floor
          pattern: ^[\w\-\.]+:reference-data\-\-FeatureType:[\w\-\.\:\%]+:[0-9]*$
          title: Featuretypeid
          type: string
        GeologicalAge:
          description: Associated geological age
          title: Geologicalage
          type: string
        MarkerDate:
          description: >-
            Timestamp of the date and time when the when the Marker was
            interpreted.
          format: date-time
          title: Markerdate
          type: string
        MarkerInterpreter:
          description: The name of the Marker interpreter (could be a person or vendor).
          title: Markerinterpreter
          type: string
        MarkerMeasuredDepth:
          description: The depth at which the Marker was noted.
          title: Markermeasureddepth
          type: number
        MarkerName:
          description: Name of the Marker
          title: Markername
          type: string
        MarkerObservationNumber:
          description: >-
            Any observation number that distinguishes a Marker observation from
            others with same Marker name, date.
          title: Markerobservationnumber
          type: number
        MarkerSubSeaVerticalDepth:
          description: >-
            The Marker's TVD converted to a Sub-Sea Vertical depth, i.e., below
            Mean Sea Level. Note that TVD values above MSL are negative. This is
            the same as true vertical depth referenced to the vertical CRS MSL
            depth.
          title: Markersubseaverticaldepth
          type: number
        MarkerTypeID:
          description: >-
            Marker Type Reference Type. Possible values - Biostratigraphy,
            Lithostratigraphy, seismic, depth of well, sequence, flow unit
          pattern: ^[\w\-\.]+:reference-data\-\-MarkerType:[\w\-\.\:\%]+:[0-9]*$
          title: Markertypeid
          type: string
        Missing:
          title: Missing
          type: string
        NegativeVerticalDelta:
          description: >-
            The distance vertically below the Marker position that marks the
            limit of the high confidence range for the Marker pick.
          title: Negativeverticaldelta
          type: number
        PositiveVerticalDelta:
          description: >-
            The distance vertically above the Marker position that marks the
            limit of the high confidence range for the Marker pick.
          title: Positiveverticaldelta
          type: number
        SurfaceDipAngle:
          description: Dip angle for the Wellbore Marker.
          title: Surfacedipangle
          type: number
        SurfaceDipAzimuth:
          description: Dip azimuth for the Wellbore Marker.
          title: Surfacedipazimuth
          type: number
      title: Marker110
      type: object
    MetaItem:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        kind:
          allOf:
            - $ref: '#/components/schemas/Kind'
          description: The kind of reference, unit, measurement, CRS or azimuth reference.
          title: Reference Kind
        name:
          description: The name of the CRS or the symbol/name of the unit
          title: Name or Symbol
          type: string
        persistableReference:
          description: >-
            The persistable reference string uniquely identifying the CRS or
            Unit
          title: Persistable Reference
          type: string
        propertyNames:
          description: >-
            The list of property names, to which this meta data item provides
            Unit/CRS context to. Data structures, which come in a single frame
            of reference, can register the property name, others require a full
            path like "data.structureA.propertyB" to define a unique context.
          items:
            type: string
          title: Attribute Names
          type: array
        propertyValues:
          description: >-
            The list of property values, to which this meta data item provides
            Unit/CRS context to. Typically a unit symbol is a value to a data
            structure; this symbol is then registered in this propertyValues
            array and the persistableReference provides the absolute reference.
          items:
            type: string
          title: Attribute Names
          type: array
        uncertainty:
          description: The uncertainty of the values measured given the unit or CRS unit.
          title: Uncertainty
          type: number
      required:
        - kind
        - persistableReference
      title: MetaItem
      type: object
    OtherRelevantDataCountry:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      pattern: ^[A-Z]{2}$
      title: OtherRelevantDataCountry
      type: string
    Owner:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      pattern: >-
        ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
      title: Owner
      type: string
    Parent:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.\:\%]+:[0-9]+$
      title: Parent
      type: string
    PlssLocation:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        aliquotPart:
          description: >-
            A terse, hierarchical reference to a piece of land, in which
            successive subdivisions of some larger area.
          title: Aliquot Part
          type: string
        range:
          description: >-
            Range, also known as Rng, R; a measure of the distance east or west
            from a referenced principal meridian, in units of six miles.
          title: Range
          type: string
        section:
          description: Section number (between 1 and 36)
          title: Section Number
          type: integer
        township:
          description: >-
            Township, also known as T or Twp; (1) Synonym for survey township,
            i.e., a square parcel of land of 36 square miles, or (2) A measure
            of the distance north or south from a referenced baseline, in units
            of six miles
          title: Township
          type: string
      required:
        - range
        - section
        - township
      title: PlssLocation
      type: object
    Point:
      properties:
        latitude:
          title: Latitude
          type: number
        longitude:
          title: Longitude
          type: number
      title: Point
      type: object
    Point3dNonGeoJson:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        coordinates:
          description: >-
            3-dimensional point; the first coordinate is typically pointing east
            (easting or longitude), the second coordinate typically points north
            (northing or latitude). The third coordinate is an elevation
            (upwards positive, downwards negative). The point's CRS is given by
            the container.
          items:
            type: number
          title: 3D Point
          type: array
        crsKey:
          description: >-
            The 'crsKey', which can be looked up in the 'frameOfReference.crs'
            for further details.
          title: CRS Key
          type: string
        unitKey:
          description: >-
            The 'unitKey' for the 3rd coordinate, which can be looked up in the
            'frameOfReference.unit' for further details.
          title: Unit Key
          type: string
      required:
        - coordinates
        - crsKey
        - unitKey
      title: Point3dNonGeoJson
      type: object
    Polygon:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        coordinates:
          items:
            items:
              items:
                type: number
              type: array
            type: array
          title: Coordinates
          type: array
        type:
          $ref: '#/components/schemas/Type_8'
      required:
        - coordinates
        - type
      title: Polygon
      type: object
    QueryRequest:
      properties:
        kind:
          title: Kind
          type: string
        limit:
          title: Limit
          type: integer
        offset:
          title: Offset
          type: integer
        query:
          title: Query
          type: string
        queryAsOwner:
          title: Queryasowner
          type: boolean
        returnedFields:
          items:
            type: string
          title: Returnedfields
          type: array
        sort:
          $ref: '#/components/schemas/SortQuery'
        spatialFilter:
          $ref: '#/components/schemas/SpatialFilter'
      required:
        - kind
      title: QueryRequest
      type: object
    QueryResponse:
      properties:
        aggregations:
          items:
            $ref: '#/components/schemas/AggregationResponse'
          title: Aggregations
          type: array
        results:
          items:
            type: object
          title: Results
          type: array
        totalCount:
          title: Totalcount
          type: integer
      title: QueryResponse
      type: object
    RecordVersions:
      properties:
        recordId:
          title: Recordid
          type: string
        versions:
          items:
            type: integer
          title: Versions
          type: array
      title: RecordVersions
      type: object
    ReferenceType:
      description: An enumeration.
      enum:
        - Date
        - Date Time
        - Measured Depth
        - Core depth
        - True Vertical Depth
        - True Vertical Depth Sub Sea
        - One-Way Time
        - Two-Way Time
      title: ReferenceType
    ResourceHostRegionID:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
      title: ResourceHostRegionID
      type: string
    SearchQuery:
      properties:
        query:
          title: Query
          type: string
      title: SearchQuery
      type: object
    SearchQueryRequest:
      properties:
        cursor:
          title: Cursor
          type: string
        limit:
          title: Limit
          type: integer
        offset:
          title: Offset
          type: integer
        query:
          title: Query
          type: string
      title: SearchQueryRequest
      type: object
    Session:
      description: 'model of session exposed  '
      example:
        createdTime: '2021-03-07T15:49:01+00:00'
        expiry: '2021-03-08T15:49:01+00:00'
        fromVersion: 25686567113
        id: xx1234
        meta:
          creatorCustom: someValue
        mode: update
        recordId: opendes:log:991234
        state: open
        updatedTime: '2021-03-07T15:58:01+00:00'
      properties:
        createdTime:
          description: creation date
          format: date-time
          title: Createdtime
          type: string
        expiry:
          description: >-
            If the session is not committed before this dead line, session is
            automatically abandoned.
          format: date-time
          title: Expiry
          type: string
        fromVersion:
          description: record version on top of which the session is based.
          title: Fromversion
          type: integer
        id:
          description: identifier of the current session.
          title: Id
          type: string
        meta:
          additionalProperties:
            type: string
          description: >-
            miscellaneous metadata associated to the session. The session
            creator can set some data here.
          title: Meta
          type: object
        mode:
          allOf:
            - $ref: '#/components/schemas/SessionUpdateMode'
          description: >-
            merge mode at commit. If 'update', existing data will be merged with
            the data sent during the session. If 'overrride', existing data will
            be ignored, the final result will only contains data sent within the
            session.
        recordId:
          description: identifier of the record of which the session is attached to.
          title: Recordid
          type: string
        state:
          $ref: '#/components/schemas/SessionState'
        updatedTime:
          description: updated date
          format: date-time
          title: Updatedtime
          type: string
      required:
        - id
        - recordId
        - fromVersion
        - mode
        - expiry
        - createdTime
        - updatedTime
        - state
      title: Session
      type: object
    SessionState:
      description: An enumeration.
      enum:
        - open
        - committing
        - abandoning
        - committed
        - abandoned
      title: SessionState
      type: string
    SessionUpdateMode:
      description: An enumeration.
      enum:
        - overwrite
        - update
      title: SessionUpdateMode
      type: string
    Shape:
      description: An enumeration.
      enum:
        - build and hold
        - deviated
        - double kickoff
        - horizontal
        - S-shaped
        - vertical
        - unknown
      title: Shape
    SimpleElevationReference:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        elevationFromMsl:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The elevation above mean sea level (MSL), at which the vertical
            origin is 0.0. The 'unitKey' is further defined in
            'frameOfReference.units'.
          title: Elevation from MSL
        name:
          description: The name of the Elevation Reference.
          title: Elevation Reference Name
          type: string
      required:
        - elevationFromMsl
      title: SimpleElevationReference
      type: object
    SortQuery:
      properties:
        field:
          items:
            type: string
          title: Field
          type: array
        order:
          enum:
            - ASC
            - DESC
          title: Order
          type: string
      title: SortQuery
      type: object
    SpatialFilter:
      properties:
        byBoundingBox:
          $ref: '#/components/schemas/ByBoundingBox'
        byDistance:
          $ref: '#/components/schemas/ByDistance'
        byGeoPolygon:
          $ref: '#/components/schemas/ByGeoPolygon'
        field:
          title: Field
          type: string
      title: SpatialFilter
      type: object
    StatsColumn:
      properties:
        25%:
          title: 25%
          type: number
        50%:
          title: 50%
          type: number
        75%:
          title: 75%
          type: number
        count:
          description: Count number of non-NA/null observations
          title: Count
          type: integer
        max:
          description: Maximum of the values in the object
          title: Max
          type: number
        mean:
          description: Mean of the values
          title: Mean
          type: number
        min:
          description: Minimum of the values in the object
          title: Min
          type: number
        std:
          description: Standard deviation of the observations
          title: Std
          type: number
      required:
        - count
        - mean
        - std
        - min
        - 25%
        - 50%
        - 75%
        - max
      title: StatsColumn
      type: object
    StorageAcl:
      properties:
        owners:
          items:
            type: string
          title: Owners
          type: array
        viewers:
          items:
            type: string
          title: Viewers
          type: array
      required:
        - viewers
        - owners
      title: StorageAcl
      type: object
    TagDictionary:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties: {}
      title: TagDictionary
      type: object
    ToOneRelationship:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        confidence:
          description: >-
            The confidence of the relationship. If the property is absent a
            well-known relation is implied.
          title: Relationship Confidence
          type: number
        id:
          description: >-
            The id of the related object in the Data Ecosystem. If set, the id
            has priority over the natural key in the name property.
          title: Related Object Id
          type: string
        name:
          description: >-
            The name or natural key of the related object. This property is
            required if the target object id could not (yet) be identified.
          title: Related Object Name
          type: string
        version:
          description: >-
            The version number of the related entity. If no version number is
            specified, the last version is implied.
          title: Entity Version Number
          type: number
      title: ToOneRelationship
      type: object
    Type1:
      description: An enumeration.
      enum:
        - AnyCrsFeature
      title: Type1
    Type10:
      description: An enumeration.
      enum:
        - Feature
      title: Type10
    Type11:
      description: An enumeration.
      enum:
        - Point
      title: Type11
    Type12:
      description: An enumeration.
      enum:
        - LineString
      title: Type12
    Type13:
      description: An enumeration.
      enum:
        - Polygon
      title: Type13
    Type14:
      description: An enumeration.
      enum:
        - MultiPoint
      title: Type14
    Type15:
      description: An enumeration.
      enum:
        - MultiLineString
      title: Type15
    Type16:
      description: An enumeration.
      enum:
        - MultiPolygon
      title: Type16
    Type17:
      description: An enumeration.
      enum:
        - GeometryCollection
      title: Type17
    Type2:
      description: An enumeration.
      enum:
        - AnyCrsPoint
      title: Type2
    Type3:
      description: An enumeration.
      enum:
        - AnyCrsLineString
      title: Type3
    Type4:
      description: An enumeration.
      enum:
        - AnyCrsPolygon
      title: Type4
    Type5:
      description: An enumeration.
      enum:
        - AnyCrsMultiPoint
      title: Type5
    Type6:
      description: An enumeration.
      enum:
        - AnyCrsMultiLineString
      title: Type6
    Type7:
      description: An enumeration.
      enum:
        - AnyCrsMultiPolygon
      title: Type7
    Type8:
      description: An enumeration.
      enum:
        - AnyCrsGeometryCollection
      title: Type8
    Type9:
      description: An enumeration.
      enum:
        - FeatureCollection
      title: Type9
    Type_1:
      description: An enumeration.
      enum:
        - Feature
      title: Type_1
    Type_2:
      description: An enumeration.
      enum:
        - FeatureCollection
      title: Type_2
    Type_3:
      description: An enumeration.
      enum:
        - LineString
      title: Type_3
    Type_4:
      description: An enumeration.
      enum:
        - MultiLineString
      title: Type_4
    Type_5:
      description: An enumeration.
      enum:
        - MultiPoint
      title: Type_5
    Type_6:
      description: An enumeration.
      enum:
        - MultiPolygon
      title: Type_6
    Type_7:
      description: An enumeration.
      enum:
        - Point
      title: Type_7
    Type_8:
      description: An enumeration.
      enum:
        - Polygon
      title: Type_8
    UpdateSessionState:
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/UpdateSessionStateValue'
          description: '`commit` or `abandon` a session'
      required:
        - state
      title: UpdateSessionState
      type: object
    UpdateSessionStateValue:
      description: An enumeration.
      enum:
        - commit
        - abandon
      title: UpdateSessionStateValue
      type: string
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
    ValueWithUnit:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        unitKey:
          description: >-
            Unit for value of the corresponding attribute for the domain object
            in question. The key can be looked up in the
            'frameOfReference.units' for further details.
          title: Unit Key
          type: string
        value:
          description: >-
            Value of the corresponding attribute for the domain object in
            question.
          title: Value
          type: number
      required:
        - unitKey
        - value
      title: ValueWithUnit
      type: object
    VersionDetailsResponse:
      properties:
        buildNumber:
          title: Buildnumber
          type: string
        details:
          additionalProperties:
            type: string
          title: Details
          type: object
        service:
          title: Service
          type: string
        version:
          title: Version
          type: string
      title: VersionDetailsResponse
      type: object
    VerticalMeasurement:
      additionalProperties: false
      description: >-
        A location along a wellbore, _usually_ associated with some aspect of
        the drilling of the wellbore, but not with any intersecting _subsurface_
        natural surfaces.
      properties:
        EffectiveDateTime:
          description: >-
            The date and time at which a vertical measurement instance becomes
            effective.
          format: date-time
          title: Effectivedatetime
          type: string
        TerminationDateTime:
          description: >-
            The date and time at which a vertical measurement instance is no
            longer in effect.
          format: date-time
          title: Terminationdatetime
          type: string
        VerticalCRSID:
          description: >-
            A vertical coordinate reference system defines the origin for height
            or depth values. It is expected that either VerticalCRSID or
            VerticalReferenceID reference is provided in a given vertical
            measurement array object, but not both.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalcrsid
          type: string
        VerticalMeasurement:
          description: >-
            The value of the elevation or depth. Depth is positive downwards
            from a vertical reference or geodetic datum along a path, which can
            be vertical; elevation is positive upwards from a geodetic datum
            along a vertical path. Either can be negative.
          title: Verticalmeasurement
          type: number
        VerticalMeasurementDescription:
          description: Text which describes a vertical measurement in detail.
          title: Verticalmeasurementdescription
          type: string
        VerticalMeasurementID:
          description: >-
            The ID for a distinct vertical measurement within the Wellbore
            VerticalMeasurements array so that it may be referenced by other
            vertical measurements if necessary.
          title: Verticalmeasurementid
          type: string
        VerticalMeasurementPathID:
          description: Specifies Measured Depth, True Vertical Depth, or Elevation.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-VerticalMeasurementPath:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementpathid
          type: string
        VerticalMeasurementSourceID:
          description: Specifies Driller vs Logger.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-VerticalMeasurementSource:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementsourceid
          type: string
        VerticalMeasurementTypeID:
          description: >-
            Specifies the type of vertical measurement (TD, Plugback, Kickoff,
            Drill Floor, Rotary Table...).
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-VerticalMeasurementType:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementtypeid
          type: string
        VerticalMeasurementUnitOfMeasureID:
          description: >-
            The unit of measure for the vertical measurement. If a unit of
            measure and a vertical CRS are provided, the unit of measure
            provided is taken over the unit of measure from the CRS.
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          title: Verticalmeasurementunitofmeasureid
          type: string
        VerticalReferenceID:
          description: >-
            The reference point from which the relative vertical measurement is
            made. This is only populated if the measurement has no VerticalCRSID
            specified. The value entered must be the VerticalMeasurementID for
            another vertical measurement array element in this resource or its
            parent facility, and as a chain of measurements, they must resolve
            ultimately to a Vertical CRS. It is expected that a VerticalCRSID or
            a VerticalReferenceID is provided in a given vertical measurement
            array object, but not both.
          title: Verticalreferenceid
          type: string
        WellboreTVDTrajectoryID:
          description: >-
            Specifies what directional survey or wellpath was used to calculate
            the TVD.
          pattern: >-
            ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+:[0-9]*$
          title: Wellboretvdtrajectoryid
          type: string
      title: VerticalMeasurement
      type: object
    Viewer:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      pattern: >-
        ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
      title: Viewer
      type: string
    Well:
      additionalProperties: false
      description: The origin of a set of wellbores.
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          $ref: '#/components/schemas/WellData'
        id:
          description: >-
            Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: namespace:master-data--Well:6c60ceb0-3521-57b7-9bd8-e1d7c9f66230
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+$
          title: Entity ID
          type: string
        kind:
          description: >-
            The schema identification for the OSDU resource object following the
            pattern
            {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning,
            https://semver.org/.
          example: osdu:wks:master-data--Well:1.0.0
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          title: Entity Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalTags100'
          description: >-
            The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
          title: Legal Tags
        meta:
          description: >-
            The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
          items: {}
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        version:
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
          title: Version Number
          type: integer
      required:
        - kind
        - acl
        - legal
      title: Well
      type: object
    WellBoreData:
      additionalProperties: false
      description: >-
        Common resources to be injected at root 'data' level for every entity,
        which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
      properties:
        CurrentOperatorID:
          description: >-
            The current operator organization ID; the organization ID may also
            be found in the FacilityOperatorOrganisationID of the
            FacilityOperator array providing the actual dates.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Current Operator ID
          type: string
        DataSourceOrganisationID:
          description: The main source of the header information.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Datasourceorganisationid
          type: string
        DefaultVerticalMeasurementID:
          description: >-
            The default datum reference point, or zero depth point, used to
            determine other points vertically in a wellbore.  References an
            entry in the Vertical Measurements array of this wellbore.
          title: Defaultverticalmeasurementid
          type: string
        DefinitiveTrajectoryID:
          description: >-
            SRN of Wellbore Trajectory which is considered the authoritative or
            preferred version.
          pattern: >-
            ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+:[0-9]*$
          title: Definitivetrajectoryid
          type: string
        DrillingReasons:
          description: The history of drilling reasons of the wellbore.
          items:
            $ref: '#/components/schemas/AbstractWellboreDrillingReason100'
          title: Drillingreasons
          type: array
        ExistenceKind:
          description: >-
            Where does this data resource sit in the cradle-to-grave span of its
            existence?
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          title: Existence Kind
          type: string
        ExtensionProperties:
          title: Extensionproperties
          type: object
        FacilityEvents:
          description: A list of key facility events.
          items:
            $ref: '#/components/schemas/AbstractFacilityEvent100'
          title: Facilityevents
          type: array
        FacilityID:
          description: A system-specified unique identifier of a Facility.
          title: Facilityid
          type: string
        FacilityName:
          description: Name of the Facility.
          title: Facilityname
          type: string
        FacilityNameAliases:
          description: >-
            Alternative names, including historical, by which this facility
            is/has been known.
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          title: Facilitynamealiases
          type: array
        FacilityOperators:
          description: The history of operator organizations of the facility.
          items:
            $ref: '#/components/schemas/AbstractFacilityOperator100'
          title: Facilityoperators
          type: array
        FacilitySpecifications:
          description: >-
            facilitySpecification maintains the specification like slot name,
            wellbore drilling permit number, rig name etc.
          items:
            $ref: '#/components/schemas/AbstractFacilitySpecification100'
          title: Facilityspecifications
          type: array
        FacilityStates:
          description: The history of life cycle states the facility has been through.
          items:
            $ref: '#/components/schemas/AbstractFacilityState100'
          title: Facilitystates
          type: array
        FacilityTypeID:
          description: >-
            The definition of a kind of capability to perform a business
            function or a service.
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityType:[\w\-\.\:\%]+:[0-9]*$
          title: Facilitytypeid
          type: string
        GeoContexts:
          description: >-
            List of geographic entities which provide context to the master
            data. This may include multiple types or multiple values of the same
            type.
          items: {}
          title: Geocontexts
          type: array
        GeographicBottomHoleLocation:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            The bottom hole location of the wellbore denoted by a specified
            geographic horizontal coordinate reference system (Horizontal CRS),
            such as WGS84, NAD27, or ED50. If both GeographicBottomHoleLocation
            and ProjectedBottomHoleLocation properties are populated on this
            wellbore, they must identify the same point, just in different CRSs.
          title: Geographicbottomholelocation
        InitialOperatorID:
          description: >-
            A initial operator organization ID; the organization ID may also be
            found in the FacilityOperatorOrganisationID of the FacilityOperator
            array providing the actual dates.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Initial Operator ID
          type: string
        KickOffWellbore:
          description: >-
            This is a pointer to the parent wellbore. The wellbore that starts
            from top has no parent.
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          title: Kickoffwellbore
          type: string
        NameAliases:
          description: >-
            Alternative names, including historical, by which this master data
            is/has been known (it should include all the identifiers).
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          title: Namealiases
          type: array
        OperatingEnvironmentID:
          description: >-
            Identifies the Facility's general location as being onshore vs.
            offshore.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-OperatingEnvironment:[\w\-\.\:\%]+:[0-9]*$
          title: Operatingenvironmentid
          type: string
        PrimaryMaterialID:
          description: The primary material injected/produced from the wellbore.
          pattern: ^[\w\-\.]+:reference-data\-\-MaterialType:[\w\-\.\:\%]+:[0-9]*$
          title: Primarymaterialid
          type: string
        ProjectedBottomHoleLocation:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            The bottom hole location of the wellbore denoted by a projected
            horizontal coordinate reference system (Horizontal CRS), such a UTM
            zone. 'Projected' in this property does not mean 'planned' or
            'projected-to-bit'. If both GeographicBottomHoleLocation and
            ProjectedBottomHoleLocation properties are populated on this
            wellbore, they must identify the same point, just in different CRSs.
          title: Projectedbottomholelocation
        ResourceCurationStatus:
          description: Describes the current Curation status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Curation Status
          type: string
        ResourceHomeRegionID:
          description: >-
            The name of the home [cloud environment] region for this OSDU
            resource object.
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Home Region ID
          type: string
        ResourceHostRegionIDs:
          description: >-
            The name of the host [cloud environment] region(s) for this OSDU
            resource object.
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          title: Resource Host Region ID
          type: array
        ResourceLifecycleStatus:
          description: Describes the current Resource Lifecycle status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Lifecycle Status
          type: string
        ResourceSecurityClassification:
          description: Classifies the security level of the resource.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Security Classification
          type: string
        SequenceNumber:
          description: A number that indicates the order in which wellbores were drilled.
          title: Sequencenumber
          type: integer
        Source:
          description: >-
            The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or
            individual. For informational purposes only, the list of sources is
            not governed.
          title: Data Source
          type: string
        SpatialLocation:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            The spatial location information such as coordinates, CRS
            information (left empty when not appropriate).
          title: Spatiallocation
        TargetFormation:
          description: >-
            The Formation of interest for which the Wellbore is drilled to
            interact with. The Wellbore may terminate in a lower formation if
            the requirement is to drill through the entirety of the target
            formation, therefore this is not necessarily the Formation at TD.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-GeologicalFormation:[\w\-\.\:\%]+:[0-9]*$
          title: Targetformation
          type: string
        TrajectoryTypeID:
          description: >-
            Describes the predominant shapes the wellbore path can follow if
            deviated from vertical. Sample Values: Horizontal, Vertical,
            Directional.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-WellboreTrajectoryType:[\w\-\.\:\%]+:[0-9]*$
          title: Trajectorytypeid
          type: string
        VersionCreationReason:
          description: >-
            This describes the reason that caused the creation of a new version
            of this master data.
          title: Versioncreationreason
          type: string
        VerticalMeasurements:
          description: >-
            List of all depths and elevations pertaining to the wellbore, like,
            plug back measured depth, total measured depth, KB elevation
          items:
            $ref: '#/components/schemas/VerticalMeasurement'
          title: Verticalmeasurements
          type: array
        WellID:
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+:[0-9]*$
          title: Wellid
          type: string
      title: WellBoreData
      type: object
    WellData:
      additionalProperties: false
      description: >-
        Common resources to be injected at root 'data' level for every entity,
        which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
      properties:
        CurrentOperatorID:
          description: >-
            The current operator organization ID; the organization ID may also
            be found in the FacilityOperatorOrganisationID of the
            FacilityOperator array providing the actual dates.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Current Operator ID
          type: string
        DataSourceOrganisationID:
          description: The main source of the header information.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Datasourceorganisationid
          type: string
        DefaultVerticalCRSID:
          description: >-
            The default vertical coordinate reference system used in the
            vertical measurements for a well or wellbore if absent from input
            vertical measurements and there is no other recourse for obtaining a
            valid CRS.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          title: Defaultverticalcrsid
          type: string
        DefaultVerticalMeasurementID:
          description: >-
            The default datum reference point, or zero depth point, used to
            determine other points vertically in a well.  References an entry in
            the VerticalMeasurements array.
          title: Defaultverticalmeasurementid
          type: string
        ExistenceKind:
          description: >-
            Where does this data resource sit in the cradle-to-grave span of its
            existence?
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          title: Existence Kind
          type: string
        ExtensionProperties:
          title: Extensionproperties
          type: object
        FacilityEvents:
          description: A list of key facility events.
          items:
            $ref: '#/components/schemas/AbstractFacilityEvent100'
          title: Facilityevents
          type: array
        FacilityID:
          description: A system-specified unique identifier of a Facility.
          title: Facilityid
          type: string
        FacilityName:
          description: Name of the Facility.
          title: Facilityname
          type: string
        FacilityNameAliases:
          description: >-
            Alternative names, including historical, by which this facility
            is/has been known.
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          title: Facilitynamealiases
          type: array
        FacilityOperators:
          description: The history of operator organizations of the facility.
          items:
            $ref: '#/components/schemas/AbstractFacilityOperator100'
          title: Facilityoperators
          type: array
        FacilitySpecifications:
          description: >-
            facilitySpecification maintains the specification like slot name,
            wellbore drilling permit number, rig name etc.
          items:
            $ref: '#/components/schemas/AbstractFacilitySpecification100'
          title: Facilityspecifications
          type: array
        FacilityStates:
          description: The history of life cycle states the facility has been through.
          items:
            $ref: '#/components/schemas/AbstractFacilityState100'
          title: Facilitystates
          type: array
        FacilityTypeID:
          description: >-
            The definition of a kind of capability to perform a business
            function or a service.
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityType:[\w\-\.\:\%]+:[0-9]*$
          title: Facilitytypeid
          type: string
        GeoContexts:
          description: >-
            List of geographic entities which provide context to the master
            data. This may include multiple types or multiple values of the same
            type.
          items: {}
          title: Geocontexts
          type: array
        InitialOperatorID:
          description: >-
            A initial operator organization ID; the organization ID may also be
            found in the FacilityOperatorOrganisationID of the FacilityOperator
            array providing the actual dates.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Initial Operator ID
          type: string
        InterestTypeID:
          description: >-
            Pre-defined reasons for interest in the well or information about
            the well.
          pattern: ^[\w\-\.]+:reference-data\-\-WellInterestType:[\w\-\.\:\%]+:[0-9]*$
          title: Interesttypeid
          type: string
        NameAliases:
          description: >-
            Alternative names, including historical, by which this master data
            is/has been known (it should include all the identifiers).
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          title: Namealiases
          type: array
        OperatingEnvironmentID:
          description: >-
            Identifies the Facility's general location as being onshore vs.
            offshore.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-OperatingEnvironment:[\w\-\.\:\%]+:[0-9]*$
          title: Operatingenvironmentid
          type: string
        ResourceCurationStatus:
          description: Describes the current Curation status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Curation Status
          type: string
        ResourceHomeRegionID:
          description: >-
            The name of the home [cloud environment] region for this OSDU
            resource object.
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Home Region ID
          type: string
        ResourceHostRegionIDs:
          description: >-
            The name of the host [cloud environment] region(s) for this OSDU
            resource object.
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          title: Resource Host Region ID
          type: array
        ResourceLifecycleStatus:
          description: Describes the current Resource Lifecycle status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Lifecycle Status
          type: string
        ResourceSecurityClassification:
          description: Classifies the security level of the resource.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Security Classification
          type: string
        Source:
          description: >-
            The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or
            individual. For informational purposes only, the list of sources is
            not governed.
          title: Data Source
          type: string
        SpatialLocation:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            The spatial location information such as coordinates, CRS
            information (left empty when not appropriate).
          title: Spatiallocation
        VersionCreationReason:
          description: >-
            This describes the reason that caused the creation of a new version
            of this master data.
          title: Versioncreationreason
          type: string
        VerticalMeasurements:
          description: >-
            List of all depths and elevations pertaining to the well, like,
            water depth, mud line elevation, etc.
          items:
            $ref: '#/components/schemas/VerticalMeasurement'
          title: Verticalmeasurements
          type: array
      title: WellData
      type: object
    WellLocationType:
      description: An enumeration.
      enum:
        - Onshore
        - Offshore
        - unknown
      title: WellLocationType
    WellLog110:
      additionalProperties: false
      description: >-
        A well log is a data type that correlates a particular measurement or
        multiple measurements in a wellbore against depth and/or time within
        that wellbore. When plotted visually, well logs are typically long line
        graphs (called "curves") but may sometimes be discrete points or
        intervals. This schema object is intended for digital well logs, not
        raster log files or raster calibration files, but may be used for the
        latter in the absence of a defined OSDU schema for these use cases.
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          $ref: '#/components/schemas/WellLogData110'
        id:
          description: >-
            Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: >-
            namespace:work-product-component--WellLog:c2c79f1c-90ca-5c92-b8df-04dbe438f414
          pattern: ^[\w\-\.]+:work-product-component\-\-WellLog:[\w\-\.\:\%]+$
          title: Entity ID
          type: string
        kind:
          description: >-
            The schema identification for the OSDU resource object following the
            pattern
            {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning,
            https://semver.org/.
          example: osdu:wks:work-product-component--WellLog:1.1.0
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          title: Entity Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalTags100'
          description: >-
            The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
          title: Legal Tags
        meta:
          description: >-
            The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
          items: {}
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        version:
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
          title: Version Number
          type: integer
      required:
        - kind
        - acl
        - legal
      title: WellLog110
      type: object
    WellLogData110:
      additionalProperties: false
      description: >-
        Common resources to be injected at root 'data' level for every entity,
        which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
      properties:
        ActivityType:
          description: General method or circumstance of logging - MWD, completion, ...
          title: Activitytype
          type: string
        Artefacts:
          description: >-
            An array of Artefacts - each artefact has a Role, Resource tuple. An
            artefact is distinct from the file, in the sense certain valuable
            information is generated during loading process (Artefact generation
            process). Examples include retrieving location data, performing an
            OCR which may result in the generation of artefacts which need to be
            preserved distinctly
          items:
            $ref: '#/components/schemas/Artefact'
          title: Artefacts
          type: array
        AuthorIDs:
          description: >-
            Array of Authors' names of the work product component.  Could be a
            person or company entity.
          items:
            type: string
          title: Authorids
          type: array
        BottomMeasuredDepth:
          description: >-
            Informational Bottom Measured Depth of the Well Log. Always populate
            SamplingStart and SamplingStop, which represents the real sampling
            of the WellLog, including  non-depth sampling.
          title: Bottom Measured Depth
          type: number
        BusinessActivities:
          description: >-
            Array of business processes/workflows that the work product
            component has been through (ex. well planning, exploration).
          items:
            type: string
          title: Businessactivities
          type: array
        CandidateReferenceCurveIDs:
          description: >-
            Secondary index curves, which are alternative candidates to act as
            ReferenceCurveID. Generally not populated, except in the cases where
            multiple reference curves are present, e.g. measured depth and time.
          items:
            type: string
          title: Candidatereferencecurveids
          type: array
        CompanyID:
          description: >-
            The relationship to company who engaged the service company
            (ServiceCompanyID) to perform the logging.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Company ID
          type: string
        CreationDateTime:
          description: >-
            Date that a resource (work  product component here) is formed
            outside of OSDU before loading (e.g. publication date).
          format: date-time
          title: Creationdatetime
          type: string
        Curves:
          items:
            $ref: '#/components/schemas/Curve110'
          title: Curves
          type: array
        Datasets:
          items:
            $ref: '#/components/schemas/Dataset'
          title: Datasets
          type: array
        Description:
          description: >-
            Description.  Summary of the work product component.  Not the same
            as Remark which captures thoughts of creator about the wpc.
          title: Description
          type: string
        DrillingFluidProperty:
          description: Type of mud at time of logging (oil, water based,...)
          title: Drillingfluidproperty
          type: string
        ExistenceKind:
          description: >-
            Where does this data resource sit in the cradle-to-grave span of its
            existence?
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          title: Existence Kind
          type: string
        ExtensionProperties:
          title: Extensionproperties
          type: object
        FrameIdentifier:
          description: >-
            For multi-frame or multi-section files, this identifier defines the
            source frame in the file. If the identifier is an index number the
            index starts with zero and is converted to a string for this
            property.
          example: 0
          title: Frame Identifier
          type: string
        GeoContexts:
          description: >-
            List of geographic entities which provide context to the WPC.  This
            may include multiple types or multiple values of the same type.
          items: {}
          title: Geocontexts
          type: array
        HoleTypeLogging:
          description: >-
            Description of the hole related type of logging - POSSIBLE VALUE :
            OpenHole / CasedHole / CementedHole
          pattern: ^OPENHOLE|CASEDHOLE|CEMENTEDHOLE$
          title: Holetypelogging
          type: string
        IsDiscoverable:
          description: >-
            A flag that indicates if the work product component is searchable,
            which means covered in the search index.
          title: Isdiscoverable
          type: boolean
        IsExtendedLoad:
          description: >-
            A flag that indicates if the work product component is undergoing an
            extended load.  It reflects the fact that the work product component
            is in an early stage and may be updated before finalization.
          title: Isextendedload
          type: boolean
        IsRegular:
          description: >-
            Boolean property indicating the sampling mode of the
            ReferenceCurveID. True means all reference curve values are
            regularly spaced (see SamplingInterval); false means irregular or
            discrete sample spacing.
          title: Is Regular Flag
          type: boolean
        LineageAssertions:
          description: >-
            Defines relationships with other objects (any kind of Resource) upon
            which this work product component depends.  The assertion is
            directed only from the asserting WPC to ancestor objects, not
            children.  It should not be used to refer to files or artefacts
            within the WPC -- the association within the WPC is sufficient and
            Artefacts are actually children of the main WPC file. They should be
            recorded in the Data.Artefacts[] array.
          items:
            $ref: '#/components/schemas/LineageAssertion'
          title: Lineageassertions
          type: array
        LogActivity:
          description: >-
            Log Activity, used to describe the type of pass such as Calibration
            Pass - Main Pass - Repeated Pass
          title: Logactivity
          type: string
        LogRun:
          description: >-
            Log Run - describe the run of the log - can be a number, but may be
            also a alphanumeric description such as a version name
          title: Logrun
          type: string
        LogServiceDateInterval:
          allOf:
            - $ref: '#/components/schemas/LogServiceDateInterval'
          description: >-
            An interval built from two nested values : StartDate and EndDate. It
            applies to the whole log services and may apply to composite logs as
            [start of the first run job] and [end of the last run job]Log
            Service Date
          title: Logservicedateinterval
        LogSource:
          description: >-
            OSDU Native Log Source - will be updated for later releases - not to
            be used yet
          title: Logsource
          type: string
        LogVersion:
          description: Log Version
          title: Logversion
          type: string
        LoggingDirection:
          description: Specifies whether curves were collected downward or upward
          title: Loggingdirection
          type: string
        LoggingService:
          description: >-
            Logging Service - mainly a short concatenation of the names of the
            tools
          title: Loggingservice
          type: string
        Name:
          description: Name
          title: Name
          type: string
        PassNumber:
          description: >-
            Indicates if the Pass is the Main one (1) or a repeated one - and
            it's level repetition
          title: Passnumber
          type: integer
        ReferenceCurveID:
          description: >-
            The data.Curves[].CurveID, which holds the primary index (reference)
            values.
          example: MD
          title: Reference Curve ID
          type: string
        ResourceCurationStatus:
          description: Describes the current Curation status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Curation Status
          type: string
        ResourceHomeRegionID:
          description: >-
            The name of the home [cloud environment] region for this OSDU
            resource object.
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Home Region ID
          type: string
        ResourceHostRegionIDs:
          description: >-
            The name of the host [cloud environment] region(s) for this OSDU
            resource object.
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          title: Resource Host Region ID
          type: array
        ResourceLifecycleStatus:
          description: Describes the current Resource Lifecycle status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Lifecycle Status
          type: string
        ResourceSecurityClassification:
          description: Classifies the security level of the resource.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Security Classification
          type: string
        SamplingDomainTypeID:
          description: >-
            The sampling domain, e.g. measured depth, true vertical,
            travel-time, calendar-time.
          example: 'namespace:reference-data--WellLogSamplingDomainType:Depth:'
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-WellLogSamplingDomainType:[\w\-\.\:\%]+:[0-9]*$
          title: Sampling Domain Type ID
          type: string
        SamplingInterval:
          description: >-
            For regularly sampled curves this property holds the sampling
            interval. For non regular sampling rate this property is not set.
            The IsRegular flag indicates whether SamplingInterval is required.
          example: 0.0254
          title: Sampling Interval
          type: number
        SamplingStart:
          description: >-
            The start value/first value of the ReferenceCurveID, typically the
            start depth of the logging.
          example: 2500
          title: Sampling Start
          type: number
        SamplingStop:
          description: >-
            The stop value/last value of the ReferenceCurveID, typically the end
            depth of the logging.
          example: 7500
          title: Sampling Stop
          type: number
        SeismicReferenceElevation:
          allOf:
            - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: >-
            Populated only if the WellLog represents time-depth relationships or
            checkshots. It is expressed via the standard
            AbstractFacilityVerticalMeasurement. The following properties are
            expected to be present: VerticalMeasurementPathID (typically
            elevation), VerticalMeasurementTypeID as SeismicReferenceDatum,
            VerticalMeasurement holding the offset to either the VerticalCRSID
            or the chained VerticalReferenceID in the parent Wellbore.
          title: Seismicreferenceelevation
        ServiceCompanyID:
          description: >-
            The relationship to a Service Company, typically the producer or
            logging contractor.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Servicecompanyid
          type: string
        Source:
          description: >-
            The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or
            individual. For informational purposes only, the list of sources is
            not governed.
          title: Data Source
          type: string
        SpatialArea:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            A polygon boundary that reflects the locale of the content of the
            work product component (location of the subject matter).
          title: Spatialarea
        SpatialPoint:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            A centroid point that reflects the locale of the content of the work
            product component (location of the subject matter).
          title: Spatialpoint
        SubmitterName:
          description: >-
            Name of the person that first submitted the work product component
            to OSDU.
          title: Submittername
          type: string
        Tags:
          description: >-
            Array of key words to identify the work product, especially to help
            in search.
          items:
            type: string
          title: Tags
          type: array
        ToolStringDescription:
          description: >-
            Tool String Description - a long concatenation of the tools used for
            logging services such as GammaRay+NeutronPorosity
          title: Toolstringdescription
          type: string
        TopMeasuredDepth:
          description: >-
            Informational Top Measured Depth of the Well Log. Always populate
            SamplingStart and SamplingStop, which represents the real sampling
            of the WellLog, including  non-depth sampling.
          title: Top Measured Depth
          type: number
        VerticalMeasurement:
          allOf:
            - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: >-
            The vertical measurement reference for the log curves, which defines
            the vertical reference datum for the logged depths. Either
            VerticalMeasurement or VerticalMeasurementID are populated.
          title: Verticalmeasurement
        VerticalMeasurementID:
          description: >-
            DEPRECATED: Use data.VerticalMeasurement.VerticalReferenceID
            instead. References an entry in the Vertical Measurement array for
            the Wellbore identified by WellboreID, which defines the vertical
            reference datum for all curve measured depths. Either
            VerticalMeasurementID or VerticalMeasurement are populated.
          title: Verticalmeasurementid
          type: string
        WellLogTypeID:
          description: >-
            Well Log Type short Description such as Raw; Evaluated;
            Composite;....
          pattern: ^[\w\-\.]+:reference-data\-\-LogType:[\w\-\.\:\%]+:[0-9]*$
          title: Welllogtypeid
          type: string
        WellboreID:
          description: The Wellbore where the Well Log Work Product Component was recorded
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          title: Wellboreid
          type: string
        ZeroTime:
          description: >-
            Optional time reference for (calender) time logs. The ISO date time
            string representing zero time. Not to be confused with seismic
            travel time zero. The latter is defined by SeismicReferenceDatum.
          format: date-time
          title: Zerotime
          type: string
      title: WellLogData110
      type: object
    WellPurpose:
      description: An enumeration.
      enum:
        - appraisal
        - appraisal -- confirmation appraisal
        - appraisal -- exploratory appraisal
        - exploration
        - exploration -- deeper-pool wildcat
        - exploration -- new-field wildcat
        - exploration -- new-pool wildcat
        - exploration -- outpost wildcat
        - exploration -- shallower-pool wildcat
        - development
        - development -- infill development
        - development -- injector
        - development -- producer
        - fluid storage
        - fluid storage -- gas storage
        - general srvc
        - general srvc -- borehole re-acquisition
        - general srvc -- observation
        - general srvc -- relief
        - general srvc -- research
        - general srvc -- research -- drill test
        - general srvc -- research -- strat test
        - general srvc -- waste disposal
        - mineral
        - unknown
      title: WellPurpose
    WellStatus:
      description: An enumeration.
      enum:
        - abandoned
        - active
        - active -- injecting
        - active -- producing
        - completed
        - drilling
        - partially plugged
        - permitted
        - plugged and abandoned
        - proposed
        - sold
        - suspended
        - temporarily abandoned
        - testing
        - tight
        - working over
        - unknown
      title: WellStatus
    WellType:
      description: An enumeration.
      enum:
        - bypass
        - initial
        - redrill
        - reentry
        - respud
        - sidetrack
        - unknown
      title: WellType
    Wellbore:
      additionalProperties: false
      description: >-
        A hole in the ground extending from a point at the earth's surface to
        the maximum point of penetration.
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          $ref: '#/components/schemas/WellBoreData'
        id:
          description: >-
            Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: namespace:master-data--Wellbore:c7c421a7-f496-5aef-8093-298c32bfdea9
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+$
          title: Entity ID
          type: string
        kind:
          description: >-
            The schema identification for the OSDU resource object following the
            pattern
            {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning,
            https://semver.org/.
          example: osdu:wks:master-data--Wellbore:1.0.0
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          title: Entity Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalTags100'
          description: >-
            The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
          title: Legal Tags
        meta:
          description: >-
            The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
          items: {}
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        version:
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
          title: Version Number
          type: integer
      required:
        - kind
        - acl
        - legal
      title: Wellbore
      type: object
    WellboreMarkerSet110:
      additionalProperties: false
      description: >-
        Wellbore Markers identify the depth in a wellbore, measured below a
        reference elevation, at which a person or an automated process
        identifies a noteworthy observation, which is usually a change in the
        rock that intersects that wellbore. Formation Marker data includes
        attributes/properties that put these depths in context. Formation
        Markers are sometimes known as picks or formation tops.
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          $ref: '#/components/schemas/WellboreMarkerSetData110'
        id:
          description: >-
            Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: >-
            namespace:work-product-component--WellboreMarkerSet:d5303b79-7904-5bfe-9c44-9a3ff41b6d6c
          pattern: >-
            ^[\w\-\.]+:work-product-component\-\-WellboreMarkerSet:[\w\-\.\:\%]+$
          title: Entity ID
          type: string
        kind:
          description: >-
            The schema identification for the OSDU resource object following the
            pattern
            {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning,
            https://semver.org/.
          example: osdu:wks:work-product-component--WellboreMarkerSet:1.1.0
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          title: Entity Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalTags100'
          description: >-
            The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
          title: Legal Tags
        meta:
          description: >-
            The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
          items: {}
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        version:
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
          title: Version Number
          type: integer
      required:
        - kind
        - acl
        - legal
      title: WellboreMarkerSet110
      type: object
    WellboreMarkerSetData110:
      additionalProperties: false
      description: >-
        Common resources to be injected at root 'data' level for every entity,
        which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
      properties:
        Artefacts:
          description: >-
            An array of Artefacts - each artefact has a Role, Resource tuple. An
            artefact is distinct from the file, in the sense certain valuable
            information is generated during loading process (Artefact generation
            process). Examples include retrieving location data, performing an
            OCR which may result in the generation of artefacts which need to be
            preserved distinctly
          items:
            $ref: '#/components/schemas/Artefact'
          title: Artefacts
          type: array
        AuthorIDs:
          description: >-
            Array of Authors' names of the work product component.  Could be a
            person or company entity.
          items:
            type: string
          title: Authorids
          type: array
        AvailableMarkerProperties:
          description: >-
            The array of MarkerProperty definitions describing the available
            properties for this instance of WellboreMarkerSet.
          items:
            $ref: '#/components/schemas/AvailableMarkerProperty'
          title: Available Marker Properties
          type: array
        BusinessActivities:
          description: >-
            Array of business processes/workflows that the work product
            component has been through (ex. well planning, exploration).
          items:
            type: string
          title: Businessactivities
          type: array
        CreationDateTime:
          description: >-
            Date that a resource (work  product component here) is formed
            outside of OSDU before loading (e.g. publication date).
          format: date-time
          title: Creationdatetime
          type: string
        Datasets:
          items:
            $ref: '#/components/schemas/Dataset'
          title: Datasets
          type: array
        Description:
          description: >-
            Description.  Summary of the work product component.  Not the same
            as Remark which captures thoughts of creator about the wpc.
          title: Description
          type: string
        ExistenceKind:
          description: >-
            Where does this data resource sit in the cradle-to-grave span of its
            existence?
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          title: Existence Kind
          type: string
        ExtensionProperties:
          title: Extensionproperties
          type: object
        GeoContexts:
          description: >-
            List of geographic entities which provide context to the WPC.  This
            may include multiple types or multiple values of the same type.
          items: {}
          title: Geocontexts
          type: array
        IsDiscoverable:
          description: >-
            A flag that indicates if the work product component is searchable,
            which means covered in the search index.
          title: Isdiscoverable
          type: boolean
        IsExtendedLoad:
          description: >-
            A flag that indicates if the work product component is undergoing an
            extended load.  It reflects the fact that the work product component
            is in an early stage and may be updated before finalization.
          title: Isextendedload
          type: boolean
        LineageAssertions:
          description: >-
            Defines relationships with other objects (any kind of Resource) upon
            which this work product component depends.  The assertion is
            directed only from the asserting WPC to ancestor objects, not
            children.  It should not be used to refer to files or artefacts
            within the WPC -- the association within the WPC is sufficient and
            Artefacts are actually children of the main WPC file. They should be
            recorded in the Data.Artefacts[] array.
          items:
            $ref: '#/components/schemas/LineageAssertion'
          title: Lineageassertions
          type: array
        Markers:
          description: The array of marker meta data in this set.
          items:
            $ref: '#/components/schemas/Marker110'
          title: Markers
          type: array
        Name:
          description: Name
          title: Name
          type: string
        ResourceCurationStatus:
          description: Describes the current Curation status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Curation Status
          type: string
        ResourceHomeRegionID:
          description: >-
            The name of the home [cloud environment] region for this OSDU
            resource object.
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Home Region ID
          type: string
        ResourceHostRegionIDs:
          description: >-
            The name of the host [cloud environment] region(s) for this OSDU
            resource object.
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          title: Resource Host Region ID
          type: array
        ResourceLifecycleStatus:
          description: Describes the current Resource Lifecycle status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Lifecycle Status
          type: string
        ResourceSecurityClassification:
          description: Classifies the security level of the resource.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Security Classification
          type: string
        Source:
          description: >-
            The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or
            individual. For informational purposes only, the list of sources is
            not governed.
          title: Data Source
          type: string
        SpatialArea:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            A polygon boundary that reflects the locale of the content of the
            work product component (location of the subject matter).
          title: Spatialarea
        SpatialPoint:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            A centroid point that reflects the locale of the content of the work
            product component (location of the subject matter).
          title: Spatialpoint
        SubmitterName:
          description: >-
            Name of the person that first submitted the work product component
            to OSDU.
          title: Submittername
          type: string
        Tags:
          description: >-
            Array of key words to identify the work product, especially to help
            in search.
          items:
            type: string
          title: Tags
          type: array
        VerticalMeasurement:
          allOf:
            - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: >-
            References an entry in the Vertical Measurement array for the
            Wellbore identified by WellboreID, which defines the vertical
            reference datum for all marker measured depths of the Wellbore
            Marker Set Markers array.
          title: Vertical Measurement
        WellboreID:
          description: The Wellbore ID, to which the markers in this set belong.
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          title: Wellbore ID
          type: string
      title: WellboreMarkerSetData110
      type: object
    WellborePurpose:
      description: An enumeration.
      enum:
        - appraisal
        - appraisal -- confirmation appraisal
        - appraisal -- exploratory appraisal
        - exploration
        - exploration -- deeper-pool wildcat
        - exploration -- new-field wildcat
        - exploration -- new-pool wildcat
        - exploration -- outpost wildcat
        - exploration -- shallower-pool wildcat
        - development
        - development -- infill development
        - development -- injector
        - development -- producer
        - fluid storage
        - fluid storage -- gas storage
        - general srvc
        - general srvc -- borehole re-acquisition
        - general srvc -- observation
        - general srvc -- relief
        - general srvc -- research
        - general srvc -- research -- drill test
        - general srvc -- research -- strat test
        - general srvc -- waste disposal
        - mineral
        - unknown
      title: WellborePurpose
    WellboreStatus:
      description: An enumeration.
      enum:
        - abandoned
        - active
        - active -- injecting
        - active -- producing
        - completed
        - drilling
        - partially plugged
        - permitted
        - plugged and abandoned
        - proposed
        - sold
        - suspended
        - temporarily abandoned
        - testing
        - tight
        - working over
        - unknown
      title: WellboreStatus
    WellboreTrajectory110:
      additionalProperties: false
      description: >-
        Work Product Component describing an individual instance of a wellbore
        trajectory data object. Also called a deviation survey, wellbore
        trajectory is data that is used to calculate the position and spatial
        uncertainty of a planned or actual wellbore in 2-dimensional and
        3-dimensional space.
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          $ref: '#/components/schemas/WellboreTrajectoryData110'
        id:
          description: >-
            Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: >-
            namespace:work-product-component--WellboreTrajectory:606f224a-ef1f-5690-9843-d26cd7e33e10
          pattern: >-
            ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+$
          title: Entity ID
          type: string
        kind:
          description: >-
            The schema identification for the OSDU resource object following the
            pattern
            {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning,
            https://semver.org/.
          example: osdu:wks:work-product-component--WellboreTrajectory:1.1.0
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          title: Entity Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/AbstractLegalTags100'
          description: >-
            The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
          title: Legal Tags
        meta:
          description: >-
            The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
          items: {}
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        version:
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
          title: Version Number
          type: integer
      required:
        - kind
        - acl
        - legal
      title: WellboreTrajectory110
      type: object
    WellboreTrajectoryData110:
      additionalProperties: false
      description: >-
        Common resources to be injected at root 'data' level for every entity,
        which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
      properties:
        AcquisitionDate:
          description: The date that the survey data was acquired on the field.
          format: date-time
          title: Effective Date
          type: string
        AcquisitionRemark:
          description: >-
            Remarks related to acquisition context which is not the same as
            Description which is a summary of the work-product-component.
          title: Survey Remark
          type: string
        ActiveIndicator:
          description: >-
            A flag indicating if the survey is currently active or valid within
            his lifecycle stage, not necessarily the definitive survey.
          title: Active Survey Indicator
          type: boolean
        AppliedOperations:
          description: >-
            The audit trail of operations applied to the station coordinates
            from the original state to the current state. The list may contain
            operations applied prior to ingestion as well as the operations
            applied to produce the Wgs84Coordinates. The text elements refer to
            ESRI style CRS and Transformation names, which may have to be
            translated to EPSG standard names.
          items:
            type: string
          title: Applied Operations
          type: array
        Artefacts:
          description: >-
            An array of Artefacts - each artefact has a Role, Resource tuple. An
            artefact is distinct from the file, in the sense certain valuable
            information is generated during loading process (Artefact generation
            process). Examples include retrieving location data, performing an
            OCR which may result in the generation of artefacts which need to be
            preserved distinctly
          items:
            $ref: '#/components/schemas/Artefact'
          title: Artefacts
          type: array
        AuthorIDs:
          description: >-
            Array of Authors' names of the work product component.  Could be a
            person or company entity.
          items:
            type: string
          title: Authorids
          type: array
        AvailableTrajectoryStationProperties:
          description: >-
            The array of TrajectoryStationProperty definitions describing the
            available properties for this instance of WellboreTrajectory.
          items:
            $ref: '#/components/schemas/AvailableTrajectoryStationProperty'
          title: Available Trajectory Station Properties
          type: array
        AzimuthReferenceType:
          description: >-
            The North reference of the trajectory used to define the azimuth
            angular measurement values. For example, True North, Grid North,
            Magnetic North.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-AzimuthReferenceType:[\w\-\.\:\%]+:[0-9]*$
          title: Azimuth Reference Type
          type: string
        BaseDepthMeasuredDepth:
          description: >-
            Measured depth within the wellbore of the LAST surveyed station with
            recorded data.  If a stored survey has been extrapolated to a deeper
            depth than the last surveyed station then that is the extrapolated
            measured depth and not the survey base depth.
          title: Survey Base Measured Depth
          type: number
        BusinessActivities:
          description: >-
            Array of business processes/workflows that the work product
            component has been through (ex. well planning, exploration).
          items:
            type: string
          title: Businessactivities
          type: array
        CalculationMethodType:
          description: >-
            Calculation Method Type used to compute the TVD, X OFFSET, Y OFFSET
            and DOG LEG SEVERITY values for this Directional Survey. For
            example, Radius of Curvature, Minimum Curvature, Balanced
            Tangential, etc.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CalculationMethodType:[\w\-\.\:\%]+:[0-9]*$
          title: Calculation Method Type
          type: string
        CompanyID:
          description: >-
            The relationship to company who engaged the service company
            (ServiceCompanyID) to perform the surveying.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Company ID
          type: string
        CreationDateTime:
          description: >-
            Date that a resource (work  product component here) is formed
            outside of OSDU before loading (e.g. publication date).
          format: date-time
          title: Creationdatetime
          type: string
        Datasets:
          items:
            $ref: '#/components/schemas/Dataset'
          title: Datasets
          type: array
        Description:
          description: >-
            Description.  Summary of the work product component.  Not the same
            as Remark which captures thoughts of creator about the wpc.
          title: Description
          type: string
        ExistenceKind:
          description: >-
            Where does this data resource sit in the cradle-to-grave span of its
            existence?
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          title: Existence Kind
          type: string
        ExtensionProperties:
          title: Extensionproperties
          type: object
        ExtrapolatedMeasuredDepth:
          description: The measured depth to which the survey segment was extrapolated.
          title: Extrapolated Measured Depth
          type: number
        GeoContexts:
          description: >-
            List of geographic entities which provide context to the WPC.  This
            may include multiple types or multiple values of the same type.
          items: {}
          title: Geocontexts
          type: array
        GeographicCRSID:
          description: >-
            Coordinate Reference System defining the Geodetic Datum of the
            station LATITUDE and LONGITUDE values. If LATITUDE and LONGITUDE
            attributes are stored, clearly identifying their Datum is required.
          example: >-
            namespace:reference-data--CoordinateReferenceSystem:GeodeticCRS.EPSG.4326:
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          title: Geographic Coordinate Reference System
          type: string
        IsDiscoverable:
          description: >-
            A flag that indicates if the work product component is searchable,
            which means covered in the search index.
          title: Isdiscoverable
          type: boolean
        IsExtendedLoad:
          description: >-
            A flag that indicates if the work product component is undergoing an
            extended load.  It reflects the fact that the work product component
            is in an early stage and may be updated before finalization.
          title: Isextendedload
          type: boolean
        LineageAssertions:
          description: >-
            Defines relationships with other objects (any kind of Resource) upon
            which this work product component depends.  The assertion is
            directed only from the asserting WPC to ancestor objects, not
            children.  It should not be used to refer to files or artefacts
            within the WPC -- the association within the WPC is sufficient and
            Artefacts are actually children of the main WPC file. They should be
            recorded in the Data.Artefacts[] array.
          items:
            $ref: '#/components/schemas/LineageAssertion'
          title: Lineageassertions
          type: array
        Name:
          description: Name
          title: Name
          type: string
        ProjectedCRSID:
          description: >-
            Coordinate Reference System defining the Projection of the station
            EASTING and NORTHING values. If  type is "Grid North" and EASTING
            and NORTHING attributes are stored, clearly identifying their
            projection is required.
          example: >-
            namespace:reference-data--CoordinateReferenceSystem:ProjectedCRS.EPSG.32615:
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          title: Projected Coordinate Reference System ID
          type: string
        ResourceCurationStatus:
          description: Describes the current Curation status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Curation Status
          type: string
        ResourceHomeRegionID:
          description: >-
            The name of the home [cloud environment] region for this OSDU
            resource object.
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Home Region ID
          type: string
        ResourceHostRegionIDs:
          description: >-
            The name of the host [cloud environment] region(s) for this OSDU
            resource object.
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          title: Resource Host Region ID
          type: array
        ResourceLifecycleStatus:
          description: Describes the current Resource Lifecycle status.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Lifecycle Status
          type: string
        ResourceSecurityClassification:
          description: Classifies the security level of the resource.
          pattern: >-
            ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          title: Resource Security Classification
          type: string
        ServiceCompanyID:
          description: Name of the Survey Company.
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          title: Service Company
          type: string
        Source:
          description: >-
            The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or
            individual. For informational purposes only, the list of sources is
            not governed.
          title: Data Source
          type: string
        SpatialArea:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            A polygon boundary that reflects the locale of the content of the
            work product component (location of the subject matter).
          title: Spatialarea
        SpatialPoint:
          allOf:
            - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: >-
            A centroid point that reflects the locale of the content of the work
            product component (location of the subject matter).
          title: Spatialpoint
        SubmitterName:
          description: >-
            Name of the person that first submitted the work product component
            to OSDU.
          title: Submittername
          type: string
        SurveyReferenceIdentifier:
          description: >-
            Unique or Distinctive Survey Reference Number, Job Number, File
            Number, Identifier, Label, Name, etc. as indicated on a directional
            survey report, file, etc.  Use this attribute to allow correlation
            of the data in this Directional Survey back to the original source
            document, file, etc.
          title: Survey Reference Identifier
          type: string
        SurveyToolTypeID:
          description: >-
            The type of tool or equipment used to acquire this Directional
            Survey.  For example, gyroscopic, magnetic, MWD, TOTCO, acid bottle,
            etc. Follow OWSG reference data and support the ISCWSA survey tool
            definitions.
          pattern: ^[\w\-\.]+:reference-data\-\-SurveyToolType:[\w\-\.\:\%]+:[0-9]*$
          title: Type of the Survey Tool
          type: string
        SurveyType:
          description: >-
            The type of this directional survey.  For example a "Directional
            Survey" where MD, Inclination and Azimuth are all measured or a
            "Position Log" where Inclination and Azimuth are both null and only
            MD, TVD and X/Y Offsets are available) - or "Full Survey" where
            everything is fully filled-up, depth-inclination-azimuth.
          title: Directional Survey Type
          type: string
        SurveyVersion:
          description: >-
            The version of the wellbore survey deliverable received from the
            service provider - as given by this provider
          title: Survey Version
          type: string
        Tags:
          description: >-
            Array of key words to identify the work product, especially to help
            in search.
          items:
            type: string
          title: Tags
          type: array
        TieMeasuredDepth:
          description: >-
            Tie-point depth measured along the wellbore from the measurement
            reference datum to the survey station - where tie point is the place
            on the originating survey where the current survey intersect it.
          title: Tie Measured Depth
          type: number
        TopDepthMeasuredDepth:
          description: >-
            Measured depth in wellbore where the directional survey starts. This
            should equal the minimum station measured depth for this directional
            survey, regardless of whether the surveyed station represents an
            actual surveyed MD or not.
          title: Survey Top Measured Depth
          type: number
        VerticalMeasurement:
          allOf:
            - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: >-
            References an entry in the Vertical Measurement array for the
            Wellbore identified by WellboreID, which defines the vertical
            reference datum for all survey station measured depths.
          title: Verticalmeasurement
        WellboreID:
          description: A unique name, code or number designated to the Wellbore.
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          title: Wellbore
          type: string
      required:
        - WellboreID
        - TopDepthMeasuredDepth
        - BaseDepthMeasuredDepth
        - VerticalMeasurement
      title: WellboreTrajectoryData110
      type: object
    WellboreType:
      description: An enumeration.
      enum:
        - bypass
        - initial
        - redrill
        - reentry
        - respud
        - sidetrack
        - unknown
      title: WellboreType
    app__model__model_curated__Legal:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        legaltags:
          description: The list of legal tags, see compliance API.
          items:
            type: string
          title: Legal Tags
          type: array
        otherRelevantDataCountries:
          description: >-
            The list of other relevant data countries using the ISO 2-letter
            codes, see compliance API.
          items:
            type: string
          title: Other Relevant Data Countries
          type: array
        status:
          description: The legal status.
          title: Legal Status
          type: string
      title: Legal
      type: object
    app__model__model_curated__Tags:
      title: Tags
      type: string
    app__model__model_curated__Type:
      description: An enumeration.
      enum:
        - GeometryCollection
      title: Type
    app__model__osdu_model__Tags:
      title: Tags
      type: string
    app__model__osdu_model__Type:
      description: An enumeration.
      enum:
        - AnyCrsFeatureCollection
      title: Type
    basinContext:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        basinCode:
          description: The code of the basin in which the well is located.
          title: Basin Code
          type: string
        basinName:
          description: The name of the basin in which the well is located.
          title: Basin Name
          type: string
        subBasinCode:
          description: The code of the sub-basin in which the well is located.
          title: Sub-Basin Code
          type: string
        subBasinName:
          description: The name of the sub-basin in which the well is located.
          title: Sub-Basin Name
          type: string
      title: basinContext
      type: object
    channel:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        absentValue:
          description: Optional field carrying the absent value as string for this channel.
          title: Absent Value
          type: string
        bulkURI:
          description: bulkURI either URL or URN.
          title: bulk URI
          type: string
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType'
          default: number
          description: >-
            The log value type (per log sample). The 'format' property may
            contain further hints about data type presentation.
          title: Data Type
        dimension:
          description: The dimension of this log or channel
          title: Dimension
          type: integer
        family:
          description: The log family code of this log or channel (optional)
          title: Log Family
          type: string
        familyType:
          description: >-
            The log family type code of this log or channel. Example: 'Neutron
            Porosity' for 'Thermal Neutron Porosity Sandstone'. (optional)
          title: Log Family Type
          type: string
        format:
          allOf:
            - $ref: '#/components/schemas/Format'
          default: float32
          description: >-
            Optional format hint how to treat the log values as strings or
            number of bits per 'dataType'.
          title: Format Hint
        logstoreId:
          description: >-
            The id of this log or channel in the Logstore. This property is not
            present in the index channel.
          title: Logstore ID
          type: number
        longName:
          description: The long name of this log or channel
          title: Log Long Name
          type: string
        mnemonic:
          description: The mnemonic of this log or channel
          title: Mnemonic
          type: string
        name:
          description: The name of this log or channel.
          title: Log Name
          type: string
        properties:
          description: The named properties of this log or channel.
          items:
            $ref: '#/components/schemas/namedProperty'
          title: Named Properties
          type: array
        source:
          description: >-
            The source of this log or channel as a data reference; Typically
            this refers to the raw LogSet, from which this log WKE is generated.
          title: Source
          type: string
        unitKey:
          description: >-
            The unitKey to be looked up in the 'frameOfReference.units'
            dictionary to find the self-contained definition.
          title: Unit
          type: string
      title: channel
      type: object
    core_dl_geopoint:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        latitude:
          description: The latitude value in degrees of arc (dega). Value range [-90, 90].
          maximum: 90
          minimum: -90
          title: Latitude
          type: number
        longitude:
          description: >-
            The longitude value in degrees of arc (dega). Value range [-180,
            180]
          maximum: 180
          minimum: -180
          title: Longitude
          type: number
      required:
        - latitude
        - longitude
      title: core_dl_geopoint
      type: object
    dipSetData:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        azimuthReference:
          description: >-
            Azimuth reference code defining the type of North. Only used for
            dipSets with azimuth data
          title: Azimuth Reference Code
          type: string
        bulkURI:
          description: bulkURI either URL or URN.
          title: bulk URI
          type: string
        classification:
          default: Externally Processed LogSet
          description: The well-known log set classification code.
          title: Log Set Classification
          type: string
        dateCreated:
          description: The UTC date time of the entity creation
          format: date-time
          title: Creation Date and Time
          type: string
        dateModified:
          description: The UTC date time of the last entity modification
          format: date-time
          title: Last Modification Date and Time
          type: string
        elevationReference:
          $ref: '#/components/schemas/SimpleElevationReference'
        externalIds:
          description: >-
            An array of identities (e.g. some kind if URL to be resolved in an
            external data store), which links to external realizations of the
            same entity.
          items:
            type: string
          title: Array of External IDs
          type: array
        name:
          description: The name of this dip set
          title: Dip Set Name
          type: string
        operation:
          description: The operation which created this entity
          title: Operation
          type: string
        reference:
          $ref: '#/components/schemas/channel'
        referenceType:
          description: The reference index type of the dip set.
          title: Reference Type
          type: string
        relationships:
          $ref: '#/components/schemas/dipsetrelationships'
        start:
          $ref: '#/components/schemas/ValueWithUnit'
        step:
          $ref: '#/components/schemas/ValueWithUnit'
        stop:
          $ref: '#/components/schemas/ValueWithUnit'
      title: dipSetData
      type: object
    dipset:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          allOf:
            - $ref: '#/components/schemas/dipSetData'
          description: dipset data
          title: Dip Set Data
        id:
          description: The unique identifier of the dip set
          title: Dip Set ID
          type: string
        kind:
          default: osdu:wks:dipSet:1.0.0
          description: Kind specification
          title: Dip Set Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The dip-set's legal tags
          title: Legal Tags
        meta:
          description: >-
            The meta data section linking the 'unitKey', 'crsKey' to
            self-contained definitions (persistableReference)
          items:
            $ref: '#/components/schemas/MetaItem'
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        type:
          description: The reference entity type as declared in common:metadata:entity:*.
          title: Entity Type
          type: string
        version:
          description: The version number of this dip set; set by the framework.
          title: Entity Version Number
          type: number
      title: dipset
      type: object
    dipsetrelationships:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        classificationLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The classification log of the dipset
          title: Classification log
        qualityLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The quality log of the dipset
          title: Quality log
        referenceLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The true dip azimuth log of the dipset.
          title: True dip azimuth log
        trueDipAzimuthLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The true dip azimuth log of the dipset.
          title: True dip azimuth log
        trueDipInclinationLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The X-coordinate log of the dipset
          title: X-coordinate log
        well:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The well to which this dipSet belongs. Only required if the wellbore
            is unknown.
          title: Well
        wellbore:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore to which this dipSet belongs.
          title: Wellbore
        wellboreSection:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore section to which this dipSet belongs.
          title: Wellbore Section
        xCoordinateLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The X-coordinate log of the dipset
          title: X-coordinate log
        yCoordinateLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The Y-coordinate log of the dipset
          title: Y-coordinate log
        zCoordinateLog:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The Z-coordinate log of the dipset
          title: Z-coordinate log
      required:
        - wellbore
      title: dipsetrelationships
      type: object
    geographicPosition:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        crsKey:
          description: >-
            The 'crsKey', which can be looked up in the 'frameOfReference.crs'
            for further details.
          title: CRS Key
          type: string
        elevationFromMsl:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Elevation from Mean Seal Level, downwards negative. The unit
            definition is found via 'elevationFromMsl.unitKey' in
            'frameOfReference.units' dictionary.
          title: Elevation from MSL
        latitude:
          description: Native or original latitude (unit defined by CRS)
          title: Native Latitude
          type: number
        longitude:
          description: Native or original longitude (unit defined by CRS)
          title: Native Longitude
          type: number
      required:
        - crsKey
        - elevationFromMsl
        - latitude
        - longitude
      title: geographicPosition
      type: object
    geometryItem:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        geometries:
          items:
            anyOf:
              - $ref: '#/components/schemas/GeoJsonPoint'
              - $ref: '#/components/schemas/GeoJsonMultiPoint'
              - $ref: '#/components/schemas/GeoJsonLineString'
              - $ref: '#/components/schemas/GeoJsonMultiLineString'
              - $ref: '#/components/schemas/Polygon'
              - $ref: '#/components/schemas/GeoJsonMultiPolygon'
          title: Geometries
          type: array
        type:
          $ref: '#/components/schemas/app__model__model_curated__Type'
      required:
        - geometries
        - type
      title: geometryItem
      type: object
    historyRecord:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        date:
          description: The UTC date time of the log creation/processing
          format: date-time
          title: Date and Time
          type: string
        description:
          description: The description of the context, which produced the log.
          title: ' Description'
          type: string
        user:
          description: The user running the log processing.
          title: User
          type: string
      title: historyRecord
      type: object
    log:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          allOf:
            - $ref: '#/components/schemas/logData'
          description: Log data associated with a wellbore
          title: Log Data
        id:
          description: The unique identifier of the log
          title: Log Set ID
          type: string
        kind:
          default: osdu:wks:log:0.0.1
          description: Kind specification
          title: Log Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The log's legal tags
          title: Legal Tags
        meta:
          description: >-
            The meta data section linking the 'unitKey', 'crsKey' to
            self-contained definitions (persistableReference)
          items:
            $ref: '#/components/schemas/MetaItem'
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        status:
          default: compliant
          description: The status of this log
          title: Entity Status
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        type:
          description: The reference entity type as declared in common:metadata:entity:*.
          title: Entity Type
          type: string
        version:
          description: The version number of this log; set by the framework.
          title: Entity Version Number
          type: number
      title: log
      type: object
    logData:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        azimuthReference:
          description: >-
            Only supplied with azimuth logs: the azimuth reference code defining
            the type of North, default TN for true north.
          title: Azimuth Reference Code
          type: string
        dateCreated:
          description: The UTC date time of the entity creation
          format: date-time
          title: Creation Date and Time
          type: string
        dateModified:
          description: The UTC date time of the last entity modification
          format: date-time
          title: Last Modification Date and Time
          type: string
        elevationReference:
          allOf:
            - $ref: '#/components/schemas/SimpleElevationReference'
          description: >-
            The wellbore's elevation reference from mean sea level (MSL),
            positive above MSL. This is where the index, e.g. MD == 0 and TVD ==
            0.
          title: Elevation Reference
        externalIds:
          description: >-
            An array of identities (e.g. some kind if URL to be resolved in an
            external data store), which links to external realizations of the
            same entity.
          items:
            type: string
          title: Array of External IDs
          type: array
        history:
          description: >-
            An array of historyRecords describing the context for the log's
            creation or processing.
          items:
            $ref: '#/components/schemas/historyRecord'
          title: History Records
          type: array
        log:
          allOf:
            - $ref: '#/components/schemas/logchannel'
          description: The log containing the log meta data and log-store reference.
          title: Log Channel
        name:
          description: The name of this log set
          title: Log Set Name
          type: string
        operation:
          description: The operation which created this Log
          title: Operation
          type: string
        reference:
          allOf:
            - $ref: '#/components/schemas/logchannel'
          description: >-
            The reference index - only populated for logs, which are member of a
            logSet and share the reference index.
          title: Reference Index
        referenceType:
          allOf:
            - $ref: '#/components/schemas/ReferenceType'
          description: The reference index type of the log set.
          title: Index Type
        relationships:
          allOf:
            - $ref: '#/components/schemas/logRelationships'
          description: The related entities.
          title: Relationships
        start:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: The start index value of the log set.
          title: Start
        step:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The index increment value of the log set. Only populated if the log
            is regularly sampled.
          title: Step
        stop:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: The stop index value of the log set.
          title: Stop
      title: logData
      type: object
    logRelationships:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        logSet:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The logSet to which this log belongs. If the log is not part of a
            log set this relationship stays empty.
          title: LogSet
        timeDepthRelation:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The timeDepthRelation to which this log belongs. If the log is not
            part of a timeDepthRelation this relationship stays empty.
          title: TimeDepthRelation LogSet
        well:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The well to which this log belongs. Only required if the wellbore is
            unknown.
          title: Well
        wellbore:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The wellbore to which this log belongs. This relationship is the
            most important; only the wellbore can provide the unique context for
            the measured depth index.
          title: Wellbore
      title: logRelationships
      type: object
    logSetData:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        azimuthReference:
          description: >-
            Azimuth reference code defining the type of North. Only used for
            logSets with azimuth data
          title: Azimuth Reference Code
          type: string
        channelMnemonics:
          description: A list of channel Mnemonics in this log set.
          items:
            type: string
          title: Channel Mnemonics
          type: array
        channelNames:
          description: A list of channel long names in this log set.
          items:
            type: string
          title: Channel Names
          type: array
        classification:
          default: Externally Processed LogSet
          description: The well-known log set classification code.
          title: Log Set Classification
          type: string
        dateCreated:
          description: The UTC date time of the entity creation
          format: date-time
          title: Creation Date and Time
          type: string
        dateModified:
          description: The UTC date time of the last entity modification
          format: date-time
          title: Last Modification Date and Time
          type: string
        elevationReference:
          $ref: '#/components/schemas/SimpleElevationReference'
        externalIds:
          description: >-
            An array of identities (e.g. some kind if URL to be resolved in an
            external data store), which links to external realizations of the
            same entity.
          items:
            type: string
          title: Array of External IDs
          type: array
        name:
          description: The name of this log set
          title: Log Set Name
          type: string
        operation:
          description: The operation which created this entity
          title: Operation
          type: string
        reference:
          $ref: '#/components/schemas/channel'
        referenceType:
          description: The reference index type of the log set.
          title: Reference Type
          type: string
        relationships:
          $ref: '#/components/schemas/logsetrelationships'
        start:
          $ref: '#/components/schemas/ValueWithUnit'
        step:
          $ref: '#/components/schemas/ValueWithUnit'
        stop:
          $ref: '#/components/schemas/ValueWithUnit'
      title: logSetData
      type: object
    logchannel:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        bulkURI:
          description: bulkURI either URL or URN.
          title: bulk URI
          type: string
        columnNames:
          description: >-
            A list of names for multi-dimensional logs (dimension>1). The length
            of this array is expected to be equal to 'dimension'. For
            one-dimensional this property stays empty as the columnName is by
            definition the log name.
          items:
            type: string
          title: Column Names
          type: array
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType_2'
          default: number
          description: >-
            The log value type (per log sample). The 'format' property may
            contain further hints about data type presentation.
          title: Data Type
        dimension:
          description: The dimension of this log or channel
          title: Dimension
          type: integer
        family:
          description: The log family code of this log or channel (optional)
          title: Log Family
          type: string
        familyType:
          description: >-
            The log family type code of this log or channel. Example: 'Neutron
            Porosity' for 'Thermal Neutron Porosity Sandstone'. (optional)
          title: Log Family Type
          type: string
        format:
          allOf:
            - $ref: '#/components/schemas/Format_2'
          default: float32
          description: >-
            Optional format hint how to treat the log values as strings or
            number of bits per 'dataType'.
          title: Format Hint
        logstoreId:
          description: >-
            The unique id of this log or channel in the Logstore. This property
            is not present in the index channel.
          title: Logstore ID
          type: number
        longName:
          description: The long name of this log or channel
          title: Log Long Name
          type: string
        mnemonic:
          description: The mnemonic of this log or channel
          title: Mnemonic
          type: string
        name:
          description: The name of this log or channel.
          title: Log Name
          type: string
        properties:
          description: The named properties of this log or channel.
          items:
            $ref: '#/components/schemas/namedProperty'
          title: Named Properties
          type: array
        source:
          description: >-
            The source of this log or channel as a data reference; Typically
            this refers to the raw LogSet, from which this log WKE is generated.
          title: Source
          type: string
        unitKey:
          description: >-
            The unitKey to be looked up in the 'frameOfReference.units'
            dictionary to find the self-contained definition.
          title: Unit
          type: string
      title: logchannel
      type: object
    logset:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          allOf:
            - $ref: '#/components/schemas/logSetData'
          description: Log channel set associated with a wellbore
          title: Log Set Data
        id:
          description: The unique identifier of the log set
          title: Log Set ID
          type: string
        kind:
          default: osdu:wks:logSet:0.0.1
          description: Kind specification
          title: Log Set Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The log-set's legal tags
          title: Legal Tags
        meta:
          description: >-
            The meta data section linking the 'unitKey', 'crsKey' to
            self-contained definitions (persistableReference)
          items:
            $ref: '#/components/schemas/MetaItem'
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        type:
          description: The reference entity type as declared in common:metadata:entity:*.
          title: Entity Type
          type: string
        version:
          description: The version number of this log set; set by the framework.
          title: Entity Version Number
          type: number
      title: logset
      type: object
    logsetrelationships:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        well:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The well to which this logSet belongs. Only required if the wellbore
            is unknown.
          title: Well
        wellbore:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore to which this logSet belongs.
          title: Wellbore
        wellboreSection:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellboreSection to which this logSet belongs.
          title: Wellbore Section
      required:
        - wellbore
      title: logsetrelationships
      type: object
    marker:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          allOf:
            - $ref: '#/components/schemas/markerData'
          description: >-
            Geological marker using a single point-observation, typically along
            a wellbore.
          title: Marker Data
        id:
          description: The unique identifier of the marker
          title: Marker ID
          type: string
        kind:
          description: Marker kind specification
          title: Marker Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The marker's legal tags
          title: Legal Tags
        meta:
          description: >-
            The meta data section linking the 'unitKey', 'crsKey' to
            self-contained definitions (persistableReference)
          items:
            $ref: '#/components/schemas/MetaItem'
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        type:
          description: The reference entity type as declared in common:metadata:entity:*.
          title: Entity Type
          type: string
        version:
          description: The version number of this marker; set by the framework.
          title: Entity Version Number
          type: number
      required:
        - acl
        - kind
        - legal
      title: marker
      type: object
    markerData:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        age:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The absolute age at the feature boundary. The unit definition is
            found via the property's unitKey' in 'frameOfReference.units'
            dictionary.
          title: Age
        boundaryRelation:
          description: The marker boundary relationship classification
          title: Interface Boundary Relation
          type: string
        classification:
          description: >-
            The classification of the marker. Could be client-defined via a
            catalog, e.g. common:wke:markerClassification:1.0.0 and
            common:wke:markerClassificationMember:1.0.0
          title: Marker Classification
          type: string
        dateCreated:
          description: The UTC date time of the entity creation
          format: date-time
          title: Creation Date and Time
          type: string
        dateModified:
          description: The UTC date time of the last entity modification
          format: date-time
          title: Last Modification Date and Time
          type: string
        depth:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The original marker depth - measured from data.elevationReference in
            data.depthReferenceType. The unit definition is found via the
            property's unitKey' in 'frameOfReference.units' dictionary.
          title: Marker Depth
        depthReferenceType:
          default: MD
          description: >-
            Depth reference code defining the type of depth for the marker.
            Default MD (measured depth). Depth is downwards increasing.
          title: Depth Reference Code
          type: string
        elevationReference:
          allOf:
            - $ref: '#/components/schemas/SimpleElevationReference'
          description: >-
            The elevation from mean sea level (MSL), where depth, topDepth,
            baseDepth are zero. Values above MSL are positive.
          title: Elevation Reference Level
        externalIds:
          description: >-
            An array of identities (e.g. some kind if URL to be resolved in an
            external data store), which links to external realizations of the
            same entity.
          items:
            type: string
          title: Array of External IDs
          type: array
        interpreter:
          description: The name of the interpreter who picked this marker.
          title: Interpreter Name
          type: string
        locationWGS84:
          allOf:
            - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: The marker's shape as GeoJSON Point.
          title: GeoJSON Marker Location
        markerFeatureType:
          description: >-
            The marker's type of feature like 'seismic', 'structural',
            'stratigraphic'
          title: Marker Feature Type
          type: string
        markerGeoDomain:
          description: >-
            The marker's GeoScience domain like 'geologic', 'reservoir',
            'petrophysical'
          title: Marker GeoScience Domain
          type: string
        markerSubFeatureAttribute:
          description: >-
            Further specification of the marker's sub-feature, e.g. in sequence
            stratigraphy.
          title: Marker Sub-feature Attribute
          type: string
        markerSubFeatureType:
          description: >-
            The marker's sub-type of the feature like 'horizon', 'fault',
            'fracture'
          title: Marker Sub-feature Type
          type: string
        md:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The marker measured depth (MD) measured from
            data.elevationReference. The unit definition is found via the
            property's unitKey' in 'frameOfReference.units' dictionary.
          title: Marker Measured Depth
        name:
          description: The name of the marker
          title: Marker Name
          type: string
        planeOrientationAzimuth:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Azimuth angle. The azimuth reference is given by
            data.azimuthReference. The 'planeOrientationAzimuth.unitKey' is to
            be looked up in the 'frameOfReference.units' dictionary to find the
            self-contained definition.
          title: Azimuth Angle
        planeOrientationDip:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Dip angle. The 'planeOrientationDip.unitKey' is to be looked up in
            the 'frameOfReference.units' dictionary to find the self-contained
            definition.
          title: Dip Angle
        relationships:
          allOf:
            - $ref: '#/components/schemas/markerrelationships'
          description: The entities related to this marker.
          title: Relationships
        stratigraphicHierarchyLevel:
          description: >-
            Optional hierarchical level in the
            chrono-stratigraphic/litho-stratigraphic catalog table, identified
            by the data.relationships.chartId
          title: Column Level
          type: integer
        tvd:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The marker true vertical depth (TVD) measured from
            data.elevationReference. The unit definition is found via the
            property's unitKey' in 'frameOfReference.units' dictionary.
          title: Marker Measured Depth
        wgs84ElevationFromMsl:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Elevation from Mean Sea Level, downwards negative. The unit
            definition is found via the property's unitKey' in
            'frameOfReference.units' dictionary.
          title: Elevation from MSL
        wgs84LatitudeLongitude:
          allOf:
            - $ref: '#/components/schemas/core_dl_geopoint'
          description: The marker's position in WGS 84 latitude and longitude.
          title: WGS 84 Latitude Longitude
      required:
        - md
        - name
      title: markerData
      type: object
    markerrelationships:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        horizon:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The related stratigraphic horizon
          title: Stratigraphic Horizon
        stratigraphicTable:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The related stratigraphic table, which provides the context for the
            stratigraphic horizon
          title: Stratigraphic Table
        study:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The study, in which this marker was conceived.
          title: Study
        trajectory:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The trajectory used to create the marker position
          title: Trajectory
        wellbore:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore entity, to which this marker belongs.
          title: Wellbore
      title: markerrelationships
      type: object
    namedProperty:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        associations:
          description: >-
            The optional associations contains one or more mnemonics found
            elsewhere in the logSet.
          items:
            type: string
          title: Associations
          type: array
        description:
          description: The description and role of this property.
          title: Property Description
          type: string
        format:
          description: >-
            An optional format declaration for the property values. The 'A'
            prefix indicates an array; string values are represented by 'S';
            floating point values are represented by 'F', optionally followed by
            a field specification, e.g. 'F10.4'; exponential number
            representations are represented by 'E'; integer values are
            represented by 'I'. For further information see the LAS
            specification http://www.cwls.org/las/.
          title: Format (LAS)
          type: string
        name:
          description: The name of this property.
          title: Property Name
          type: string
        unitKey:
          description: >-
            The unitKey to be looked up in the 'frameOfReference.units'
            dictionary to find the self-contained definition.
          title: Property Unit Symbol
          type: string
        value:
          anyOf:
            - type: number
            - type: string
          description: The value for this property as a string or a number.
          title: Property Value
        values:
          description: The values, e.g. interval boundaries, for this property.
          items:
            type: number
          title: Property Values (Interval)
          type: array
      title: namedProperty
      type: object
    odes_storage__models__Legal:
      properties:
        legaltags:
          items:
            type: string
          title: Legaltags
          type: array
        otherRelevantDataCountries:
          items:
            type: string
          title: Otherrelevantdatacountries
          type: array
      title: Legal
      type: object
    projectedPosition:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        crsKey:
          description: >-
            The 'crsKey', which can be looked up in the 'frameOfReference.crs'
            for further details.
          title: CRS Key
          type: string
        elevationFromMsl:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Elevation from Mean Seal Level, downwards negative. The unit
            definition is found via 'elevationFromMsl.unitKey' in
            'frameOfReference.units' dictionary.
          title: Elevation from MSL
        x:
          description: X-coordinate value in native or original projected CRS
          title: X Coordinate
          type: number
        'y':
          description: Y-coordinate value in native or original projected CRS
          title: Y Coordinate
          type: number
      required:
        - crsKey
        - elevationFromMsl
        - x
        - 'y'
      title: projectedPosition
      type: object
    trajectory:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          allOf:
            - $ref: '#/components/schemas/trajectoryData'
          description: A log set representing a trajectory associated with a wellbore
          title: Trajectory Data
        id:
          description: The unique identifier of the trajectory
          title: Trajectory ID
          type: string
        kind:
          default: osdu:wks:trajectory:0.0.1
          description: Kind specification
          title: Trajectory Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The trajectory's legal tags
          title: Legal Tags
        meta:
          description: >-
            The meta data section linking the 'unitKey', 'crsKey' to
            self-contained definitions (persistableReference)
          items:
            $ref: '#/components/schemas/MetaItem'
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        type:
          description: The reference entity type as declared in common:metadata:entity:*.
          title: Entity Type
          type: string
        version:
          description: The version number of this trajectory; set by the framework.
          title: Entity Version Number
          type: number
      title: trajectory
      type: object
    trajectoryData:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        azimuthReference:
          description: >-
            Azimuth reference code defining the type of North, default TN for
            true north.
          title: Azimuth Reference Code
          type: string
        channelMnemonics:
          description: A list of channel Mnemonics in this trajectory.
          items:
            type: string
          title: Channel Mnemonics
          type: array
        channelNames:
          description: A list of channel long names in this trajectory.
          items:
            type: string
          title: Channel Names
          type: array
        channels:
          description: The channels associated to the index.
          items:
            $ref: '#/components/schemas/trajectorychannel'
          title: Channels
          type: array
        classification:
          default: Raw Deviation Survey
          description: The well-known trajectory classification code.
          title: Trajectory Classification
          type: string
        dateCreated:
          description: The UTC date time of the entity creation
          format: date-time
          title: Creation Date and Time
          type: string
        dateModified:
          description: The UTC date time of the last entity modification
          format: date-time
          title: Last Modification Date and Time
          type: string
        elevationReference:
          allOf:
            - $ref: '#/components/schemas/SimpleElevationReference'
          description: >-
            The wellbore's elevation reference from mean sea level (MSL),
            positive above MSL. This is where MD == 0 and TVD == 0
          title: Elevation Reference
        externalIds:
          description: >-
            An array of identities (e.g. some kind if URL to be resolved in an
            external data store), which links to external realizations of the
            same entity.
          items:
            type: string
          title: Array of External IDs
          type: array
        index:
          allOf:
            - $ref: '#/components/schemas/trajectorychannel'
          description: The index channel or log.
          title: Index Channel
        indexType:
          description: The index type of the trajectory.
          title: Index Type
          type: string
        locationWGS84:
          allOf:
            - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: The wellbore's trajectory preview shape as GeoJSON LineString.
          title: Trajectory preview
        name:
          description: The name of this trajectory
          title: Trajectory Name
          type: string
        referencePosition:
          allOf:
            - $ref: '#/components/schemas/Point3dNonGeoJson'
          description: >-
            The 3D reference position for the first sample (surface location for
            main wellbores, tie-in point for side-tracks.
          title: Reference Position First Sample
        relationships:
          allOf:
            - $ref: '#/components/schemas/trajectoryrelationships'
          description: The related entities.
          title: Relationships
        start:
          description: The start index value of the trajectory.
          title: Start
          type: number
        step:
          description: The index increment value of the trajectory.
          title: Step
          type: number
        stop:
          description: The stop index value of the trajectory.
          title: Stop
          type: number
        wellHeadWgs84:
          allOf:
            - $ref: '#/components/schemas/wgs84Position'
          description: >-
            The wellbore's position in WGS 84 latitude and longitude; vertical
            position is an elevation from mean sea level (MSL), positive above
            MSL.
          title: WGS 84 Position
      title: trajectoryData
      type: object
    trajectorychannel:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        absentValue:
          description: Optional field carrying the absent value as string for this channel.
          title: Absent Value
          type: string
        azimuthKey:
          description: >-
            The azimuth reference of this log or channel. The detailed
            definition is found as persistable reference in the
            'frameOfReference.azimuth' dictionary.
          title: Azimuth Reference Key
          type: string
        bulkURI:
          description: bulkURI either URL or URN.
          title: bulk URI
          type: string
        crsKey:
          description: >-
            The CRS key of this log or channel. The detailed definition is found
            as persistable reference in the 'frameOfReference.crs' dictionary.
          title: CRS Key
          type: string
        dataType:
          allOf:
            - $ref: '#/components/schemas/DataType_1'
          default: number
          description: >-
            The log value type (per log sample). The 'format' property may
            contain further hints about data type presentation.
          title: Data Type
        dimension:
          description: The dimension of this log or channel
          title: Dimension
          type: integer
        family:
          description: The log family code of this log or channel (optional)
          title: Log Family
          type: string
        familyType:
          description: >-
            The log family type code of this log or channel. Example: 'Neutron
            Porosity' for 'Thermal Neutron Porosity Sandstone'. (optional)
          title: Log Family Type
          type: string
        format:
          allOf:
            - $ref: '#/components/schemas/Format_1'
          default: float32
          description: >-
            Optional format hint how to treat the log values as strings or
            number of bits per 'dataType'.
          title: Format Hint
        logstoreId:
          description: >-
            The id of this log or channel in the Logstore. This property is not
            present in the index channel.
          title: Logstore ID
          type: number
        longName:
          description: The long name of this log or channel
          title: Log Long Name
          type: string
        mnemonic:
          description: The mnemonic of this log or channel
          title: Mnemonic
          type: string
        name:
          description: The name of this log or channel.
          title: Log Name
          type: string
        properties:
          description: The properties of this log or channel.
          items:
            type: string
          title: Properties
          type: array
        source:
          description: >-
            The source of this log or channel as a data reference; Typically
            this refers to the raw trajectory, from which this log WKE is
            generated.
          title: Source
          type: string
        unitKey:
          description: >-
            The unit key of this log or channel. The detailed definition is
            found as persistable reference in the 'frameOfReference.units'
            dictionary. Empty units (NoUnit) are not recorded.
          title: Unit Key
          type: string
      title: trajectorychannel
      type: object
    trajectoryrelationships:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        wellbore:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore to which this trajectory belongs.
          title: Wellbore
      required:
        - wellbore
      title: trajectoryrelationships
      type: object
    well:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          allOf:
            - $ref: '#/components/schemas/wellData'
          description: Well data container
          title: Well Data
        id:
          description: The unique identifier of the well
          title: Well ID
          type: string
        kind:
          default: osdu:wks:well:0.0.1
          description: Well-known well kind specification
          title: Well Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The geological interpretation's legal tags
          title: Legal Tags
        meta:
          description: >-
            The meta data section linking the 'unitKey', 'crsKey' to
            self-contained definitions (persistableReference)
          items:
            $ref: '#/components/schemas/MetaItem'
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        type:
          description: The reference entity type as declared in common:metadata:entity:*.
          title: Entity Type
          type: string
        version:
          description: The version number of this well; set by the framework.
          title: Entity Version Number
          type: number
      title: well
      type: object
    wellData:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        basinContext:
          allOf:
            - $ref: '#/components/schemas/basinContext'
          description: The basin context details for the well.
          title: Basin Context
        block:
          description: The block name, in which the well is located.
          title: Block
          type: string
        country:
          description: >-
            The country, in which the well is located. The country name follows
            the convention in ISO 3166-1 'English short country name', see
            https://en.wikipedia.org/wiki/ISO_3166-1
          title: Country
          type: string
        county:
          description: The county name, in which the well is located.
          title: County
          type: string
        dateCreated:
          description: The UTC date time of the entity creation
          format: date-time
          title: Creation Date and Time
          type: string
        dateLicenseIssued:
          description: The UTC date time when the well license was issued.
          format: date-time
          title: License Issue Date
          type: string
        dateModified:
          description: The UTC date time of the last entity modification
          format: date-time
          title: Last Modification Date and Time
          type: string
        datePluggedAbandoned:
          description: The UTC date and time at which the well was plugged and abandoned.
          format: date-time
          title: Plugged Abandoned Date
          type: string
        dateSpudded:
          description: >-
            The date and time when activities to drill the borehole begin to
            create a hole in the earth. For a sidetrack, this is the date
            kickoff operations began. The format follows ISO 8601 YYYY-MM-DD
            extended format
          format: date-time
          title: Spud Date
          type: string
        directionWell:
          allOf:
            - $ref: '#/components/schemas/DirectionWell'
          description: >-
            POSC well direction. The direction of the flow of the fluids in a
            well facility (generally, injected or produced, or some
            combination).
          title: Well Direction
        district:
          description: The district name, to which the well belongs.
          title: District
          type: string
        elevationReference:
          allOf:
            - $ref: '#/components/schemas/SimpleElevationReference'
          description: >-
            The well's elevation reference from mean sea level (MSL), positive
            above MSL. This is where MD == 0 and TVD == 0
          title: Elevation Reference
        externalIds:
          description: >-
            An array of identities (e.g. some kind if URL to be resolved in an
            external data store), which links to external realizations of the
            same entity.
          items:
            type: string
          title: Array of External IDs
          type: array
        field:
          description: The field name, to which the well belongs.
          title: Field
          type: string
        fluidWell:
          allOf:
            - $ref: '#/components/schemas/FluidWell'
          description: >-
            POSC well fluid. The type of fluid being produced from or injected
            \ninto a well facility.
          title: Well Fluid
        groundElevation:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: The well's ground elevation, Values above MSL are positive..
          title: Ground Elevation
        locationWGS84:
          allOf:
            - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: >-
            A 2D GeoJSON FeatureCollection defining well location or trajectory
            in WGS 84 CRS.
          title: Well Shape WGS 84
        name:
          description: The well name
          title: Well Name
          type: string
        operator:
          description: The operator company name of the well.
          title: Well Operator
          type: string
        operatorDivision:
          description: The operator division of the well.
          title: Operator Division
          type: string
        operatorInterest:
          description: Interest for operator. Commonly in percent.
          title: Well Operator Interest
          type: number
        operatorOriginal:
          description: >-
            Original operator of the well. This may be different than the
            current operator.
          title: Original Well Operator
          type: string
        plssLocation:
          allOf:
            - $ref: '#/components/schemas/PlssLocation'
          description: >-
            A location described by the Public Land Survey System (United
            States)
          title: US PLSS Location
        propertyDictionary:
          description: >-
            A dictionary structure, i.e. key/string value pairs, to carry
            additional well properties.
          title: Property Dictionary
          type: object
        region:
          description: Geo-political region in which the well is located.
          title: Region
          type: string
        relationships:
          allOf:
            - $ref: '#/components/schemas/wellrelationships'
          description: The related entities.
          title: Relationships
        state:
          description: The state name, in which the well is located.
          title: State
          type: string
        uwi:
          description: >-
            The unique well identifier, aka. API number, US well number or UBHI.
            Codes can have 10, 12 or 14 digits depending on the availability of
            directional sidetrack (2 digits) and event sequence codes (2
            digits).
          title: Unique Well Identifier
          type: string
        waterDepth:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Depth of water (not land rigs).
          title: Water Depth
        wellHeadElevation:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The well's vertical position is an elevation from mean sea level
            (MSL), positive above MSL.
          title: Well Head Elevation
        wellHeadGeographic:
          allOf:
            - $ref: '#/components/schemas/geographicPosition'
          description: >-
            The well's well head position in the native, geographic CRS;
            vertical position is an elevation from mean sea level (MSL),
            positive above MSL.
          title: Well Head Position, Geographic
        wellHeadProjected:
          allOf:
            - $ref: '#/components/schemas/projectedPosition'
          description: >-
            The well's well head position in the native, projected CRS; vertical
            position is an elevation from mean sea level (MSL), positive above
            MSL.
          title: Well Head Position, Projected
        wellHeadWgs84:
          allOf:
            - $ref: '#/components/schemas/core_dl_geopoint'
          description: The well's position in WGS 84 latitude and longitude.
          title: WGS 84 Position
        wellLocationType:
          $ref: '#/components/schemas/WellLocationType'
        wellNumberGovernment:
          description: Government assigned well number.
          title: Government Number
          type: string
        wellNumberLicense:
          description: License number of the well.
          title: Well License Number
          type: string
        wellNumberOperator:
          description: Operator well number.
          title: Operator Number
          type: string
        wellPurpose:
          allOf:
            - $ref: '#/components/schemas/WellPurpose'
          description: POSC well purpose
          title: Well Purpose
        wellStatus:
          allOf:
            - $ref: '#/components/schemas/WellStatus'
          description: POSC well status.
          title: Well Status
        wellType:
          allOf:
            - $ref: '#/components/schemas/WellType'
          description: Type of well.
          title: Well Type
      title: wellData
      type: object
    wellbore:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
          title: Access Control List
        ancestry:
          allOf:
            - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
          title: Ancestry
        createTime:
          description: >-
            Timestamp of the time at which initial version of this OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:46:20.163Z'
          format: date-time
          title: Resource Object Creation DateTime
          type: string
        createUser:
          description: >-
            The user reference, which created the first version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Creation User Reference
          type: string
        data:
          allOf:
            - $ref: '#/components/schemas/wellboreData'
          description: Wellbore data container
          title: Wellbore Data
        id:
          description: The unique identifier of the wellbore
          title: Wellbore ID
          type: string
        kind:
          default: osdu:wks:wellbore:0.0.1
          description: Well-known wellbore kind specification
          title: Wellbore Kind
          type: string
        legal:
          allOf:
            - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The geological interpretation's legal tags
          title: Legal Tags
        meta:
          description: >-
            The meta data section linking the 'unitKey', 'crsKey' to
            self-contained definitions (persistableReference)
          items:
            $ref: '#/components/schemas/MetaItem'
          title: Frame of Reference Meta Data
          type: array
        modifyTime:
          description: >-
            Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          example: '2020-12-16T11:52:24.477Z'
          format: date-time
          title: Resource Object Version Creation DateTime
          type: string
        modifyUser:
          description: >-
            The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
          title: Resource Object Version Creation User Reference
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: >-
            A generic dictionary of string keys mapping to string value. Only
            strings are permitted as keys and values.
          example:
            NameOfKey: String value
          title: Tag Dictionary
          type: object
        type:
          description: The reference entity type as declared in common:metadata:entity:*.
          title: Entity Type
          type: string
        version:
          description: The version number of this wellbore; set by the framework.
          title: Entity Version Number
          type: number
      title: wellbore
      type: object
    wellboreData:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        airGap:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: The gap between water surface and offshore drilling platform.
          title: Air Gap
        block:
          description: The block name, in which the wellbore is located.
          title: Block
          type: string
        country:
          description: >-
            The country, in which the wellbore is located. The country name
            follows the convention in ISO 3166-1 'English short country name',
            see https://en.wikipedia.org/wiki/ISO_3166-1
          title: Country
          type: string
        county:
          description: The county name, in which the wellbore is located.
          title: County
          type: string
        dateCreated:
          description: The UTC date time of the entity creation
          format: date-time
          title: Creation Date and Time
          type: string
        dateModified:
          description: The UTC date time of the last entity modification
          format: date-time
          title: Last Modification Date and Time
          type: string
        drillingDaysTarget:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Target days for drilling wellbore.
          title: Target Drilling Days
        elevationReference:
          allOf:
            - $ref: '#/components/schemas/SimpleElevationReference'
          description: >-
            The wellbore's elevation reference from mean sea level (MSL),
            positive above MSL. This is where MD == 0 and TVD == 0
          title: Elevation Reference
        externalIds:
          description: >-
            An array of identities (e.g. some kind if URL to be resolved in an
            external data store), which links to external realizations of the
            same entity.
          items:
            type: string
          title: Array of External IDs
          type: array
        field:
          description: The field name, to which the wellbore belongs.
          title: Field
          type: string
        formationAtTd:
          description: The name of the formation at the wellbore's total depth.
          title: Formation at TD
          type: string
        formationProjected:
          description: >-
            The name of the formation at the wellbore's projected depth. This
            property is questionable as there is not precise documentation
            available.
          title: Formation Projected
          type: string
        hasAchievedTotalDepth:
          default: true
          description: >-
            True ("true" of "1") indicates that the wellbore has acheieved total
            depth. That is, drilling has completed. False ("false" or "0")
            indicates otherwise. Not given indicates that it is not known
            whether total depth has been reached.
          title: Has Total Depth Been Achieved Flag
          type: boolean
        isActive:
          description: >-
            True (="1" or "true") indicates that the wellbore is active. False
            (="0" or "false") indicates otherwise. It is the servers
            responsibility to set this value based on its available internal
            data (e.g., what objects are changing).
          title: Is Active Flag
          type: boolean
        kickOffMd:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The kick-off point in measured depth (MD); for the main well the
            kickOffMd is set to 0.
          title: Kick-off MD
        kickOffTvd:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Kickoff true vertical depth of the wellbore; for the main wellbore
            the kickOffMd is set to 0.
          title: Kick-off MD
        locationWGS84:
          allOf:
            - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: >-
            A 2D GeoJSON FeatureCollection defining wellbore location or
            trajectory in WGS 84 CRS.
          title: Wellbore Shape WGS 84
        name:
          description: The wellbore name
          title: Wellbore Name
          type: string
        operator:
          description: The operator of the wellbore.
          title: Operator
          type: string
        permitDate:
          description: The wellbore's permit date.
          format: date
          title: Permit Date
          type: string
        permitNumber:
          description: The wellbore's permit number or permit ID.
          title: Permit Number
          type: string
        plssLocation:
          allOf:
            - $ref: '#/components/schemas/PlssLocation'
          description: >-
            A location described by the Public Land Survey System (United
            States)
          title: US PLSS Location
        propertyDictionary:
          description: >-
            A dictionary structure, i.e. key/string value pairs, to carry
            additional wellbore properties.
          title: Property Dictionary
          type: object
        relationships:
          allOf:
            - $ref: '#/components/schemas/wellborerelationships'
          description: The related entities.
          title: Relationships
        shape:
          allOf:
            - $ref: '#/components/schemas/Shape'
          description: POSC wellbore trajectory shape.
          title: Wellbore Shape
        spudDate:
          description: >-
            The date and time when activities to drill the borehole begin to
            create a hole in the earth. For a sidetrack, this is the date
            kickoff operations began. The format follows ISO 8601 YYYY-MM-DD
            extended format
          format: date
          title: Spud Date
          type: string
        state:
          description: The state name, in which the wellbore is located.
          title: State
          type: string
        totalDepthMd:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The measured depth of the borehole. If status is plugged, indicates
            the maximum depth reached before plugging. It is recommended that
            this value be updated about every 10 minutes by an assigned raw data
            provider at a site.
          title: Total MD
        totalDepthMdDriller:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The total depth along the wellbore as reported by the drilling
            contractor from 'elevationReference'. The unit definition is found
            via the property's unitKey' in 'frameOfReference.units' dictionary..
          title: Total MD Drilled
        totalDepthMdPlanned:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Planned measured depth for the wellbore total depth.
          title: Total MD Planned
        totalDepthMdSubSeaPlanned:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Planned measured for the wellbore total depth - with respect to
            seabed.
          title: Total MD Sub Sea Planned
        totalDepthProjectedMd:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The projected total measured depth of the borehole. This property is
            questionable as there is not precise documentation available.
          title: Total MD Projected
        totalDepthTvd:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The true vertical depth of the borehole. If status is plugged,
            indicates the maximum depth reached before plugging. It is
            recommended that this value be updated about every 10 minutes by an
            assigned raw data provider at a site.
          title: Total TVD
        totalDepthTvdDriller:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The total depth true vertical as reported by the drilling contractor
            from 'elevationReference', Downwards increasing. The unit definition
            is found via the property's unitKey' in 'frameOfReference.units'
            dictionary.
          title: Total TVD Drilled
        totalDepthTvdPlanned:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: Planned true vertical depth for the wellbore total depth.
          title: Total TVD Planned
        totalDepthTvdSubSeaPlanned:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Planned true vertical depth for the wellbore total depth - with
            respect to seabed.
          title: Total TVD Sub Sea Planned
        uwi:
          description: >-
            The unique wellbore identifier, aka. API number, US well number or
            UBHI. Codes can have 10, 12 or 14 digits depending on the
            availability of directional sidetrack (2 digits) and event sequence
            codes (2 digits).
          title: Unique Wellbore Identifier
          type: string
        wellHeadElevation:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            The wellbore's vertical position is an elevation from mean sea level
            (MSL), positive above MSL.
          title: Well Head Elevation
        wellHeadGeographic:
          allOf:
            - $ref: '#/components/schemas/geographicPosition'
          description: >-
            The wellbore's well head position in the native, geographic CRS;
            vertical position is an elevation from mean sea level (MSL),
            positive above MSL.
          title: Well Head Position, Geographic
        wellHeadProjected:
          allOf:
            - $ref: '#/components/schemas/projectedPosition'
          description: >-
            The wellbore's well head position in the native, projected CRS;
            vertical position is an elevation from mean sea level (MSL),
            positive above MSL.
          title: Well Head Position, Projected
        wellHeadWgs84:
          allOf:
            - $ref: '#/components/schemas/core_dl_geopoint'
          description: The wellbore's position in WGS 84 latitude and longitude.
          title: WGS 84 Position
        wellboreNumberGovernment:
          description: Government assigned wellbore number.
          title: Government Number
          type: string
        wellboreNumberOperator:
          description: Operator wellbore number.
          title: Operator Number
          type: string
        wellborePurpose:
          allOf:
            - $ref: '#/components/schemas/WellborePurpose'
          description: POSC wellbore purpose
          title: Wellbore Purpose
        wellboreStatus:
          allOf:
            - $ref: '#/components/schemas/WellboreStatus'
          description: POSC wellbore status.
          title: Wellbore Status
        wellboreType:
          allOf:
            - $ref: '#/components/schemas/WellboreType'
          description: Type of wellbore.
          title: Wellbore Type
      title: wellboreData
      type: object
    wellborerelationships:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        definitiveTimeDepthRelation:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The definitive tome-depth relation providing the MD to seismic
            travel-time transformation.
          title: Definitive Time-Depth Relation
        definitiveTrajectory:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: >-
            The definitive trajectory providing the MD to 3D space
            transformation.
          title: Definitive Trajectory
        tieInWellbore:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The tie-in wellbore if this wellbore is a side-track.
          title: Tie-in Wellbore
        well:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The well to which this wellbore belongs.
          title: Well
      title: wellborerelationships
      type: object
    wellrelationships:
      description: >-
        Used for data model allows extra fields which are not declared initially
        in the pydantic model
      properties:
        asset:
          allOf:
            - $ref: '#/components/schemas/ToOneRelationship'
          description: The asset this well belongs to.
          title: Asset
      title: wellrelationships
      type: object
    wgs84Position:
      additionalProperties: false
      description: >-
        The base model forbids fields which are not declared initially in the
        pydantic model
      properties:
        elevationFromMsl:
          allOf:
            - $ref: '#/components/schemas/ValueWithUnit'
          description: >-
            Elevation from Mean Seal Level, downwards negative. The unit
            definition is found via 'elevationFromMsl.unitKey' in
            'frameOfReference.units' dictionary.
          title: Elevation from MSL
        latitude:
          description: WGS 84 latitude value in degrees (dega)
          title: WGS 84 Latitude
          type: number
        longitude:
          description: WGS 84 longitude value in degrees (dega)
          title: WGS 84 Longitude
          type: number
      required:
        - elevationFromMsl
        - latitude
        - longitude
      title: wgs84Position
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http

paths:
  /about:
    get:
      operationId: get_about_about_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutResponse'
          description: Successful Response
      summary: Get About
      tags:
        - Wellbore DDMS
  /ddms/v3/fastquery/wellbore/{wellbore_attribute}/welllogs:
    post:
      description: >
        Get all WellLogs IDs objects using a specific attribute of Wellbores. 
        <p>All WellLogs linked to Wellbores
                    with this specific attribute will be returned</p>
                    <p>The LogSet kind is *:wks:work-product-component--WellLog:* returns all records IDs directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        fastquery_welllogs_bywellboreattribute_ddms_v3_fastquery_wellbore__wellbore_attribute__welllogs_post
      parameters:
        - in: path
          name: wellbore_attribute
          required: true
          schema:
            title: Wellbore Attribute
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQuery'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor, search WellLogs IDs by wellbore attribute
      tags:
        - fast-search v3
  /ddms/v3/fastquery/wellbores:
    post:
      description: >
        Get all Wellbores IDs object.  <p>The wellbore kind is
                *:wks:master-data--Wellbore:* returns all records IDs IDs directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: fastquery_wellbores_ddms_v3_fastquery_wellbores_post
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor
      tags:
        - fast-search v3
  /ddms/v3/fastquery/wellbores/{wellbore_id}/wellboremarkersets:
    post:
      description: >
        Get all Wellbore Markersets IDs objects using its relationship Wellbore
        ID.  <p>All Markers linked to this
                    specific ID will be returned</p>
                    <p>The Marker kind is *:wks:work-product-component--WellboreMarkerSet:* returns all records IDs directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        fastquery_markers_bywellbore_ddms_v3_fastquery_wellbores__wellbore_id__wellboremarkersets_post
      parameters:
        - in: path
          name: wellbore_id
          required: true
          schema:
            title: Wellbore Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor, search wellbore markersets IDs by wellbore ID
      tags:
        - fast-search v3
  /ddms/v3/fastquery/wellbores/{wellbore_id}/welllogs:
    post:
      description: >
        Get all WellLogs IDs objects using its relationship Wellbore ID.  <p>All
        WellLogs linked to this
                    specific ID will be returned</p>
                    <p>The LogSet kind is *:wks:work-product-component--WellLog:* returns all records IDs directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        fastquery_welllogs_bywellbore_ddms_v3_fastquery_wellbores__wellbore_id__welllogs_post
      parameters:
        - in: path
          name: wellbore_id
          required: true
          schema:
            title: Wellbore Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor, search WellLogs IDs by wellbore ID
      tags:
        - fast-search v3
  /ddms/v3/query/wellbore/{wellboreAttribute}/welllogs:
    post:
      description: >
        Get all WellLogs object using a specific attribute of Wellbores.  <p>All
        WellLogs linked to Wellbores
                    with this specific attribute will be returned</p>
                    <p>The WellLogs kind is *:wks:work-product-component--WellLog:* returns all records directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        query_welllogs_bywellboreattribute_ddms_v3_query_wellbore__wellboreAttribute__welllogs_post
      parameters:
        - in: path
          name: wellboreAttribute
          required: true
          schema:
            title: Wellboreattribute
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQuery'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor, search WellLogs by wellbore attribute
      tags:
        - search v3
  /ddms/v3/query/wellbores:
    post:
      description: >
        Get all Wellbores object.  <p>The wellbore kind is
        *:wks:master-data--Wellbore:*
                returns all records directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: query_wellbores_ddms_v3_query_wellbores_post
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor, get wellbores
      tags:
        - search v3
  /ddms/v3/query/wellbores/{wellboreId}/wellboremarkersets:
    post:
      description: >
        Get all Wellbore Markersets objects using its relationship Wellbore ID. 
        <p>All Markers linked to this
                    specific ID will be returned</p>
                    <p>The Wellbore Markerset kind is *:wks:work-product-component--WellboreMarkerSet:* returns all records directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        query_markers_bywellbore_ddms_v3_query_wellbores__wellboreId__wellboremarkersets_post
      parameters:
        - in: path
          name: wellboreId
          required: true
          schema:
            title: Wellboreid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor, search wellbore markersets by wellbore ID
      tags:
        - search v3
  /ddms/v3/query/wellbores/{wellboreId}/welllogs:
    post:
      description: >
        Get all WellLogs object using its relationship Wellbore ID.  <p>All
        WellLogs linked to this
                    specific ID will be returned</p>
                    <p>The WellLogs kind is *:wks:work-product-component--WellLog:* returns all records directly based on existing schemas</p>
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        query_welllogs_bywellbore_ddms_v3_query_wellbores__wellboreId__welllogs_post
      parameters:
        - in: path
          name: wellboreId
          required: true
          schema:
            title: Wellboreid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Query with cursor, search WellLogs by wellbore ID
      tags:
        - search v3
  /ddms/v3/records/delete:
    post:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_del_multiple_osdu_records
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              title: Record Ids
              type: array
        required: true
      responses:
        '204':
          description: Records deleted successfully
        '404':
          description: record/s not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Delete records. The API performs a logical deletion of the given
        records. 
      tags:
        - Delete records V3
  /ddms/v3/wellboremarkersets:
    post:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_wellboreMarkerset_osdu
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            example:
              acl:
                owners:
                  - data.default.owners@{{datapartitionid}}.{{domain}}
                viewers:
                  - data.default.viewers@{{datapartitionid}}.{{domain}}
              ancestry:
                parents: []
              createTime: '2020-12-16T11:46:20.163Z'
              createUser: some-user@some-company-cloud.com
              data:
                Artefacts:
                  - ResourceID: string
                    ResourceKind: string
                    RoleID: string
                AuthorIDs:
                  - string
                AvailableMarkerProperties:
                  - MarkerPropertyTypeID: >-
                      partition-id:reference-data--MarkerPropertyType:MissingThickness:
                    MarkerPropertyUnitID: 'partition-id:reference-data--UnitOfMeasure:ft:'
                    Name: MissingThickness
                BusinessActivities:
                  - string
                CreationDateTime: '2021-12-02T15:19:19.271Z'
                Datasets:
                  - string
                Description: string
                ExistenceKind: string
                ExtensionProperties: {}
                GeoContexts:
                  - string
                IsDiscoverable: true
                IsExtendedLoad: true
                LineageAssertions:
                  - ID: string
                    LineageRelationshipType: string
                Markers:
                  - FeatureName: string
                    FeatureTypeID: string
                    GeologicalAge: string
                    MarkerDate: '2021-12-02T15:19:19.271Z'
                    MarkerInterpreter: string
                    MarkerMeasuredDepth: 0
                    MarkerName: string
                    MarkerObservationNumber: 0
                    MarkerSubSeaVerticalDepth: 0
                    MarkerTypeID: string
                    Missing: string
                    NegativeVerticalDelta: 0
                    PositiveVerticalDelta: 0
                    SurfaceDipAngle: 0
                    SurfaceDipAzimuth: 0
                Name: string
                ResourceCurationStatus: string
                ResourceHomeRegionID: string
                ResourceHostRegionIDs:
                  - string
                ResourceLifecycleStatus: string
                ResourceSecurityClassification: string
                Source: string
                SpatialArea: string
                SpatialPoint: string
                SubmitterName: string
                Tags:
                  - string
                VerticalMeasurement: string
                WellboreID: string
              id: >-
                namespace:work-product-component--WellboreMarkerSet:d5303b79-7904-5bfe-9c44-9a3ff41b6d6c
              kind: osdu:wks:work-product-component--WellboreMarkerSet:1.1.0
              legal:
                legaltags:
                  - '{{legaltags}}'
                otherRelevantDataCountries:
                  - FR
                  - US
              meta:
                - string
              modifyTime: '2020-12-16T11:52:24.477Z'
              modifyUser: some-user@some-company-cloud.com
              tags:
                NameOfKey: String value
              version: 1562066009929332
            schema:
              items:
                $ref: '#/components/schemas/WellboreMarkerSet110'
              title: Wellboremarkersets
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
          description: Successful Response
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create or update the Wellbore Markerset using osdu schema
      tags:
        - Marker
  /ddms/v3/wellboremarkersets/{wellboremarkersetid}:
    delete:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: del_osdu_wellboreMarkerset
      parameters:
        - in: path
          name: wellboremarkersetid
          required: true
          schema:
            title: Wellboremarkersetid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '204':
          description: Record deleted successfully
        '404':
          description: WellboreMarkerSet not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Delete the wellboreMarkerset. The API performs a logical deletion of the
        given record. No recursive delete for OSDU kinds
      tags:
        - Marker
    get:
      description: >
        Get the WellboreMarkerSet object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_wellbore_markerset_osdu
      parameters:
        - in: path
          name: wellboremarkersetid
          required: true
          schema:
            title: Wellboremarkersetid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreMarkerSet110'
          description: Successful Response
        '404':
          description: Wellbore Marker Set not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the WellboreMarkerSet using osdu schema
      tags:
        - Marker
  /ddms/v3/wellboremarkersets/{wellboremarkersetid}/versions:
    get:
      description: >

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_wellboreMarkerset_versions
      parameters:
        - in: path
          name: wellboremarkersetid
          required: true
          schema:
            title: Wellboremarkersetid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
          description: Successful Response
        '404':
          description: WellboreMarkerSet not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get all versions of the WellboreMarkerSet
      tags:
        - Marker
  /ddms/v3/wellboremarkersets/{wellboremarkersetid}/versions/{version}:
    get:
      description: >
        "Get the WellboreMarkerSet object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_wellboreMarkerset_version
      parameters:
        - in: path
          name: wellboremarkersetid
          required: true
          schema:
            title: Wellboremarkersetid
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreMarkerSet110'
          description: Successful Response
        '404':
          description: WellboreMarkerSet not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Get the given version of the WellboreMarkerSet using OSDU
        WellboreMarkerset schema
      tags:
        - Marker
  /ddms/v3/wellbores:
    post:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_wellbore_osdu
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            example:
              - acl:
                  owners:
                    - data.default.owners@{{datapartitionid}}.{{domain}}
                  viewers:
                    - data.default.viewers@{{datapartitionid}}.{{domain}}
                data:
                  ExtensionProperties: {}
                  FacilityName: '{{wellboreName}}'
                  FacilityNameAliases:
                    - AliasName: 33-089-00300-00-01
                      AliasNameTypeID: >-
                        {{datapartitionid}}:osdu:reference-data--AliasNameType:UniqueIdentifier:
                  FacilityOperators:
                    - FacilityOperatorID: Francois Vinyes
                  Geocontexts:
                    - GeoPoliticalEntityID: >-
                        {{datapartitionid}}:osdu:master-data--GeoPoliticalEntity:USA:
                      GeoTypeID: >-
                        datapartition:osdu:reference-data--GeoPoliticalEntityType:Country:
                  SpatialLocation:
                    Wgs84Coordinates:
                      features:
                        - geometry:
                            coordinates:
                              - - -103.2380248
                                - 46.8925081
                                - 5301
                              - - -103.2380248
                                - 46.8925081
                                - 2801
                              - - -103.2378748
                                - 46.892608100000004
                                - 301
                              - - -103.23742477750001
                                - 46.89270811
                                - -2199
                              - - -103.23667470999663
                                - 46.892808120001
                                - -4699
                              - - -103.2356245974865
                                - 46.892908130002
                                - -7199
                            type: LineString
                          properties:
                            name: Newton 2-31-Lat-1
                          type: Feature
                      type: FeatureCollection
                  WellID: '{{datapartitionid}}:master-data--Well:{{wellId}}:'
                id: '{{datapartitionid}}:master-data--Wellbore:{{wellboreId}}:'
                kind: osdu:wks:master-data--Wellbore:1.0.0
                legal:
                  legaltags:
                    - '{{legaltags}}'
                  otherRelevantDataCountries:
                    - FR
                    - US
                meta:
                  - kind: Unit
                    name: Measure depth default unit
                    persistableReference: persistableReference
                    propertyNames:
                      - symbol
                    propertyValues:
                      - ft
            schema:
              items:
                $ref: '#/components/schemas/Wellbore'
              title: Wellbores
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
          description: Successful Response
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create or update the Wellbores using osdu schema
      tags:
        - Wellbore
  /ddms/v3/wellbores/{wellboreid}:
    delete:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: del_osdu_wellbore
      parameters:
        - in: path
          name: wellboreid
          required: true
          schema:
            title: Wellboreid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '204':
          description: Record deleted successfully
        '404':
          description: Wellbore not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Delete the wellbore. The API performs a logical deletion of the given
        record. No recursive delete for OSDU kinds
      tags:
        - Wellbore
    get:
      description: >
        Get the Wellbore object using its **id**.

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_wellbore_osdu
      parameters:
        - in: path
          name: wellboreid
          required: true
          schema:
            title: Wellboreid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wellbore'
          description: Successful Response
        '404':
          description: Wellbore not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the Wellbore using osdu schema
      tags:
        - Wellbore
  /ddms/v3/wellbores/{wellboreid}/versions:
    get:
      description: >

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_wellbore_versions
      parameters:
        - in: path
          name: wellboreid
          required: true
          schema:
            title: Wellboreid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
          description: Successful Response
        '404':
          description: Wellbore not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get all versions of the Wellbore
      tags:
        - Wellbore
  /ddms/v3/wellbores/{wellboreid}/versions/{version}:
    get:
      description: >
        "Get the Wellbore object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_wellbore_version
      parameters:
        - in: path
          name: wellboreid
          required: true
          schema:
            title: Wellboreid
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wellbore'
          description: Successful Response
        '404':
          description: Wellbore not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the given version of the Wellbore using OSDU wellbore schema
      tags:
        - Wellbore
  /ddms/v3/wellboretrajectories:
    post:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_wellboreTrajectory_osdu
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            example:
              - acl:
                  owners:
                    - data.default.owners@{{datapartitionid}}.{{domain}}
                  viewers:
                    - data.default.viewers@{{datapartitionid}}.{{domain}}
                data:
                  ExtensionProperties: {}
                  FacilityName: '{{wellboreName}}'
                  FacilityNameAliases:
                    - AliasName: 33-089-00300-00-01
                      AliasNameTypeID: >-
                        {{datapartitionid}}:osdu:reference-data--AliasNameType:UniqueIdentifier:
                  FacilityOperators:
                    - FacilityOperatorID: Francois Vinyes
                  Geocontexts:
                    - GeoPoliticalEntityID: >-
                        {{datapartitionid}}:osdu:master-data--GeoPoliticalEntity:USA:
                      GeoTypeID: >-
                        datapartition:osdu:reference-data--GeoPoliticalEntityType:Country:
                  SpatialLocation:
                    Wgs84Coordinates:
                      features:
                        - geometry:
                            coordinates:
                              - - -103.2380248
                                - 46.8925081
                                - 5301
                              - - -103.2380248
                                - 46.8925081
                                - 2801
                              - - -103.2378748
                                - 46.892608100000004
                                - 301
                              - - -103.23742477750001
                                - 46.89270811
                                - -2199
                              - - -103.23667470999663
                                - 46.892808120001
                                - -4699
                              - - -103.2356245974865
                                - 46.892908130002
                                - -7199
                            type: LineString
                          properties:
                            name: Newton 2-31-Lat-1
                          type: Feature
                      type: FeatureCollection
                  WellID: '{{datapartitionid}}:master-data--Well:{{wellId}}:'
                id: '{{datapartitionid}}:master-data--Wellbore:{{wellboreId}}:'
                kind: osdu:wks:master-data--Wellbore:1.0.0
                legal:
                  legaltags:
                    - '{{legaltags}}'
                  otherRelevantDataCountries:
                    - FR
                    - US
                meta:
                  - kind: Unit
                    name: Measure depth default unit
                    persistableReference: persistableReference
                    propertyNames:
                      - symbol
                    propertyValues:
                      - ft
            schema:
              items:
                $ref: '#/components/schemas/WellboreTrajectory110'
              title: Wellboretrajectories
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
          description: Successful Response
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create or update the WellboreTrajectories using osdu schema
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{record_id}/data:
    get:
      description: >
        Returns the data according to the specified query parameters. Multiple
        media types response are available ("application/json",
        "application/x-parquet"). The desired format can be specify in "Accept"
        header. The default is Parquet. When bulk statistics are requested using
        "describe" parameter, the response is always provided in JSON.

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_data_ddms_v3_wellboretrajectories__record_id__data_get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: >-
            The number of rows that are to be skipped and not included in the
            result.
          example: 5
          in: query
          name: offset
          required: false
          schema:
            description: >-
              The number of rows that are to be skipped and not included in the
              result.
            minimum: 0
            title: Offset
            type: integer
        - description: The maximum number of rows to be returned.
          example: 100
          in: query
          name: limit
          required: false
          schema:
            description: The maximum number of rows to be returned.
            minimum: 1
            title: Limit
            type: integer
        - description: >-
            Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
          example: MD,GR
          in: query
          name: curves
          required: false
          schema:
            description: >-
              Filters curves. List of curves to be returned. The curves are
              returned in the same order as it is given.
            title: Curves
            type: string
        - description: >-
            The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          example: 'false'
          in: query
          name: describe
          required: false
          schema:
            default: false
            description: >-
              The "describe" query option allows clients to request a
              description of the matching result. (number of rows, columns name)
            title: Describe
            type: boolean
        - description: >

            The "filter" query parameter allows clients to filter data following
            the pattern $column_name:$operator:$value

            <br/>supported operation : eq,gt,gte,in,lt,lte,neq

            <br/>see [website for Filtering API
            Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
          example: MD:lt:1000
          in: query
          name: filter
          required: false
          schema:
            description: >

              The "filter" query parameter allows clients to filter data
              following the pattern $column_name:$operator:$value

              <br/>supported operation : eq,gt,gte,in,lt,lte,neq

              <br/>see [website for Filtering API
              Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
            items:
              type: string
            title: Filter
            type: array
        - description: format for JSON only.
          in: query
          name: orient
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/JSONOrient'
            default: split
            description: format for JSON only.
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
          description: Successful Response
        '404':
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Returns the data according to the specified query parameters.
      tags:
        - Trajectory v3
    post:
      description: >-

        Writes data to the associated record. It creates a new version.

        Payload is expected to contain the entire bulk which will replace as
        latest version

        any previous bulk. Previous bulk versions are accessible via the get
        bulk data version API.

        Support JSON and Parquet format ('Content_Type' must be set
        accordingly).

        Support http chunked encoding transfer.

        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_data_ddms_v3_wellboretrajectories__record_id__data_post
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: |-
                {
                  "columns":[
                    "Ref",
                    "col_1",
                    "col_2"
                  ],
                  "index":[
                    0,
                    1,
                    2,
                    3,
                    4
                  ],
                  "data":[
                    [
                      0.0,
                      1111.1,
                      2222.1
                    ],
                    [
                      0.5,
                      1111.2,
                      2222.2
                    ],
                    [
                      1.0,
                      1111.3,
                      2222.3
                    ],
                    [
                      1.5,
                      1111.4,
                      2222.4
                    ],
                    [
                      2.0,
                      1111.5,
                      2222.5
                    ]
                  ]
                }
          application/x-parquet:
            schema:
              format: binary
              type: string
        description: >-

          Contains the data corresponding to the dataframe. The header
          "Content-Type" must be set accordingly to the format sent:

          <br/>&nbsp;**Parquet** format(*application/x-parquet*): see [Apache
          parquet website](https://parquet.apache.org/).

          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe
          JSON format orient
          "split"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).

          .
           Examples in JSON for data with 5 rows and 3 columns: 
          <br/>`{"columns":["Ref","col_1","col_2"],"index":[0,1,2,3,4],"data":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '404':
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Writes data as a whole bulk, creates a new version.
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{record_id}/sessions:
    get:
      operationId: list_session_ddms_v3_wellboretrajectories__record_id__sessions_get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                title: >-
                  Response List Session Ddms V3 Wellboretrajectories  Record Id 
                  Sessions Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: list session of the given record.
      tags:
        - Trajectory v3
    post:
      description: >-
        Initiate a session based on record version provided. The session is
        isolated from any other modifications. Inside a session, individual
        chunk doesn't generate new individual version. A new single version is
        created only at session completion 'aggregating' all updates. A typical
        workflow is:

        1. create a session

        2. send X chunks (can be parallelized)

        3. commit the session


        Session has an expiry time. If the session is not completed before, it's
        automatically dropped. The session duration is specified in the request
        but cannot exceeds 24 hours.
      operationId: create_session_ddms_v3_wellboretrajectories__record_id__sessions_post
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSessionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create a new session on the given record for writing bulk data.
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{record_id}/sessions/{session_id}:
    get:
      operationId: >-
        get_session_ddms_v3_wellboretrajectories__record_id__sessions__session_id__get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            title: Session Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: get session.
      tags:
        - Trajectory v3
    patch:
      operationId: >-
        complete_session_ddms_v3_wellboretrajectories__record_id__sessions__session_id__patch
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            title: Session Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionState'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Update a session, either commit or abandon.
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{record_id}/sessions/{session_id}/data:
    post:
      description: >-
        Send a data chunk. Session must be complete/commit once all chunks are
        sent. This will create a new and single version aggregating all and
        previous bulk.Support JSON and Parquet format ('Content_Type' must be
        set accordingly). Support http chunked encoding.<p>Required roles:
        'users.datalake.editors' or 'users.datalake.admins'.</p>
      operationId: >-
        post_chunk_data_ddms_v3_wellboretrajectories__record_id__sessions__session_id__data_post
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            title: Session Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: |-
                {
                  "columns":[
                    "Ref",
                    "col_1",
                    "col_2"
                  ],
                  "index":[
                    0,
                    1,
                    2,
                    3,
                    4
                  ],
                  "data":[
                    [
                      0.0,
                      1111.1,
                      2222.1
                    ],
                    [
                      0.5,
                      1111.2,
                      2222.2
                    ],
                    [
                      1.0,
                      1111.3,
                      2222.3
                    ],
                    [
                      1.5,
                      1111.4,
                      2222.4
                    ],
                    [
                      2.0,
                      1111.5,
                      2222.5
                    ]
                  ]
                }
          application/x-parquet:
            schema:
              format: binary
              type: string
        description: >-

          Contains the data corresponding to the dataframe. The header
          "Content-Type" must be set accordingly to the format sent:

          <br/>&nbsp;**Parquet** format(*application/x-parquet*): see [Apache
          parquet website](https://parquet.apache.org/).

          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe
          JSON format orient
          "split"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).

          .
           Examples in JSON for data with 5 rows and 3 columns: 
          <br/>`{"columns":["Ref","col_1","col_2"],"index":[0,1,2,3,4],"data":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '400':
          description: Record not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Send a data chunk. Session must be complete/commit once all chunks are
        sent.
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{record_id}/versions/{version}/data:
    get:
      description: >
        Returns the data of a specific version according to the specified query
        parameters. Multiple media types response are available
        ("application/json", "application/x-parquet") The desired format can be
        specify in "Accept" header. The default is Parquet. When bulk statistics
        are requested using "describe" parameter, the response is always
        provided in JSON

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        get_data_version_ddms_v3_wellboretrajectories__record_id__versions__version__data_get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - description: >-
            The number of rows that are to be skipped and not included in the
            result.
          example: 5
          in: query
          name: offset
          required: false
          schema:
            description: >-
              The number of rows that are to be skipped and not included in the
              result.
            minimum: 0
            title: Offset
            type: integer
        - description: The maximum number of rows to be returned.
          example: 100
          in: query
          name: limit
          required: false
          schema:
            description: The maximum number of rows to be returned.
            minimum: 1
            title: Limit
            type: integer
        - description: >-
            Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
          example: MD,GR
          in: query
          name: curves
          required: false
          schema:
            description: >-
              Filters curves. List of curves to be returned. The curves are
              returned in the same order as it is given.
            title: Curves
            type: string
        - description: >-
            The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          example: 'false'
          in: query
          name: describe
          required: false
          schema:
            default: false
            description: >-
              The "describe" query option allows clients to request a
              description of the matching result. (number of rows, columns name)
            title: Describe
            type: boolean
        - description: >

            The "filter" query parameter allows clients to filter data following
            the pattern $column_name:$operator:$value

            <br/>supported operation : eq,gt,gte,in,lt,lte,neq

            <br/>see [website for Filtering API
            Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
          example: MD:lt:1000
          in: query
          name: filter
          required: false
          schema:
            description: >

              The "filter" query parameter allows clients to filter data
              following the pattern $column_name:$operator:$value

              <br/>supported operation : eq,gt,gte,in,lt,lte,neq

              <br/>see [website for Filtering API
              Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
            items:
              type: string
            title: Filter
            type: array
        - description: format for JSON only.
          in: query
          name: orient
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/JSONOrient'
            default: split
            description: format for JSON only.
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
          description: Successful Response
        '404':
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Returns data of the specified version.
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{wellboretrajectoryid}:
    delete:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: del_osdu_wellboreTrajectory
      parameters:
        - in: path
          name: wellboretrajectoryid
          required: true
          schema:
            title: Wellboretrajectoryid
            type: string
        - in: query
          name: purge
          required: false
          schema:
            default: false
            title: Purge
            type: boolean
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '204':
          description: Record deleted successfully
        '404':
          description: WellboreTrajectory not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Delete the wellboreTrajectory. The API performs a logical deletion of
        the given record. No recursive delete for OSDU kinds
      tags:
        - Trajectory v3
    get:
      description: >
        Get the WellboreTrajectory object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_wellbore_trajectory_osdu
      parameters:
        - in: path
          name: wellboretrajectoryid
          required: true
          schema:
            title: Wellboretrajectoryid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreTrajectory110'
          description: Successful Response
        '404':
          description: Wellbore Trajectory not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the WellboreTrajectory using osdu schema
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{wellboretrajectoryid}/versions:
    get:
      description: >

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_wellboreTrajectory_versions
      parameters:
        - in: path
          name: wellboretrajectoryid
          required: true
          schema:
            title: Wellboretrajectoryid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
          description: Successful Response
        '404':
          description: WellboreTrajectory not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get all versions of the WellboreTrajectory
      tags:
        - Trajectory v3
  /ddms/v3/wellboretrajectories/{wellboretrajectoryid}/versions/{version}:
    get:
      description: >
        "Get the WellboreTrajectory object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_wellboreTrajectory_version
      parameters:
        - in: path
          name: wellboretrajectoryid
          required: true
          schema:
            title: Wellboretrajectoryid
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreTrajectory110'
          description: Successful Response
        '404':
          description: WellboreTrajectory not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Get the given version of the WellboreTrajectory using OSDU
        wellboreTrajectory schema
      tags:
        - Trajectory v3
  /ddms/v3/welllogs:
    post:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_welllog_osdu
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            example:
              - acl:
                  owners:
                    - data.default.owners@{{datapartitionid}}.{{domain}}
                  viewers:
                    - data.default.viewers@{{datapartitionid}}.{{domain}}
                data:
                  BottomMeasuredDepth: 13856.2
                  CreationDateTime: '2013-03-22T11:16:03Z'
                  Curves:
                    - CurveID: GR_ID
                      CurveUnit: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                      LogCurveFamilyID: >-
                        {{datapartitionid}}:reference-data--LogCurveFamily:GammaRay:
                      Mnemonic: GR
                      NumberOfColumns: 1
                    - CurveID: POR_ID
                      CurveUnit: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                      LogCurveFamilyID: >-
                        {{datapartitionid}}:reference-data--LogCurveFamily:NeutronPorosity:
                      Mnemonic: NPOR
                      NumberOfColumns: 1
                    - CurveID: Bulk Density
                      CurveUnit: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                      LogCurveFamilyID: >-
                        {{datapartitionid}}:reference-data--LogCurveFamily:BulkDensity:
                      Mnemonic: RHOB
                  IsRegular: true
                  Name: '{{welllogName}}'
                  SamplingDomainTypeID: >-
                    {{datapartitionid}}:reference-data--WellLogSamplingDomainType:Depth:
                  SamplingInterval: 0.1
                  TopMeasuredDepth: 12345.6
                  VerticalMeasurement:
                    VerticalMeasurement: 2680.5
                    VerticalMeasurementPathID: >-
                      {{datapartitionid}}:reference-data--VerticalMeasurementPath:MD:
                    VerticalMeasurementUnitOfMeasureID: '{{datapartitionid}}:reference-data--UnitOfMeasure:ft:'
                  WellboreID: '{{datapartitionid}}:master-data--Wellbore:{{wellboreId}}:'
                id: >-
                  {{datapartitionid}}:work-product-component--WellLog:{{welllogId}}
                kind: osdu:wks:work-product-component--WellLog:1.1.0
                legal:
                  legaltags:
                    - '{{legaltags}}'
                  otherRelevantDataCountries:
                    - US
                    - FR
                meta:
                  - kind: Unit
                    name: ft
                    persistableReference: >-
                      {"scaleOffset":{"scale":0.3048,"offset":0.0},"symbol":"ft","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}
                    propertyNames:
                      - TopMeasuredDepth
                      - BottomMeasuredDepth
                      - SamplingInterval
                    propertyValues:
                      - ft
                  - kind: DateTime
                    name: datetime
                    persistableReference: >-
                      {"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}
                    propertyNames:
                      - dateModified
                      - dateCreated
            schema:
              items:
                $ref: '#/components/schemas/WellLog110'
              title: Welllogs
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
          description: Successful Response
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create or update the WellLogs using osdu schema
      tags:
        - WellLog
  /ddms/v3/welllogs/{record_id}/data:
    get:
      description: >
        Returns the data according to the specified query parameters. Multiple
        media types response are available ("application/json",
        "application/x-parquet"). The desired format can be specify in "Accept"
        header. The default is Parquet. When bulk statistics are requested using
        "describe" parameter, the response is always provided in JSON.

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_data_ddms_v3_welllogs__record_id__data_get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: >-
            The number of rows that are to be skipped and not included in the
            result.
          example: 5
          in: query
          name: offset
          required: false
          schema:
            description: >-
              The number of rows that are to be skipped and not included in the
              result.
            minimum: 0
            title: Offset
            type: integer
        - description: The maximum number of rows to be returned.
          example: 100
          in: query
          name: limit
          required: false
          schema:
            description: The maximum number of rows to be returned.
            minimum: 1
            title: Limit
            type: integer
        - description: >-
            Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
          example: MD,GR
          in: query
          name: curves
          required: false
          schema:
            description: >-
              Filters curves. List of curves to be returned. The curves are
              returned in the same order as it is given.
            title: Curves
            type: string
        - description: >-
            The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          example: 'false'
          in: query
          name: describe
          required: false
          schema:
            default: false
            description: >-
              The "describe" query option allows clients to request a
              description of the matching result. (number of rows, columns name)
            title: Describe
            type: boolean
        - description: >

            The "filter" query parameter allows clients to filter data following
            the pattern $column_name:$operator:$value

            <br/>supported operation : eq,gt,gte,in,lt,lte,neq

            <br/>see [website for Filtering API
            Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
          example: MD:lt:1000
          in: query
          name: filter
          required: false
          schema:
            description: >

              The "filter" query parameter allows clients to filter data
              following the pattern $column_name:$operator:$value

              <br/>supported operation : eq,gt,gte,in,lt,lte,neq

              <br/>see [website for Filtering API
              Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
            items:
              type: string
            title: Filter
            type: array
        - description: format for JSON only.
          in: query
          name: orient
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/JSONOrient'
            default: split
            description: format for JSON only.
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
          description: Successful Response
        '404':
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Returns the data according to the specified query parameters.
      tags:
        - WellLog
    post:
      description: >-

        Writes data to the associated record. It creates a new version.

        Payload is expected to contain the entire bulk which will replace as
        latest version

        any previous bulk. Previous bulk versions are accessible via the get
        bulk data version API.

        Support JSON and Parquet format ('Content_Type' must be set
        accordingly).

        Support http chunked encoding transfer.

        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_data_ddms_v3_welllogs__record_id__data_post
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: |-
                {
                  "columns":[
                    "Ref",
                    "col_1",
                    "col_2"
                  ],
                  "index":[
                    0,
                    1,
                    2,
                    3,
                    4
                  ],
                  "data":[
                    [
                      0.0,
                      1111.1,
                      2222.1
                    ],
                    [
                      0.5,
                      1111.2,
                      2222.2
                    ],
                    [
                      1.0,
                      1111.3,
                      2222.3
                    ],
                    [
                      1.5,
                      1111.4,
                      2222.4
                    ],
                    [
                      2.0,
                      1111.5,
                      2222.5
                    ]
                  ]
                }
          application/x-parquet:
            schema:
              format: binary
              type: string
        description: >-

          Contains the data corresponding to the dataframe. The header
          "Content-Type" must be set accordingly to the format sent:

          <br/>&nbsp;**Parquet** format(*application/x-parquet*): see [Apache
          parquet website](https://parquet.apache.org/).

          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe
          JSON format orient
          "split"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).

          .
           Examples in JSON for data with 5 rows and 3 columns: 
          <br/>`{"columns":["Ref","col_1","col_2"],"index":[0,1,2,3,4],"data":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '404':
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Writes data as a whole bulk, creates a new version.
      tags:
        - WellLog
  /ddms/v3/welllogs/{record_id}/sessions:
    get:
      operationId: list_session_ddms_v3_welllogs__record_id__sessions_get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                title: >-
                  Response List Session Ddms V3 Welllogs  Record Id  Sessions
                  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: list session of the given record.
      tags:
        - WellLog
    post:
      description: >-
        Initiate a session based on record version provided. The session is
        isolated from any other modifications. Inside a session, individual
        chunk doesn't generate new individual version. A new single version is
        created only at session completion 'aggregating' all updates. A typical
        workflow is:

        1. create a session

        2. send X chunks (can be parallelized)

        3. commit the session


        Session has an expiry time. If the session is not completed before, it's
        automatically dropped. The session duration is specified in the request
        but cannot exceeds 24 hours.
      operationId: create_session_ddms_v3_welllogs__record_id__sessions_post
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSessionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create a new session on the given record for writing bulk data.
      tags:
        - WellLog
  /ddms/v3/welllogs/{record_id}/sessions/{session_id}:
    get:
      operationId: get_session_ddms_v3_welllogs__record_id__sessions__session_id__get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            title: Session Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: get session.
      tags:
        - WellLog
    patch:
      operationId: >-
        complete_session_ddms_v3_welllogs__record_id__sessions__session_id__patch
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            title: Session Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionState'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Update a session, either commit or abandon.
      tags:
        - WellLog
  /ddms/v3/welllogs/{record_id}/sessions/{session_id}/data:
    post:
      description: >-
        Send a data chunk. Session must be complete/commit once all chunks are
        sent. This will create a new and single version aggregating all and
        previous bulk.Support JSON and Parquet format ('Content_Type' must be
        set accordingly). Support http chunked encoding.<p>Required roles:
        'users.datalake.editors' or 'users.datalake.admins'.</p>
      operationId: >-
        post_chunk_data_ddms_v3_welllogs__record_id__sessions__session_id__data_post
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            title: Session Id
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: |-
                {
                  "columns":[
                    "Ref",
                    "col_1",
                    "col_2"
                  ],
                  "index":[
                    0,
                    1,
                    2,
                    3,
                    4
                  ],
                  "data":[
                    [
                      0.0,
                      1111.1,
                      2222.1
                    ],
                    [
                      0.5,
                      1111.2,
                      2222.2
                    ],
                    [
                      1.0,
                      1111.3,
                      2222.3
                    ],
                    [
                      1.5,
                      1111.4,
                      2222.4
                    ],
                    [
                      2.0,
                      1111.5,
                      2222.5
                    ]
                  ]
                }
          application/x-parquet:
            schema:
              format: binary
              type: string
        description: >-

          Contains the data corresponding to the dataframe. The header
          "Content-Type" must be set accordingly to the format sent:

          <br/>&nbsp;**Parquet** format(*application/x-parquet*): see [Apache
          parquet website](https://parquet.apache.org/).

          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe
          JSON format orient
          "split"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).

          .
           Examples in JSON for data with 5 rows and 3 columns: 
          <br/>`{"columns":["Ref","col_1","col_2"],"index":[0,1,2,3,4],"data":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '400':
          description: Record not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Send a data chunk. Session must be complete/commit once all chunks are
        sent.
      tags:
        - WellLog
  /ddms/v3/welllogs/{record_id}/versions/{version}/data:
    get:
      description: >
        Returns the data of a specific version according to the specified query
        parameters. Multiple media types response are available
        ("application/json", "application/x-parquet") The desired format can be
        specify in "Accept" header. The default is Parquet. When bulk statistics
        are requested using "describe" parameter, the response is always
        provided in JSON

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: >-
        get_data_version_ddms_v3_welllogs__record_id__versions__version__data_get
      parameters:
        - in: path
          name: record_id
          required: true
          schema:
            title: Record Id
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - description: >-
            The number of rows that are to be skipped and not included in the
            result.
          example: 5
          in: query
          name: offset
          required: false
          schema:
            description: >-
              The number of rows that are to be skipped and not included in the
              result.
            minimum: 0
            title: Offset
            type: integer
        - description: The maximum number of rows to be returned.
          example: 100
          in: query
          name: limit
          required: false
          schema:
            description: The maximum number of rows to be returned.
            minimum: 1
            title: Limit
            type: integer
        - description: >-
            Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
          example: MD,GR
          in: query
          name: curves
          required: false
          schema:
            description: >-
              Filters curves. List of curves to be returned. The curves are
              returned in the same order as it is given.
            title: Curves
            type: string
        - description: >-
            The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          example: 'false'
          in: query
          name: describe
          required: false
          schema:
            default: false
            description: >-
              The "describe" query option allows clients to request a
              description of the matching result. (number of rows, columns name)
            title: Describe
            type: boolean
        - description: >

            The "filter" query parameter allows clients to filter data following
            the pattern $column_name:$operator:$value

            <br/>supported operation : eq,gt,gte,in,lt,lte,neq

            <br/>see [website for Filtering API
            Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
          example: MD:lt:1000
          in: query
          name: filter
          required: false
          schema:
            description: >

              The "filter" query parameter allows clients to filter data
              following the pattern $column_name:$operator:$value

              <br/>supported operation : eq,gt,gte,in,lt,lte,neq

              <br/>see [website for Filtering API
              Design](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/#rhs-colon/).
            items:
              type: string
            title: Filter
            type: array
        - description: format for JSON only.
          in: query
          name: orient
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/JSONOrient'
            default: split
            description: format for JSON only.
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
          description: Successful Response
        '404':
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Returns data of the specified version.
      tags:
        - WellLog
  /ddms/v3/welllogs/{welllogid}:
    delete:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: del_osdu_welllog
      parameters:
        - in: path
          name: welllogid
          required: true
          schema:
            title: Welllogid
            type: string
        - in: query
          name: purge
          required: false
          schema:
            default: false
            title: Purge
            type: boolean
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '204':
          description: Record deleted successfully
        '404':
          description: WellLog not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Delete the welllog. The API performs a logical deletion of the given
        record. No recursive delete for OSDU kinds
      tags:
        - WellLog
    get:
      description: >
        Get the WellLog object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_welllog_osdu
      parameters:
        - in: path
          name: welllogid
          required: true
          schema:
            title: Welllogid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellLog110'
          description: Successful Response
        '404':
          description: WellLog not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the WellLog using osdu schema
      tags:
        - WellLog
  /ddms/v3/welllogs/{welllogid}/versions:
    get:
      description: >

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_welllog_versions
      parameters:
        - in: path
          name: welllogid
          required: true
          schema:
            title: Welllogid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
          description: Successful Response
        '404':
          description: WellLog not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get all versions of the WellLog
      tags:
        - WellLog
  /ddms/v3/welllogs/{welllogid}/versions/{version}:
    get:
      description: >
        "Get the WellLog object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_welllog_version
      parameters:
        - in: path
          name: welllogid
          required: true
          schema:
            title: Welllogid
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellLog110'
          description: Successful Response
        '404':
          description: WellLog not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the given version of the WellLog using OSDU welllog schema
      tags:
        - WellLog
  /ddms/v3/wells:
    post:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: post_well_osdu
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            example:
              - acl:
                  owners:
                    - data.default.owners@{{datapartitionid}}.{{domain}}
                  viewers:
                    - data.default.viewers@{{datapartitionid}}.{{domain}}
                data:
                  ExtensionProperties: {}
                  FacilityName: '{{wellName}}'
                  FacilityNameAliases:
                    - AliasName: 20-000-00000-00
                      AliasNameTypeID: >-
                        {{datapartitionid}}:osdu:reference-data--AliasNameType:UniqueIdentifier:
                id: '{{datapartitionid}}:master-data--Well:{{wellId}}'
                kind: osdu:wks:master-data--Well:1.0.0
                legal:
                  legaltags:
                    - '{{legaltags}}'
                  otherRelevantDataCountries:
                    - FR
                    - US
                  status: compliant
            schema:
              items:
                $ref: '#/components/schemas/Well'
              title: Wells
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
          description: Successful Response
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create or update the Wells using osdu schema
      tags:
        - Well
  /ddms/v3/wells/{wellid}:
    delete:
      description: >-
        <p>Required roles: 'users.datalake.editors' or
        'users.datalake.admins'.</p>
      operationId: del_osdu_well
      parameters:
        - in: path
          name: wellid
          required: true
          schema:
            title: Wellid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '204':
          description: Record deleted successfully
        '404':
          description: Well not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: >-
        Delete the well. The API performs a logical deletion of the given
        record. No recursive delete for OSDU kinds
      tags:
        - Well
    get:
      description: >
        Get the Well object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_well_osdu
      parameters:
        - in: path
          name: wellid
          required: true
          schema:
            title: Wellid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Well'
          description: Successful Response
        '404':
          description: Well not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the Well using osdu schema
      tags:
        - Well
  /ddms/v3/wells/{wellid}/versions:
    get:
      description: >

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_well_versions
      parameters:
        - in: path
          name: wellid
          required: true
          schema:
            title: Wellid
            type: string
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
          description: Successful Response
        '404':
          description: Well not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get all versions of the Well
      tags:
        - Well
  /ddms/v3/wells/{wellid}/versions/{version}:
    get:
      description: >
        "Get the Well object using its **id**. 

        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'
        or 'users.datalake.admins'.

        "In addition, users must be a member of data groups to access the
        data.</p>
      operationId: get_osdu_well_version
      parameters:
        - in: path
          name: wellid
          required: true
          schema:
            title: Wellid
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Well'
          description: Successful Response
        '404':
          description: Well not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Get the given version of the Well using OSDU well schema
      tags:
        - Well
  /log-recognition/family:
    post:
      description: >-
        Find the most probable family and unit using family assignment rule
        based catalogs. User defined catalog will have the priority.
      operationId: family
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuessRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Recognize family and unit
      tags:
        - log-recognition
  /log-recognition/upload-catalog:
    put:
      description: >-
        Upload user-defined catalog with family assignment rules for specific
        partition ID. 
                    If there is an existing catalog, it will be replaced. It takes maximum of 5 mins to replace the existing catalog. 
                    Hence, any call to retrieve the family should be made after 5 mins of uploading the catalog. <p>Required roles: 'users.datalake.editors' or 'users.datalake.admins'.</p>
      operationId: upload-catalog
      parameters:
        - description: identifier of the data partition to query
          in: header
          name: data-partition-id
          required: false
          schema:
            description: identifier of the data partition to query
            minLength: 1
            title: data partition id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRecord'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Upload user-defined catalog with family assignment rules
      tags:
        - log-recognition
  /version:
    get:
      operationId: get_version_version_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDetailsResponse'
          description: Successful Response
      security:
        - HTTPBearer: []
      summary: Get Version
      tags:
        - Wellbore DDMS
